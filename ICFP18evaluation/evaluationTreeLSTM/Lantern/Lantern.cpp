
      #include <fcntl.h>
      #include <errno.h>
      #include <err.h>
      #include <sys/mman.h>
      #include <sys/stat.h>
      #include <stdio.h>
      #include <stdint.h>
      #include <unistd.h>
      #include <time.h>
      #include <functional>
      #include <memory>
      #include <math.h>
      #include <random>

      using namespace std;
      #ifndef MAP_FILE
      #define MAP_FILE MAP_SHARED
      #endif
      int fsize(int fd) {
        struct stat stat;
        int res = fstat(fd,&stat);
        return stat.st_size;
      }
      int printll(char* s) {
        while (*s != '\n' && *s != ',' && *s != '\t') {
          putchar(*s++);
        }
        return 0;
      }
      long hash(char *str0, int len)
      {
        unsigned char* str = (unsigned char*)str0;
        unsigned long hash = 5381;
        int c;

        while ((c = *str++) && len--)
          hash = ((hash << 5) + hash) + c; /* hash * 33 + c */

        return hash;
      }
      int HEAP_SIZE = 1073741826; // 1048576;  //2147483652; //536870912; // 268435456; //2097152; 
      void *mallocBase = malloc(HEAP_SIZE);
      void *mallocAddr = mallocBase;
      void *waterMark  = mallocBase;
      void* myMalloc(size_t bytes) {
        void* res = mallocAddr;
        mallocAddr += bytes;
        return res;
      }


      void Snippet(char*);

      std::random_device rd{};
      std::mt19937 gen{rd()};
      std::normal_distribution<> d{0,1};

      int main(int argc, char *argv[])
      {

        if (argc != 2) {
          printf("usage: query <filename>\n");
          return 0;
        }
        Snippet(argv[1]);
        return 0;
      }

      
/*****************************************
  Emitting C Generated Code                  
*******************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
void Snippet(char*  x0) {
double x1 = ((double)clock() / CLOCKS_PER_SEC);
int32_t* x2 = (int32_t*)myMalloc(1 * sizeof(int32_t));
int64_t x3 = (long)fopen("small_glove.txt", "r");
if (fscanf((FILE *)x3,"%d", &x2[0])!=1) perror("Error reading file");
int32_t x5 = x2[0];
double** x6 = (double**)myMalloc(x5 * sizeof(double*));
for(int x8=0; x8 < x5; x8++) {
double* x9 = (double*)myMalloc(300 * sizeof(double));
x6[x8] = x9;
for(int x12=0; x12 < 300; x12++) {
double* x13 = x6[x8];
if (fscanf((FILE *)x3,"%lf", &x13[x12])!=1) perror("Error reading file");

}

}
fclose((FILE*)x3);
int32_t* x20 = (int32_t*)myMalloc(1 * sizeof(int32_t));
int64_t x21 = (long)fopen("array_tree.txt", "r");
if (fscanf((FILE *)x21,"%d", &x20[0])!=1) perror("Error reading file");
int32_t x23 = x20[0];
int32_t x24 = x23 * 4;
int** x25 = (int**)myMalloc(x24 * sizeof(int*));
int32_t* x26 = (int32_t*)myMalloc(1 * sizeof(int32_t));
for(int x28=0; x28 < x23; x28++) {
if (fscanf((FILE *)x21,"%d", &x26[0])!=1) perror("Error reading file");
int32_t x32 = x28 * 4;
for(int x31=0; x31 < 4; x31++) {
int32_t x34 = x26[0];
int32_t* x35 = (int32_t*)myMalloc(x34 * sizeof(int32_t));
int32_t x33 = x32 + x31;
x25[x33] = x35;
for(int x38=0; x38 < x34; x38++) {
int* x39 = x25[x33];
if (fscanf((FILE *)x21,"%d", &x39[x38])!=1) perror("Error reading file");

}

}

}
fclose((FILE*)x21);
srand(time(NULL)+0);
double* x49 = (double*)myMalloc(45000 * sizeof(double));
for(int x51=0; x51 < 45000; x51++) {
double x52 = (double)rand()/RAND_MAX*2.0-1.0;
double x53 = x52 * 0.01;
x49[x51] = x53;

}
double* x57 = (double*)myMalloc(150 * sizeof(double));
for(int x59=0; x59 < 150; x59++) {
x57[x59] = 0.0;

}
srand(time(NULL)+0);
double* x64 = (double*)myMalloc(45000 * sizeof(double));
for(int x65=0; x65 < 45000; x65++) {
double x66 = (double)rand()/RAND_MAX*2.0-1.0;
double x67 = x66 * 0.01;
x64[x65] = x67;

}
double* x71 = (double*)myMalloc(150 * sizeof(double));
for(int x72=0; x72 < 150; x72++) {
x71[x72] = 0.0;

}
srand(time(NULL)+0);
double* x77 = (double*)myMalloc(45000 * sizeof(double));
for(int x78=0; x78 < 45000; x78++) {
double x79 = (double)rand()/RAND_MAX*2.0-1.0;
double x80 = x79 * 0.01;
x77[x78] = x80;

}
double* x84 = (double*)myMalloc(150 * sizeof(double));
for(int x85=0; x85 < 150; x85++) {
x84[x85] = 0.0;

}
srand(time(NULL)+0);
double* x90 = (double*)myMalloc(22500 * sizeof(double));
for(int x92=0; x92 < 22500; x92++) {
double x93 = (double)rand()/RAND_MAX*2.0-1.0;
double x94 = x93 * 0.01;
x90[x92] = x94;

}
srand(time(NULL)+0);
double* x99 = (double*)myMalloc(22500 * sizeof(double));
for(int x100=0; x100 < 22500; x100++) {
double x101 = (double)rand()/RAND_MAX*2.0-1.0;
double x102 = x101 * 0.01;
x99[x100] = x102;

}
double* x106 = (double*)myMalloc(150 * sizeof(double));
for(int x107=0; x107 < 150; x107++) {
x106[x107] = 0.0;

}
srand(time(NULL)+0);
double* x112 = (double*)myMalloc(22500 * sizeof(double));
for(int x113=0; x113 < 22500; x113++) {
double x114 = (double)rand()/RAND_MAX*2.0-1.0;
double x115 = x114 * 0.01;
x112[x113] = x115;

}
srand(time(NULL)+0);
double* x120 = (double*)myMalloc(22500 * sizeof(double));
for(int x121=0; x121 < 22500; x121++) {
double x122 = (double)rand()/RAND_MAX*2.0-1.0;
double x123 = x122 * 0.01;
x120[x121] = x123;

}
srand(time(NULL)+0);
double* x128 = (double*)myMalloc(22500 * sizeof(double));
for(int x129=0; x129 < 22500; x129++) {
double x130 = (double)rand()/RAND_MAX*2.0-1.0;
double x131 = x130 * 0.01;
x128[x129] = x131;

}
srand(time(NULL)+0);
double* x136 = (double*)myMalloc(22500 * sizeof(double));
for(int x137=0; x137 < 22500; x137++) {
double x138 = (double)rand()/RAND_MAX*2.0-1.0;
double x139 = x138 * 0.01;
x136[x137] = x139;

}
double* x143 = (double*)myMalloc(150 * sizeof(double));
for(int x144=0; x144 < 150; x144++) {
x143[x144] = 0.0;

}
srand(time(NULL)+0);
double* x149 = (double*)myMalloc(22500 * sizeof(double));
for(int x150=0; x150 < 22500; x150++) {
double x151 = (double)rand()/RAND_MAX*2.0-1.0;
double x152 = x151 * 0.01;
x149[x150] = x152;

}
srand(time(NULL)+0);
double* x157 = (double*)myMalloc(22500 * sizeof(double));
for(int x158=0; x158 < 22500; x158++) {
double x159 = (double)rand()/RAND_MAX*2.0-1.0;
double x160 = x159 * 0.01;
x157[x158] = x160;

}
double* x164 = (double*)myMalloc(150 * sizeof(double));
for(int x165=0; x165 < 150; x165++) {
x164[x165] = 0.0;

}
srand(time(NULL)+0);
double* x170 = (double*)myMalloc(22500 * sizeof(double));
for(int x171=0; x171 < 22500; x171++) {
double x172 = (double)rand()/RAND_MAX*2.0-1.0;
double x173 = x172 * 0.01;
x170[x171] = x173;

}
srand(time(NULL)+0);
double* x178 = (double*)myMalloc(22500 * sizeof(double));
for(int x179=0; x179 < 22500; x179++) {
double x180 = (double)rand()/RAND_MAX*2.0-1.0;
double x181 = x180 * 0.01;
x178[x179] = x181;

}
double* x185 = (double*)myMalloc(150 * sizeof(double));
for(int x186=0; x186 < 150; x186++) {
x185[x186] = 0.0;

}
srand(time(NULL)+0);
double* x191 = (double*)myMalloc(750 * sizeof(double));
for(int x193=0; x193 < 750; x193++) {
double x194 = (double)rand()/RAND_MAX*2.0-1.0;
double x195 = x194 * 0.01;
x191[x193] = x195;

}
double* x199 = (double*)myMalloc(5 * sizeof(double));
for(int x201=0; x201 < 5; x201++) {
x199[x201] = 0.0;

}
double* x205 = (double*)myMalloc(45000 * sizeof(double));
for(int x206=0; x206 < 45000; x206++) {
x205[x206] = 0.0;

}
double* x210 = (double*)myMalloc(150 * sizeof(double));
for(int x211=0; x211 < 150; x211++) {
x210[x211] = 0.0;

}
double* x215 = (double*)myMalloc(45000 * sizeof(double));
for(int x216=0; x216 < 45000; x216++) {
x215[x216] = 0.0;

}
double* x220 = (double*)myMalloc(150 * sizeof(double));
for(int x221=0; x221 < 150; x221++) {
x220[x221] = 0.0;

}
double* x225 = (double*)myMalloc(45000 * sizeof(double));
for(int x226=0; x226 < 45000; x226++) {
x225[x226] = 0.0;

}
double* x230 = (double*)myMalloc(150 * sizeof(double));
for(int x231=0; x231 < 150; x231++) {
x230[x231] = 0.0;

}
double* x235 = (double*)myMalloc(22500 * sizeof(double));
for(int x236=0; x236 < 22500; x236++) {
x235[x236] = 0.0;

}
double* x240 = (double*)myMalloc(22500 * sizeof(double));
for(int x241=0; x241 < 22500; x241++) {
x240[x241] = 0.0;

}
double* x245 = (double*)myMalloc(150 * sizeof(double));
for(int x246=0; x246 < 150; x246++) {
x245[x246] = 0.0;

}
double* x250 = (double*)myMalloc(22500 * sizeof(double));
for(int x251=0; x251 < 22500; x251++) {
x250[x251] = 0.0;

}
double* x255 = (double*)myMalloc(22500 * sizeof(double));
for(int x256=0; x256 < 22500; x256++) {
x255[x256] = 0.0;

}
double* x260 = (double*)myMalloc(22500 * sizeof(double));
for(int x261=0; x261 < 22500; x261++) {
x260[x261] = 0.0;

}
double* x265 = (double*)myMalloc(22500 * sizeof(double));
for(int x266=0; x266 < 22500; x266++) {
x265[x266] = 0.0;

}
double* x270 = (double*)myMalloc(150 * sizeof(double));
for(int x271=0; x271 < 150; x271++) {
x270[x271] = 0.0;

}
double* x275 = (double*)myMalloc(22500 * sizeof(double));
for(int x276=0; x276 < 22500; x276++) {
x275[x276] = 0.0;

}
double* x280 = (double*)myMalloc(22500 * sizeof(double));
for(int x281=0; x281 < 22500; x281++) {
x280[x281] = 0.0;

}
double* x285 = (double*)myMalloc(150 * sizeof(double));
for(int x286=0; x286 < 150; x286++) {
x285[x286] = 0.0;

}
double* x290 = (double*)myMalloc(22500 * sizeof(double));
for(int x291=0; x291 < 22500; x291++) {
x290[x291] = 0.0;

}
double* x295 = (double*)myMalloc(22500 * sizeof(double));
for(int x296=0; x296 < 22500; x296++) {
x295[x296] = 0.0;

}
double* x300 = (double*)myMalloc(150 * sizeof(double));
for(int x301=0; x301 < 150; x301++) {
x300[x301] = 0.0;

}
double* x305 = (double*)myMalloc(750 * sizeof(double));
for(int x306=0; x306 < 750; x306++) {
x305[x306] = 0.0;

}
double* x310 = (double*)myMalloc(5 * sizeof(double));
for(int x311=0; x311 < 5; x311++) {
x310[x311] = 0.0;

}
double* x315 = (double*)myMalloc(300 * sizeof(double));
for(int x316=0; x316 < 300; x316++) {
x315[x316] = 0.0;

}
double* x320 = (double*)myMalloc(300 * sizeof(double));
for(int x321=0; x321 < 300; x321++) {
x320[x321] = 0.0;

}
double* x325 = (double*)myMalloc(150 * sizeof(double));
for(int x326=0; x326 < 150; x326++) {
x325[x326] = 0.0;

}
double* x330 = (double*)myMalloc(150 * sizeof(double));
for(int x331=0; x331 < 150; x331++) {
x330[x331] = 0.0;

}
double* x335 = (double*)myMalloc(1 * sizeof(double));
for(int x337=0; x337 < 1; x337++) {
x335[x337] = 0.05;

}
double* x341 = (double*)myMalloc(1 * sizeof(double));
for(int x342=0; x342 < 1; x342++) {
x341[x342] = 1.0E-8;

}
double* x346 = (double*)myMalloc(45000 * sizeof(double));
for(int x347=0; x347 < 45000; x347++) {
x346[x347] = 0.0;

}
double* x351 = (double*)myMalloc(150 * sizeof(double));
for(int x352=0; x352 < 150; x352++) {
x351[x352] = 0.0;

}
double* x356 = (double*)myMalloc(45000 * sizeof(double));
for(int x357=0; x357 < 45000; x357++) {
x356[x357] = 0.0;

}
double* x361 = (double*)myMalloc(150 * sizeof(double));
for(int x362=0; x362 < 150; x362++) {
x361[x362] = 0.0;

}
double* x366 = (double*)myMalloc(45000 * sizeof(double));
for(int x367=0; x367 < 45000; x367++) {
x366[x367] = 0.0;

}
double* x371 = (double*)myMalloc(150 * sizeof(double));
for(int x372=0; x372 < 150; x372++) {
x371[x372] = 0.0;

}
double* x376 = (double*)myMalloc(22500 * sizeof(double));
for(int x377=0; x377 < 22500; x377++) {
x376[x377] = 0.0;

}
double* x381 = (double*)myMalloc(22500 * sizeof(double));
for(int x382=0; x382 < 22500; x382++) {
x381[x382] = 0.0;

}
double* x386 = (double*)myMalloc(150 * sizeof(double));
for(int x387=0; x387 < 150; x387++) {
x386[x387] = 0.0;

}
double* x391 = (double*)myMalloc(22500 * sizeof(double));
for(int x392=0; x392 < 22500; x392++) {
x391[x392] = 0.0;

}
double* x396 = (double*)myMalloc(22500 * sizeof(double));
for(int x397=0; x397 < 22500; x397++) {
x396[x397] = 0.0;

}
double* x401 = (double*)myMalloc(22500 * sizeof(double));
for(int x402=0; x402 < 22500; x402++) {
x401[x402] = 0.0;

}
double* x406 = (double*)myMalloc(22500 * sizeof(double));
for(int x407=0; x407 < 22500; x407++) {
x406[x407] = 0.0;

}
double* x411 = (double*)myMalloc(150 * sizeof(double));
for(int x412=0; x412 < 150; x412++) {
x411[x412] = 0.0;

}
double* x416 = (double*)myMalloc(22500 * sizeof(double));
for(int x417=0; x417 < 22500; x417++) {
x416[x417] = 0.0;

}
double* x421 = (double*)myMalloc(22500 * sizeof(double));
for(int x422=0; x422 < 22500; x422++) {
x421[x422] = 0.0;

}
double* x426 = (double*)myMalloc(150 * sizeof(double));
for(int x427=0; x427 < 150; x427++) {
x426[x427] = 0.0;

}
double* x431 = (double*)myMalloc(22500 * sizeof(double));
for(int x432=0; x432 < 22500; x432++) {
x431[x432] = 0.0;

}
double* x436 = (double*)myMalloc(22500 * sizeof(double));
for(int x437=0; x437 < 22500; x437++) {
x436[x437] = 0.0;

}
double* x441 = (double*)myMalloc(150 * sizeof(double));
for(int x442=0; x442 < 150; x442++) {
x441[x442] = 0.0;

}
double* x446 = (double*)myMalloc(750 * sizeof(double));
for(int x447=0; x447 < 750; x447++) {
x446[x447] = 0.0;

}
double* x451 = (double*)myMalloc(5 * sizeof(double));
for(int x452=0; x452 < 5; x452++) {
x451[x452] = 0.0;

}
double* x456 = (double*)myMalloc(30 * sizeof(double));
int64_t x457 = (long)mallocAddr;
double x458 = ((double)clock() / CLOCKS_PER_SEC);
for(int x460=0; x460 < 30; x460++) {
double x461 = 0.0;
for(int x462=0; x462 < x23; x462++) {
int32_t x463 = x462 % x23;
int32_t x464 = x463 * 4;
int32_t x468 = x464 + 2;
int* x469 = x25[x468];
int32_t x470 = x464 + 3;
int* x471 = x25[x470];
int* x465 = x25[x464];
int32_t x466 = x464 + 1;
int* x467 = x25[x466];
function<void(int32_t,function<void(double**)>,double**)> x517 = [&](int32_t x518,function<void(double**)> x519,double** x520) {
int32_t x521 = x518;
bool x530 = x521 >= 0;
if (x530) {
int32_t x531 = x469[x521];
double** x2411 = (double**)myMalloc(6 * sizeof(double*));
double** x523 = x520;
double* x524 = x523[0];
x2411[0] = x524;
double* x525 = x523[1];
x2411[1] = x525;
double* x526 = x523[2];
x2411[2] = x526;
double* x527 = x523[3];
x2411[3] = x527;
double* x528 = x523[4];
x2411[4] = x528;
double* x529 = x523[5];
x2411[5] = x529;
function<void(double**)> x522 = x519;
function<void(double**)> x532 = [&](double** x533) {
int32_t x540 = x471[x521];
double** x2401 = (double**)myMalloc(6 * sizeof(double*));
x2401[0] = x524;
x2401[1] = x525;
x2401[2] = x526;
x2401[3] = x527;
x2401[4] = x528;
x2401[5] = x529;
double* x534 = x533[0];
double* x535 = x533[1];
double* x538 = x533[4];
double* x539 = x533[5];
double* x536 = x533[2];
double* x537 = x533[3];
function<void(double**)> x541 = [&](double** x542) {
double* x549 = (double*)myMalloc(5 * sizeof(double));
for(int x550=0; x550 < 5; x550++) {
x549[x550] = 0.0;

}
int32_t x554 = x465[x521];
x549[x554] = 1.0;
double* x556 = (double*)myMalloc(5 * sizeof(double));
for(int x557=0; x557 < 5; x557++) {
x556[x557] = 0.0;

}
int32_t x561 = x469[x521];
bool x562 = x561 < 0;
if (x562) {
int32_t x2382 = x467[x521];
double* x2383 = x6[x2382];
double* x2384 = (double*)myMalloc(300 * sizeof(double));
for(int x2385=0; x2385 < 300; x2385++) {
x2384[x2385] = 0.0;

}
double** x2389 = (double**)myMalloc(2 * sizeof(double*));
x2389[0] = x2383;
x2389[1] = x2384;
double* x543 = x542[0];
double* x544 = x542[1];
double* x547 = x542[4];
double* x548 = x542[5];
double* x545 = x542[2];
double* x546 = x542[3];
function<void(double**)> x563 = [&](double** x564) {
int32_t x567 = x469[x521];
bool x568 = x567 < 0;
if (x568) {
double* x2090 = (double*)myMalloc(150 * sizeof(double));
double* x565 = x564[0];
for(int x2091=0; x2091 < 150; x2091++) {
double x2092 = 0.0;
int32_t x2094 = 300 * x2091;
for(int x2093=0; x2093 < 300; x2093++) {
int32_t x2095 = x2093 + x2094;
double x2096 = x49[x2095];
double x2097 = x565[x2093];
double x2098 = x2096 * x2097;
x2092 += x2098;

}
double x2102 = x2092;
x2090[x2091] = x2102;

}
double* x2106 = (double*)myMalloc(150 * sizeof(double));
for(int x2107=0; x2107 < 150; x2107++) {
x2106[x2107] = 0.0;

}
double* x2111 = (double*)myMalloc(150 * sizeof(double));
for(int x2112=0; x2112 < 150; x2112++) {
double x2113 = x2090[x2112];
double x2114 = x57[x2112];
double x2115 = x2113 + x2114;
x2111[x2112] = x2115;

}
double* x2119 = (double*)myMalloc(150 * sizeof(double));
for(int x2120=0; x2120 < 150; x2120++) {
x2119[x2120] = 0.0;

}
double* x2124 = (double*)myMalloc(150 * sizeof(double));
for(int x2125=0; x2125 < 150; x2125++) {
double x2126 = x2111[x2125];
double x2127 = -1.0 * x2126;
double x2128 = exp(x2127);
double x2129 = x2128 + 1.0;
double x2130 = 1.0 / x2129;
x2124[x2125] = x2130;

}
double* x2134 = (double*)myMalloc(150 * sizeof(double));
for(int x2135=0; x2135 < 150; x2135++) {
x2134[x2135] = 0.0;

}
double** x2139 = (double**)myMalloc(2 * sizeof(double*));
x2139[0] = x2124;
x2139[1] = x2134;
double* x566 = x564[1];
function<void(double**)> x569 = [&](double** x570) {
int32_t x573 = x469[x521];
bool x574 = x573 < 0;
if (x574) {
double** x1900 = (double**)myMalloc(2 * sizeof(double*));
x1900[0] = x325;
x1900[1] = x330;
double* x571 = x570[0];
double* x572 = x570[1];
function<void(double**)> x575 = [&](double** x576) {
int32_t x579 = x469[x521];
bool x580 = x579 < 0;
if (x580) {
double** x1710 = (double**)myMalloc(2 * sizeof(double*));
x1710[0] = x325;
x1710[1] = x330;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1710);
} else {
double* x1715 = (double*)myMalloc(150 * sizeof(double));
for(int x1716=0; x1716 < 150; x1716++) {
double x1717 = 0.0;
int32_t x1719 = 150 * x1716;
for(int x1718=0; x1718 < 150; x1718++) {
int32_t x1720 = x1718 + x1719;
double x1721 = x128[x1720];
double x1722 = x536[x1718];
double x1723 = x1721 * x1722;
x1717 += x1723;

}
double x1727 = x1717;
x1715[x1716] = x1727;

}
double* x1731 = (double*)myMalloc(150 * sizeof(double));
for(int x1732=0; x1732 < 150; x1732++) {
x1731[x1732] = 0.0;

}
double* x1736 = (double*)myMalloc(150 * sizeof(double));
for(int x1737=0; x1737 < 150; x1737++) {
double x1738 = 0.0;
int32_t x1740 = 150 * x1737;
for(int x1739=0; x1739 < 150; x1739++) {
int32_t x1741 = x1739 + x1740;
double x1742 = x136[x1741];
double x1743 = x545[x1739];
double x1744 = x1742 * x1743;
x1738 += x1744;

}
double x1748 = x1738;
x1736[x1737] = x1748;

}
double* x1752 = (double*)myMalloc(150 * sizeof(double));
for(int x1753=0; x1753 < 150; x1753++) {
x1752[x1753] = 0.0;

}
double* x1757 = (double*)myMalloc(150 * sizeof(double));
for(int x1758=0; x1758 < 150; x1758++) {
double x1759 = x1715[x1758];
double x1760 = x1736[x1758];
double x1761 = x1759 + x1760;
x1757[x1758] = x1761;

}
double* x1765 = (double*)myMalloc(150 * sizeof(double));
for(int x1766=0; x1766 < 150; x1766++) {
x1765[x1766] = 0.0;

}
double* x1770 = (double*)myMalloc(150 * sizeof(double));
for(int x1771=0; x1771 < 150; x1771++) {
double x1772 = x1757[x1771];
double x1773 = x143[x1771];
double x1774 = x1772 + x1773;
x1770[x1771] = x1774;

}
double* x1778 = (double*)myMalloc(150 * sizeof(double));
for(int x1779=0; x1779 < 150; x1779++) {
x1778[x1779] = 0.0;

}
double* x1783 = (double*)myMalloc(150 * sizeof(double));
for(int x1784=0; x1784 < 150; x1784++) {
double x1785 = x1770[x1784];
double x1786 = -1.0 * x1785;
double x1787 = exp(x1786);
double x1788 = x1787 + 1.0;
double x1789 = 1.0 / x1788;
x1783[x1784] = x1789;

}
double* x1793 = (double*)myMalloc(150 * sizeof(double));
for(int x1794=0; x1794 < 150; x1794++) {
x1793[x1794] = 0.0;

}
double** x1798 = (double**)myMalloc(2 * sizeof(double*));
x1798[0] = x1783;
x1798[1] = x1793;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1798);
for(int x1802=0; x1802 < 150; x1802++) {
double x1803 = x1778[x1802];
double x1804 = x1783[x1802];
double x1807 = x1793[x1802];
double x1805 = 1.0 - x1804;
double x1806 = x1805 * x1804;
double x1808 = x1806 * x1807;
double x1809 = x1803 + x1808;
x1778[x1802] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x1765[x1813];
double x1815 = x1778[x1813];
double x1816 = x1814 + x1815;
x1765[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x270[x1820];
double x1822 = x1778[x1820];
double x1823 = x1821 + x1822;
x270[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1731[x1827];
double x1829 = x1765[x1827];
double x1830 = x1828 + x1829;
x1731[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
double x1835 = x1752[x1834];
double x1836 = x1765[x1834];
double x1837 = x1835 + x1836;
x1752[x1834] = x1837;

}
for(int x1841=0; x1841 < 150; x1841++) {
int32_t x1843 = 150 * x1841;
for(int x1842=0; x1842 < 150; x1842++) {
int32_t x1844 = x1843 + x1842;
double x1845 = x265[x1844];
double x1847 = x1752[x1841];
double x1846 = x545[x1842];
double x1848 = x1846 * x1847;
double x1849 = x1845 + x1848;
x265[x1844] = x1849;

}

}
for(int x1855=0; x1855 < 150; x1855++) {
int32_t x1858 = 150 * x1855;
for(int x1856=0; x1856 < 150; x1856++) {
int32_t x1859 = x1858 + x1856;
double x1860 = x136[x1859];
double x1861 = x1752[x1855];
double x1857 = x546[x1856];
double x1862 = x1860 * x1861;
double x1863 = x1857 + x1862;
x546[x1856] = x1863;

}

}
for(int x1869=0; x1869 < 150; x1869++) {
int32_t x1871 = 150 * x1869;
for(int x1870=0; x1870 < 150; x1870++) {
int32_t x1872 = x1871 + x1870;
double x1873 = x260[x1872];
double x1875 = x1731[x1869];
double x1874 = x536[x1870];
double x1876 = x1874 * x1875;
double x1877 = x1873 + x1876;
x260[x1872] = x1877;

}

}
for(int x1883=0; x1883 < 150; x1883++) {
int32_t x1886 = 150 * x1883;
for(int x1884=0; x1884 < 150; x1884++) {
int32_t x1887 = x1886 + x1884;
double x1888 = x128[x1887];
double x1889 = x1731[x1883];
double x1885 = x537[x1884];
double x1890 = x1888 * x1889;
double x1891 = x1885 + x1890;
x537[x1884] = x1891;

}

}
}
};
x575(x1900);
} else {
double* x1905 = (double*)myMalloc(150 * sizeof(double));
for(int x1906=0; x1906 < 150; x1906++) {
double x1907 = 0.0;
int32_t x1909 = 150 * x1906;
for(int x1908=0; x1908 < 150; x1908++) {
int32_t x1910 = x1908 + x1909;
double x1911 = x112[x1910];
double x1912 = x536[x1908];
double x1913 = x1911 * x1912;
x1907 += x1913;

}
double x1917 = x1907;
x1905[x1906] = x1917;

}
double* x1921 = (double*)myMalloc(150 * sizeof(double));
for(int x1922=0; x1922 < 150; x1922++) {
x1921[x1922] = 0.0;

}
double* x1926 = (double*)myMalloc(150 * sizeof(double));
for(int x1927=0; x1927 < 150; x1927++) {
double x1928 = 0.0;
int32_t x1930 = 150 * x1927;
for(int x1929=0; x1929 < 150; x1929++) {
int32_t x1931 = x1929 + x1930;
double x1932 = x120[x1931];
double x1933 = x545[x1929];
double x1934 = x1932 * x1933;
x1928 += x1934;

}
double x1938 = x1928;
x1926[x1927] = x1938;

}
double* x1942 = (double*)myMalloc(150 * sizeof(double));
for(int x1943=0; x1943 < 150; x1943++) {
x1942[x1943] = 0.0;

}
double* x1947 = (double*)myMalloc(150 * sizeof(double));
for(int x1948=0; x1948 < 150; x1948++) {
double x1949 = x1905[x1948];
double x1950 = x1926[x1948];
double x1951 = x1949 + x1950;
x1947[x1948] = x1951;

}
double* x1955 = (double*)myMalloc(150 * sizeof(double));
for(int x1956=0; x1956 < 150; x1956++) {
x1955[x1956] = 0.0;

}
double* x1960 = (double*)myMalloc(150 * sizeof(double));
for(int x1961=0; x1961 < 150; x1961++) {
double x1962 = x1947[x1961];
double x1963 = x143[x1961];
double x1964 = x1962 + x1963;
x1960[x1961] = x1964;

}
double* x1968 = (double*)myMalloc(150 * sizeof(double));
for(int x1969=0; x1969 < 150; x1969++) {
x1968[x1969] = 0.0;

}
double* x1973 = (double*)myMalloc(150 * sizeof(double));
for(int x1974=0; x1974 < 150; x1974++) {
double x1975 = x1960[x1974];
double x1976 = -1.0 * x1975;
double x1977 = exp(x1976);
double x1978 = x1977 + 1.0;
double x1979 = 1.0 / x1978;
x1973[x1974] = x1979;

}
double* x1983 = (double*)myMalloc(150 * sizeof(double));
for(int x1984=0; x1984 < 150; x1984++) {
x1983[x1984] = 0.0;

}
double** x1988 = (double**)myMalloc(2 * sizeof(double*));
x1988[0] = x1973;
x1988[1] = x1983;
double* x571 = x570[0];
double* x572 = x570[1];
function<void(double**)> x575 = [&](double** x576) {
int32_t x579 = x469[x521];
bool x580 = x579 < 0;
if (x580) {
double** x1710 = (double**)myMalloc(2 * sizeof(double*));
x1710[0] = x325;
x1710[1] = x330;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1710);
} else {
double* x1715 = (double*)myMalloc(150 * sizeof(double));
for(int x1716=0; x1716 < 150; x1716++) {
double x1717 = 0.0;
int32_t x1719 = 150 * x1716;
for(int x1718=0; x1718 < 150; x1718++) {
int32_t x1720 = x1718 + x1719;
double x1721 = x128[x1720];
double x1722 = x536[x1718];
double x1723 = x1721 * x1722;
x1717 += x1723;

}
double x1727 = x1717;
x1715[x1716] = x1727;

}
double* x1731 = (double*)myMalloc(150 * sizeof(double));
for(int x1732=0; x1732 < 150; x1732++) {
x1731[x1732] = 0.0;

}
double* x1736 = (double*)myMalloc(150 * sizeof(double));
for(int x1737=0; x1737 < 150; x1737++) {
double x1738 = 0.0;
int32_t x1740 = 150 * x1737;
for(int x1739=0; x1739 < 150; x1739++) {
int32_t x1741 = x1739 + x1740;
double x1742 = x136[x1741];
double x1743 = x545[x1739];
double x1744 = x1742 * x1743;
x1738 += x1744;

}
double x1748 = x1738;
x1736[x1737] = x1748;

}
double* x1752 = (double*)myMalloc(150 * sizeof(double));
for(int x1753=0; x1753 < 150; x1753++) {
x1752[x1753] = 0.0;

}
double* x1757 = (double*)myMalloc(150 * sizeof(double));
for(int x1758=0; x1758 < 150; x1758++) {
double x1759 = x1715[x1758];
double x1760 = x1736[x1758];
double x1761 = x1759 + x1760;
x1757[x1758] = x1761;

}
double* x1765 = (double*)myMalloc(150 * sizeof(double));
for(int x1766=0; x1766 < 150; x1766++) {
x1765[x1766] = 0.0;

}
double* x1770 = (double*)myMalloc(150 * sizeof(double));
for(int x1771=0; x1771 < 150; x1771++) {
double x1772 = x1757[x1771];
double x1773 = x143[x1771];
double x1774 = x1772 + x1773;
x1770[x1771] = x1774;

}
double* x1778 = (double*)myMalloc(150 * sizeof(double));
for(int x1779=0; x1779 < 150; x1779++) {
x1778[x1779] = 0.0;

}
double* x1783 = (double*)myMalloc(150 * sizeof(double));
for(int x1784=0; x1784 < 150; x1784++) {
double x1785 = x1770[x1784];
double x1786 = -1.0 * x1785;
double x1787 = exp(x1786);
double x1788 = x1787 + 1.0;
double x1789 = 1.0 / x1788;
x1783[x1784] = x1789;

}
double* x1793 = (double*)myMalloc(150 * sizeof(double));
for(int x1794=0; x1794 < 150; x1794++) {
x1793[x1794] = 0.0;

}
double** x1798 = (double**)myMalloc(2 * sizeof(double*));
x1798[0] = x1783;
x1798[1] = x1793;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1798);
for(int x1802=0; x1802 < 150; x1802++) {
double x1803 = x1778[x1802];
double x1804 = x1783[x1802];
double x1807 = x1793[x1802];
double x1805 = 1.0 - x1804;
double x1806 = x1805 * x1804;
double x1808 = x1806 * x1807;
double x1809 = x1803 + x1808;
x1778[x1802] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x1765[x1813];
double x1815 = x1778[x1813];
double x1816 = x1814 + x1815;
x1765[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x270[x1820];
double x1822 = x1778[x1820];
double x1823 = x1821 + x1822;
x270[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1731[x1827];
double x1829 = x1765[x1827];
double x1830 = x1828 + x1829;
x1731[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
double x1835 = x1752[x1834];
double x1836 = x1765[x1834];
double x1837 = x1835 + x1836;
x1752[x1834] = x1837;

}
for(int x1841=0; x1841 < 150; x1841++) {
int32_t x1843 = 150 * x1841;
for(int x1842=0; x1842 < 150; x1842++) {
int32_t x1844 = x1843 + x1842;
double x1845 = x265[x1844];
double x1847 = x1752[x1841];
double x1846 = x545[x1842];
double x1848 = x1846 * x1847;
double x1849 = x1845 + x1848;
x265[x1844] = x1849;

}

}
for(int x1855=0; x1855 < 150; x1855++) {
int32_t x1858 = 150 * x1855;
for(int x1856=0; x1856 < 150; x1856++) {
int32_t x1859 = x1858 + x1856;
double x1860 = x136[x1859];
double x1861 = x1752[x1855];
double x1857 = x546[x1856];
double x1862 = x1860 * x1861;
double x1863 = x1857 + x1862;
x546[x1856] = x1863;

}

}
for(int x1869=0; x1869 < 150; x1869++) {
int32_t x1871 = 150 * x1869;
for(int x1870=0; x1870 < 150; x1870++) {
int32_t x1872 = x1871 + x1870;
double x1873 = x260[x1872];
double x1875 = x1731[x1869];
double x1874 = x536[x1870];
double x1876 = x1874 * x1875;
double x1877 = x1873 + x1876;
x260[x1872] = x1877;

}

}
for(int x1883=0; x1883 < 150; x1883++) {
int32_t x1886 = 150 * x1883;
for(int x1884=0; x1884 < 150; x1884++) {
int32_t x1887 = x1886 + x1884;
double x1888 = x128[x1887];
double x1889 = x1731[x1883];
double x1885 = x537[x1884];
double x1890 = x1888 * x1889;
double x1891 = x1885 + x1890;
x537[x1884] = x1891;

}

}
}
};
x575(x1988);
for(int x1992=0; x1992 < 150; x1992++) {
double x1993 = x1968[x1992];
double x1994 = x1973[x1992];
double x1997 = x1983[x1992];
double x1995 = 1.0 - x1994;
double x1996 = x1995 * x1994;
double x1998 = x1996 * x1997;
double x1999 = x1993 + x1998;
x1968[x1992] = x1999;

}
for(int x2003=0; x2003 < 150; x2003++) {
double x2004 = x1955[x2003];
double x2005 = x1968[x2003];
double x2006 = x2004 + x2005;
x1955[x2003] = x2006;

}
for(int x2010=0; x2010 < 150; x2010++) {
double x2011 = x270[x2010];
double x2012 = x1968[x2010];
double x2013 = x2011 + x2012;
x270[x2010] = x2013;

}
for(int x2017=0; x2017 < 150; x2017++) {
double x2018 = x1921[x2017];
double x2019 = x1955[x2017];
double x2020 = x2018 + x2019;
x1921[x2017] = x2020;

}
for(int x2024=0; x2024 < 150; x2024++) {
double x2025 = x1942[x2024];
double x2026 = x1955[x2024];
double x2027 = x2025 + x2026;
x1942[x2024] = x2027;

}
for(int x2031=0; x2031 < 150; x2031++) {
int32_t x2033 = 150 * x2031;
for(int x2032=0; x2032 < 150; x2032++) {
int32_t x2034 = x2033 + x2032;
double x2035 = x255[x2034];
double x2037 = x1942[x2031];
double x2036 = x545[x2032];
double x2038 = x2036 * x2037;
double x2039 = x2035 + x2038;
x255[x2034] = x2039;

}

}
for(int x2045=0; x2045 < 150; x2045++) {
int32_t x2048 = 150 * x2045;
for(int x2046=0; x2046 < 150; x2046++) {
int32_t x2049 = x2048 + x2046;
double x2050 = x120[x2049];
double x2051 = x1942[x2045];
double x2047 = x546[x2046];
double x2052 = x2050 * x2051;
double x2053 = x2047 + x2052;
x546[x2046] = x2053;

}

}
for(int x2059=0; x2059 < 150; x2059++) {
int32_t x2061 = 150 * x2059;
for(int x2060=0; x2060 < 150; x2060++) {
int32_t x2062 = x2061 + x2060;
double x2063 = x250[x2062];
double x2065 = x1921[x2059];
double x2064 = x536[x2060];
double x2066 = x2064 * x2065;
double x2067 = x2063 + x2066;
x250[x2062] = x2067;

}

}
for(int x2073=0; x2073 < 150; x2073++) {
int32_t x2076 = 150 * x2073;
for(int x2074=0; x2074 < 150; x2074++) {
int32_t x2077 = x2076 + x2074;
double x2078 = x112[x2077];
double x2079 = x1921[x2073];
double x2075 = x537[x2074];
double x2080 = x2078 * x2079;
double x2081 = x2075 + x2080;
x537[x2074] = x2081;

}

}
}
};
x569(x2139);
for(int x2143=0; x2143 < 150; x2143++) {
double x2144 = x2119[x2143];
double x2145 = x2124[x2143];
double x2148 = x2134[x2143];
double x2146 = 1.0 - x2145;
double x2147 = x2146 * x2145;
double x2149 = x2147 * x2148;
double x2150 = x2144 + x2149;
x2119[x2143] = x2150;

}
for(int x2154=0; x2154 < 150; x2154++) {
double x2155 = x2106[x2154];
double x2156 = x2119[x2154];
double x2157 = x2155 + x2156;
x2106[x2154] = x2157;

}
for(int x2161=0; x2161 < 150; x2161++) {
double x2162 = x210[x2161];
double x2163 = x2119[x2161];
double x2164 = x2162 + x2163;
x210[x2161] = x2164;

}
for(int x2168=0; x2168 < 150; x2168++) {
int32_t x2170 = 300 * x2168;
for(int x2169=0; x2169 < 300; x2169++) {
int32_t x2171 = x2170 + x2169;
double x2172 = x205[x2171];
double x2174 = x2106[x2168];
double x2173 = x565[x2169];
double x2175 = x2173 * x2174;
double x2176 = x2172 + x2175;
x205[x2171] = x2176;

}

}
for(int x2182=0; x2182 < 150; x2182++) {
int32_t x2185 = 300 * x2182;
for(int x2183=0; x2183 < 300; x2183++) {
int32_t x2186 = x2185 + x2183;
double x2187 = x49[x2186];
double x2188 = x2106[x2182];
double x2184 = x566[x2183];
double x2189 = x2187 * x2188;
double x2190 = x2184 + x2189;
x566[x2183] = x2190;

}

}
} else {
double* x2197 = (double*)myMalloc(150 * sizeof(double));
for(int x2198=0; x2198 < 150; x2198++) {
double x2199 = 0.0;
int32_t x2201 = 150 * x2198;
for(int x2200=0; x2200 < 150; x2200++) {
int32_t x2202 = x2200 + x2201;
double x2203 = x90[x2202];
double x2204 = x536[x2200];
double x2205 = x2203 * x2204;
x2199 += x2205;

}
double x2209 = x2199;
x2197[x2198] = x2209;

}
double* x2213 = (double*)myMalloc(150 * sizeof(double));
for(int x2214=0; x2214 < 150; x2214++) {
x2213[x2214] = 0.0;

}
double* x2218 = (double*)myMalloc(150 * sizeof(double));
for(int x2219=0; x2219 < 150; x2219++) {
double x2220 = 0.0;
int32_t x2222 = 150 * x2219;
for(int x2221=0; x2221 < 150; x2221++) {
int32_t x2223 = x2221 + x2222;
double x2224 = x99[x2223];
double x2225 = x545[x2221];
double x2226 = x2224 * x2225;
x2220 += x2226;

}
double x2230 = x2220;
x2218[x2219] = x2230;

}
double* x2234 = (double*)myMalloc(150 * sizeof(double));
for(int x2235=0; x2235 < 150; x2235++) {
x2234[x2235] = 0.0;

}
double* x2239 = (double*)myMalloc(150 * sizeof(double));
for(int x2240=0; x2240 < 150; x2240++) {
double x2241 = x2197[x2240];
double x2242 = x2218[x2240];
double x2243 = x2241 + x2242;
x2239[x2240] = x2243;

}
double* x2247 = (double*)myMalloc(150 * sizeof(double));
for(int x2248=0; x2248 < 150; x2248++) {
x2247[x2248] = 0.0;

}
double* x2252 = (double*)myMalloc(150 * sizeof(double));
for(int x2253=0; x2253 < 150; x2253++) {
double x2254 = x2239[x2253];
double x2255 = x106[x2253];
double x2256 = x2254 + x2255;
x2252[x2253] = x2256;

}
double* x2260 = (double*)myMalloc(150 * sizeof(double));
for(int x2261=0; x2261 < 150; x2261++) {
x2260[x2261] = 0.0;

}
double* x2265 = (double*)myMalloc(150 * sizeof(double));
for(int x2266=0; x2266 < 150; x2266++) {
double x2267 = x2252[x2266];
double x2268 = -1.0 * x2267;
double x2269 = exp(x2268);
double x2270 = x2269 + 1.0;
double x2271 = 1.0 / x2270;
x2265[x2266] = x2271;

}
double* x2275 = (double*)myMalloc(150 * sizeof(double));
for(int x2276=0; x2276 < 150; x2276++) {
x2275[x2276] = 0.0;

}
double** x2280 = (double**)myMalloc(2 * sizeof(double*));
x2280[0] = x2265;
x2280[1] = x2275;
double* x565 = x564[0];
double* x566 = x564[1];
function<void(double**)> x569 = [&](double** x570) {
int32_t x573 = x469[x521];
bool x574 = x573 < 0;
if (x574) {
double** x1900 = (double**)myMalloc(2 * sizeof(double*));
x1900[0] = x325;
x1900[1] = x330;
double* x571 = x570[0];
double* x572 = x570[1];
function<void(double**)> x575 = [&](double** x576) {
int32_t x579 = x469[x521];
bool x580 = x579 < 0;
if (x580) {
double** x1710 = (double**)myMalloc(2 * sizeof(double*));
x1710[0] = x325;
x1710[1] = x330;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1710);
} else {
double* x1715 = (double*)myMalloc(150 * sizeof(double));
for(int x1716=0; x1716 < 150; x1716++) {
double x1717 = 0.0;
int32_t x1719 = 150 * x1716;
for(int x1718=0; x1718 < 150; x1718++) {
int32_t x1720 = x1718 + x1719;
double x1721 = x128[x1720];
double x1722 = x536[x1718];
double x1723 = x1721 * x1722;
x1717 += x1723;

}
double x1727 = x1717;
x1715[x1716] = x1727;

}
double* x1731 = (double*)myMalloc(150 * sizeof(double));
for(int x1732=0; x1732 < 150; x1732++) {
x1731[x1732] = 0.0;

}
double* x1736 = (double*)myMalloc(150 * sizeof(double));
for(int x1737=0; x1737 < 150; x1737++) {
double x1738 = 0.0;
int32_t x1740 = 150 * x1737;
for(int x1739=0; x1739 < 150; x1739++) {
int32_t x1741 = x1739 + x1740;
double x1742 = x136[x1741];
double x1743 = x545[x1739];
double x1744 = x1742 * x1743;
x1738 += x1744;

}
double x1748 = x1738;
x1736[x1737] = x1748;

}
double* x1752 = (double*)myMalloc(150 * sizeof(double));
for(int x1753=0; x1753 < 150; x1753++) {
x1752[x1753] = 0.0;

}
double* x1757 = (double*)myMalloc(150 * sizeof(double));
for(int x1758=0; x1758 < 150; x1758++) {
double x1759 = x1715[x1758];
double x1760 = x1736[x1758];
double x1761 = x1759 + x1760;
x1757[x1758] = x1761;

}
double* x1765 = (double*)myMalloc(150 * sizeof(double));
for(int x1766=0; x1766 < 150; x1766++) {
x1765[x1766] = 0.0;

}
double* x1770 = (double*)myMalloc(150 * sizeof(double));
for(int x1771=0; x1771 < 150; x1771++) {
double x1772 = x1757[x1771];
double x1773 = x143[x1771];
double x1774 = x1772 + x1773;
x1770[x1771] = x1774;

}
double* x1778 = (double*)myMalloc(150 * sizeof(double));
for(int x1779=0; x1779 < 150; x1779++) {
x1778[x1779] = 0.0;

}
double* x1783 = (double*)myMalloc(150 * sizeof(double));
for(int x1784=0; x1784 < 150; x1784++) {
double x1785 = x1770[x1784];
double x1786 = -1.0 * x1785;
double x1787 = exp(x1786);
double x1788 = x1787 + 1.0;
double x1789 = 1.0 / x1788;
x1783[x1784] = x1789;

}
double* x1793 = (double*)myMalloc(150 * sizeof(double));
for(int x1794=0; x1794 < 150; x1794++) {
x1793[x1794] = 0.0;

}
double** x1798 = (double**)myMalloc(2 * sizeof(double*));
x1798[0] = x1783;
x1798[1] = x1793;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1798);
for(int x1802=0; x1802 < 150; x1802++) {
double x1803 = x1778[x1802];
double x1804 = x1783[x1802];
double x1807 = x1793[x1802];
double x1805 = 1.0 - x1804;
double x1806 = x1805 * x1804;
double x1808 = x1806 * x1807;
double x1809 = x1803 + x1808;
x1778[x1802] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x1765[x1813];
double x1815 = x1778[x1813];
double x1816 = x1814 + x1815;
x1765[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x270[x1820];
double x1822 = x1778[x1820];
double x1823 = x1821 + x1822;
x270[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1731[x1827];
double x1829 = x1765[x1827];
double x1830 = x1828 + x1829;
x1731[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
double x1835 = x1752[x1834];
double x1836 = x1765[x1834];
double x1837 = x1835 + x1836;
x1752[x1834] = x1837;

}
for(int x1841=0; x1841 < 150; x1841++) {
int32_t x1843 = 150 * x1841;
for(int x1842=0; x1842 < 150; x1842++) {
int32_t x1844 = x1843 + x1842;
double x1845 = x265[x1844];
double x1847 = x1752[x1841];
double x1846 = x545[x1842];
double x1848 = x1846 * x1847;
double x1849 = x1845 + x1848;
x265[x1844] = x1849;

}

}
for(int x1855=0; x1855 < 150; x1855++) {
int32_t x1858 = 150 * x1855;
for(int x1856=0; x1856 < 150; x1856++) {
int32_t x1859 = x1858 + x1856;
double x1860 = x136[x1859];
double x1861 = x1752[x1855];
double x1857 = x546[x1856];
double x1862 = x1860 * x1861;
double x1863 = x1857 + x1862;
x546[x1856] = x1863;

}

}
for(int x1869=0; x1869 < 150; x1869++) {
int32_t x1871 = 150 * x1869;
for(int x1870=0; x1870 < 150; x1870++) {
int32_t x1872 = x1871 + x1870;
double x1873 = x260[x1872];
double x1875 = x1731[x1869];
double x1874 = x536[x1870];
double x1876 = x1874 * x1875;
double x1877 = x1873 + x1876;
x260[x1872] = x1877;

}

}
for(int x1883=0; x1883 < 150; x1883++) {
int32_t x1886 = 150 * x1883;
for(int x1884=0; x1884 < 150; x1884++) {
int32_t x1887 = x1886 + x1884;
double x1888 = x128[x1887];
double x1889 = x1731[x1883];
double x1885 = x537[x1884];
double x1890 = x1888 * x1889;
double x1891 = x1885 + x1890;
x537[x1884] = x1891;

}

}
}
};
x575(x1900);
} else {
double* x1905 = (double*)myMalloc(150 * sizeof(double));
for(int x1906=0; x1906 < 150; x1906++) {
double x1907 = 0.0;
int32_t x1909 = 150 * x1906;
for(int x1908=0; x1908 < 150; x1908++) {
int32_t x1910 = x1908 + x1909;
double x1911 = x112[x1910];
double x1912 = x536[x1908];
double x1913 = x1911 * x1912;
x1907 += x1913;

}
double x1917 = x1907;
x1905[x1906] = x1917;

}
double* x1921 = (double*)myMalloc(150 * sizeof(double));
for(int x1922=0; x1922 < 150; x1922++) {
x1921[x1922] = 0.0;

}
double* x1926 = (double*)myMalloc(150 * sizeof(double));
for(int x1927=0; x1927 < 150; x1927++) {
double x1928 = 0.0;
int32_t x1930 = 150 * x1927;
for(int x1929=0; x1929 < 150; x1929++) {
int32_t x1931 = x1929 + x1930;
double x1932 = x120[x1931];
double x1933 = x545[x1929];
double x1934 = x1932 * x1933;
x1928 += x1934;

}
double x1938 = x1928;
x1926[x1927] = x1938;

}
double* x1942 = (double*)myMalloc(150 * sizeof(double));
for(int x1943=0; x1943 < 150; x1943++) {
x1942[x1943] = 0.0;

}
double* x1947 = (double*)myMalloc(150 * sizeof(double));
for(int x1948=0; x1948 < 150; x1948++) {
double x1949 = x1905[x1948];
double x1950 = x1926[x1948];
double x1951 = x1949 + x1950;
x1947[x1948] = x1951;

}
double* x1955 = (double*)myMalloc(150 * sizeof(double));
for(int x1956=0; x1956 < 150; x1956++) {
x1955[x1956] = 0.0;

}
double* x1960 = (double*)myMalloc(150 * sizeof(double));
for(int x1961=0; x1961 < 150; x1961++) {
double x1962 = x1947[x1961];
double x1963 = x143[x1961];
double x1964 = x1962 + x1963;
x1960[x1961] = x1964;

}
double* x1968 = (double*)myMalloc(150 * sizeof(double));
for(int x1969=0; x1969 < 150; x1969++) {
x1968[x1969] = 0.0;

}
double* x1973 = (double*)myMalloc(150 * sizeof(double));
for(int x1974=0; x1974 < 150; x1974++) {
double x1975 = x1960[x1974];
double x1976 = -1.0 * x1975;
double x1977 = exp(x1976);
double x1978 = x1977 + 1.0;
double x1979 = 1.0 / x1978;
x1973[x1974] = x1979;

}
double* x1983 = (double*)myMalloc(150 * sizeof(double));
for(int x1984=0; x1984 < 150; x1984++) {
x1983[x1984] = 0.0;

}
double** x1988 = (double**)myMalloc(2 * sizeof(double*));
x1988[0] = x1973;
x1988[1] = x1983;
double* x571 = x570[0];
double* x572 = x570[1];
function<void(double**)> x575 = [&](double** x576) {
int32_t x579 = x469[x521];
bool x580 = x579 < 0;
if (x580) {
double** x1710 = (double**)myMalloc(2 * sizeof(double*));
x1710[0] = x325;
x1710[1] = x330;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1710);
} else {
double* x1715 = (double*)myMalloc(150 * sizeof(double));
for(int x1716=0; x1716 < 150; x1716++) {
double x1717 = 0.0;
int32_t x1719 = 150 * x1716;
for(int x1718=0; x1718 < 150; x1718++) {
int32_t x1720 = x1718 + x1719;
double x1721 = x128[x1720];
double x1722 = x536[x1718];
double x1723 = x1721 * x1722;
x1717 += x1723;

}
double x1727 = x1717;
x1715[x1716] = x1727;

}
double* x1731 = (double*)myMalloc(150 * sizeof(double));
for(int x1732=0; x1732 < 150; x1732++) {
x1731[x1732] = 0.0;

}
double* x1736 = (double*)myMalloc(150 * sizeof(double));
for(int x1737=0; x1737 < 150; x1737++) {
double x1738 = 0.0;
int32_t x1740 = 150 * x1737;
for(int x1739=0; x1739 < 150; x1739++) {
int32_t x1741 = x1739 + x1740;
double x1742 = x136[x1741];
double x1743 = x545[x1739];
double x1744 = x1742 * x1743;
x1738 += x1744;

}
double x1748 = x1738;
x1736[x1737] = x1748;

}
double* x1752 = (double*)myMalloc(150 * sizeof(double));
for(int x1753=0; x1753 < 150; x1753++) {
x1752[x1753] = 0.0;

}
double* x1757 = (double*)myMalloc(150 * sizeof(double));
for(int x1758=0; x1758 < 150; x1758++) {
double x1759 = x1715[x1758];
double x1760 = x1736[x1758];
double x1761 = x1759 + x1760;
x1757[x1758] = x1761;

}
double* x1765 = (double*)myMalloc(150 * sizeof(double));
for(int x1766=0; x1766 < 150; x1766++) {
x1765[x1766] = 0.0;

}
double* x1770 = (double*)myMalloc(150 * sizeof(double));
for(int x1771=0; x1771 < 150; x1771++) {
double x1772 = x1757[x1771];
double x1773 = x143[x1771];
double x1774 = x1772 + x1773;
x1770[x1771] = x1774;

}
double* x1778 = (double*)myMalloc(150 * sizeof(double));
for(int x1779=0; x1779 < 150; x1779++) {
x1778[x1779] = 0.0;

}
double* x1783 = (double*)myMalloc(150 * sizeof(double));
for(int x1784=0; x1784 < 150; x1784++) {
double x1785 = x1770[x1784];
double x1786 = -1.0 * x1785;
double x1787 = exp(x1786);
double x1788 = x1787 + 1.0;
double x1789 = 1.0 / x1788;
x1783[x1784] = x1789;

}
double* x1793 = (double*)myMalloc(150 * sizeof(double));
for(int x1794=0; x1794 < 150; x1794++) {
x1793[x1794] = 0.0;

}
double** x1798 = (double**)myMalloc(2 * sizeof(double*));
x1798[0] = x1783;
x1798[1] = x1793;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1798);
for(int x1802=0; x1802 < 150; x1802++) {
double x1803 = x1778[x1802];
double x1804 = x1783[x1802];
double x1807 = x1793[x1802];
double x1805 = 1.0 - x1804;
double x1806 = x1805 * x1804;
double x1808 = x1806 * x1807;
double x1809 = x1803 + x1808;
x1778[x1802] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x1765[x1813];
double x1815 = x1778[x1813];
double x1816 = x1814 + x1815;
x1765[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x270[x1820];
double x1822 = x1778[x1820];
double x1823 = x1821 + x1822;
x270[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1731[x1827];
double x1829 = x1765[x1827];
double x1830 = x1828 + x1829;
x1731[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
double x1835 = x1752[x1834];
double x1836 = x1765[x1834];
double x1837 = x1835 + x1836;
x1752[x1834] = x1837;

}
for(int x1841=0; x1841 < 150; x1841++) {
int32_t x1843 = 150 * x1841;
for(int x1842=0; x1842 < 150; x1842++) {
int32_t x1844 = x1843 + x1842;
double x1845 = x265[x1844];
double x1847 = x1752[x1841];
double x1846 = x545[x1842];
double x1848 = x1846 * x1847;
double x1849 = x1845 + x1848;
x265[x1844] = x1849;

}

}
for(int x1855=0; x1855 < 150; x1855++) {
int32_t x1858 = 150 * x1855;
for(int x1856=0; x1856 < 150; x1856++) {
int32_t x1859 = x1858 + x1856;
double x1860 = x136[x1859];
double x1861 = x1752[x1855];
double x1857 = x546[x1856];
double x1862 = x1860 * x1861;
double x1863 = x1857 + x1862;
x546[x1856] = x1863;

}

}
for(int x1869=0; x1869 < 150; x1869++) {
int32_t x1871 = 150 * x1869;
for(int x1870=0; x1870 < 150; x1870++) {
int32_t x1872 = x1871 + x1870;
double x1873 = x260[x1872];
double x1875 = x1731[x1869];
double x1874 = x536[x1870];
double x1876 = x1874 * x1875;
double x1877 = x1873 + x1876;
x260[x1872] = x1877;

}

}
for(int x1883=0; x1883 < 150; x1883++) {
int32_t x1886 = 150 * x1883;
for(int x1884=0; x1884 < 150; x1884++) {
int32_t x1887 = x1886 + x1884;
double x1888 = x128[x1887];
double x1889 = x1731[x1883];
double x1885 = x537[x1884];
double x1890 = x1888 * x1889;
double x1891 = x1885 + x1890;
x537[x1884] = x1891;

}

}
}
};
x575(x1988);
for(int x1992=0; x1992 < 150; x1992++) {
double x1993 = x1968[x1992];
double x1994 = x1973[x1992];
double x1997 = x1983[x1992];
double x1995 = 1.0 - x1994;
double x1996 = x1995 * x1994;
double x1998 = x1996 * x1997;
double x1999 = x1993 + x1998;
x1968[x1992] = x1999;

}
for(int x2003=0; x2003 < 150; x2003++) {
double x2004 = x1955[x2003];
double x2005 = x1968[x2003];
double x2006 = x2004 + x2005;
x1955[x2003] = x2006;

}
for(int x2010=0; x2010 < 150; x2010++) {
double x2011 = x270[x2010];
double x2012 = x1968[x2010];
double x2013 = x2011 + x2012;
x270[x2010] = x2013;

}
for(int x2017=0; x2017 < 150; x2017++) {
double x2018 = x1921[x2017];
double x2019 = x1955[x2017];
double x2020 = x2018 + x2019;
x1921[x2017] = x2020;

}
for(int x2024=0; x2024 < 150; x2024++) {
double x2025 = x1942[x2024];
double x2026 = x1955[x2024];
double x2027 = x2025 + x2026;
x1942[x2024] = x2027;

}
for(int x2031=0; x2031 < 150; x2031++) {
int32_t x2033 = 150 * x2031;
for(int x2032=0; x2032 < 150; x2032++) {
int32_t x2034 = x2033 + x2032;
double x2035 = x255[x2034];
double x2037 = x1942[x2031];
double x2036 = x545[x2032];
double x2038 = x2036 * x2037;
double x2039 = x2035 + x2038;
x255[x2034] = x2039;

}

}
for(int x2045=0; x2045 < 150; x2045++) {
int32_t x2048 = 150 * x2045;
for(int x2046=0; x2046 < 150; x2046++) {
int32_t x2049 = x2048 + x2046;
double x2050 = x120[x2049];
double x2051 = x1942[x2045];
double x2047 = x546[x2046];
double x2052 = x2050 * x2051;
double x2053 = x2047 + x2052;
x546[x2046] = x2053;

}

}
for(int x2059=0; x2059 < 150; x2059++) {
int32_t x2061 = 150 * x2059;
for(int x2060=0; x2060 < 150; x2060++) {
int32_t x2062 = x2061 + x2060;
double x2063 = x250[x2062];
double x2065 = x1921[x2059];
double x2064 = x536[x2060];
double x2066 = x2064 * x2065;
double x2067 = x2063 + x2066;
x250[x2062] = x2067;

}

}
for(int x2073=0; x2073 < 150; x2073++) {
int32_t x2076 = 150 * x2073;
for(int x2074=0; x2074 < 150; x2074++) {
int32_t x2077 = x2076 + x2074;
double x2078 = x112[x2077];
double x2079 = x1921[x2073];
double x2075 = x537[x2074];
double x2080 = x2078 * x2079;
double x2081 = x2075 + x2080;
x537[x2074] = x2081;

}

}
}
};
x569(x2280);
for(int x2284=0; x2284 < 150; x2284++) {
double x2285 = x2260[x2284];
double x2286 = x2265[x2284];
double x2289 = x2275[x2284];
double x2287 = 1.0 - x2286;
double x2288 = x2287 * x2286;
double x2290 = x2288 * x2289;
double x2291 = x2285 + x2290;
x2260[x2284] = x2291;

}
for(int x2295=0; x2295 < 150; x2295++) {
double x2296 = x2247[x2295];
double x2297 = x2260[x2295];
double x2298 = x2296 + x2297;
x2247[x2295] = x2298;

}
for(int x2302=0; x2302 < 150; x2302++) {
double x2303 = x245[x2302];
double x2304 = x2260[x2302];
double x2305 = x2303 + x2304;
x245[x2302] = x2305;

}
for(int x2309=0; x2309 < 150; x2309++) {
double x2310 = x2213[x2309];
double x2311 = x2247[x2309];
double x2312 = x2310 + x2311;
x2213[x2309] = x2312;

}
for(int x2316=0; x2316 < 150; x2316++) {
double x2317 = x2234[x2316];
double x2318 = x2247[x2316];
double x2319 = x2317 + x2318;
x2234[x2316] = x2319;

}
for(int x2323=0; x2323 < 150; x2323++) {
int32_t x2325 = 150 * x2323;
for(int x2324=0; x2324 < 150; x2324++) {
int32_t x2326 = x2325 + x2324;
double x2327 = x240[x2326];
double x2329 = x2234[x2323];
double x2328 = x545[x2324];
double x2330 = x2328 * x2329;
double x2331 = x2327 + x2330;
x240[x2326] = x2331;

}

}
for(int x2337=0; x2337 < 150; x2337++) {
int32_t x2340 = 150 * x2337;
for(int x2338=0; x2338 < 150; x2338++) {
int32_t x2341 = x2340 + x2338;
double x2342 = x99[x2341];
double x2343 = x2234[x2337];
double x2339 = x546[x2338];
double x2344 = x2342 * x2343;
double x2345 = x2339 + x2344;
x546[x2338] = x2345;

}

}
for(int x2351=0; x2351 < 150; x2351++) {
int32_t x2353 = 150 * x2351;
for(int x2352=0; x2352 < 150; x2352++) {
int32_t x2354 = x2353 + x2352;
double x2355 = x235[x2354];
double x2357 = x2213[x2351];
double x2356 = x536[x2352];
double x2358 = x2356 * x2357;
double x2359 = x2355 + x2358;
x235[x2354] = x2359;

}

}
for(int x2365=0; x2365 < 150; x2365++) {
int32_t x2368 = 150 * x2365;
for(int x2366=0; x2366 < 150; x2366++) {
int32_t x2369 = x2368 + x2366;
double x2370 = x90[x2369];
double x2371 = x2213[x2365];
double x2367 = x537[x2366];
double x2372 = x2370 * x2371;
double x2373 = x2367 + x2372;
x537[x2366] = x2373;

}

}
}
};
x563(x2389);
} else {
double** x2394 = (double**)myMalloc(2 * sizeof(double*));
x2394[0] = x315;
x2394[1] = x320;
double* x543 = x542[0];
double* x544 = x542[1];
double* x547 = x542[4];
double* x548 = x542[5];
double* x545 = x542[2];
double* x546 = x542[3];
function<void(double**)> x563 = [&](double** x564) {
int32_t x567 = x469[x521];
bool x568 = x567 < 0;
if (x568) {
double* x2090 = (double*)myMalloc(150 * sizeof(double));
double* x565 = x564[0];
for(int x2091=0; x2091 < 150; x2091++) {
double x2092 = 0.0;
int32_t x2094 = 300 * x2091;
for(int x2093=0; x2093 < 300; x2093++) {
int32_t x2095 = x2093 + x2094;
double x2096 = x49[x2095];
double x2097 = x565[x2093];
double x2098 = x2096 * x2097;
x2092 += x2098;

}
double x2102 = x2092;
x2090[x2091] = x2102;

}
double* x2106 = (double*)myMalloc(150 * sizeof(double));
for(int x2107=0; x2107 < 150; x2107++) {
x2106[x2107] = 0.0;

}
double* x2111 = (double*)myMalloc(150 * sizeof(double));
for(int x2112=0; x2112 < 150; x2112++) {
double x2113 = x2090[x2112];
double x2114 = x57[x2112];
double x2115 = x2113 + x2114;
x2111[x2112] = x2115;

}
double* x2119 = (double*)myMalloc(150 * sizeof(double));
for(int x2120=0; x2120 < 150; x2120++) {
x2119[x2120] = 0.0;

}
double* x2124 = (double*)myMalloc(150 * sizeof(double));
for(int x2125=0; x2125 < 150; x2125++) {
double x2126 = x2111[x2125];
double x2127 = -1.0 * x2126;
double x2128 = exp(x2127);
double x2129 = x2128 + 1.0;
double x2130 = 1.0 / x2129;
x2124[x2125] = x2130;

}
double* x2134 = (double*)myMalloc(150 * sizeof(double));
for(int x2135=0; x2135 < 150; x2135++) {
x2134[x2135] = 0.0;

}
double** x2139 = (double**)myMalloc(2 * sizeof(double*));
x2139[0] = x2124;
x2139[1] = x2134;
double* x566 = x564[1];
function<void(double**)> x569 = [&](double** x570) {
int32_t x573 = x469[x521];
bool x574 = x573 < 0;
if (x574) {
double** x1900 = (double**)myMalloc(2 * sizeof(double*));
x1900[0] = x325;
x1900[1] = x330;
double* x571 = x570[0];
double* x572 = x570[1];
function<void(double**)> x575 = [&](double** x576) {
int32_t x579 = x469[x521];
bool x580 = x579 < 0;
if (x580) {
double** x1710 = (double**)myMalloc(2 * sizeof(double*));
x1710[0] = x325;
x1710[1] = x330;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1710);
} else {
double* x1715 = (double*)myMalloc(150 * sizeof(double));
for(int x1716=0; x1716 < 150; x1716++) {
double x1717 = 0.0;
int32_t x1719 = 150 * x1716;
for(int x1718=0; x1718 < 150; x1718++) {
int32_t x1720 = x1718 + x1719;
double x1721 = x128[x1720];
double x1722 = x536[x1718];
double x1723 = x1721 * x1722;
x1717 += x1723;

}
double x1727 = x1717;
x1715[x1716] = x1727;

}
double* x1731 = (double*)myMalloc(150 * sizeof(double));
for(int x1732=0; x1732 < 150; x1732++) {
x1731[x1732] = 0.0;

}
double* x1736 = (double*)myMalloc(150 * sizeof(double));
for(int x1737=0; x1737 < 150; x1737++) {
double x1738 = 0.0;
int32_t x1740 = 150 * x1737;
for(int x1739=0; x1739 < 150; x1739++) {
int32_t x1741 = x1739 + x1740;
double x1742 = x136[x1741];
double x1743 = x545[x1739];
double x1744 = x1742 * x1743;
x1738 += x1744;

}
double x1748 = x1738;
x1736[x1737] = x1748;

}
double* x1752 = (double*)myMalloc(150 * sizeof(double));
for(int x1753=0; x1753 < 150; x1753++) {
x1752[x1753] = 0.0;

}
double* x1757 = (double*)myMalloc(150 * sizeof(double));
for(int x1758=0; x1758 < 150; x1758++) {
double x1759 = x1715[x1758];
double x1760 = x1736[x1758];
double x1761 = x1759 + x1760;
x1757[x1758] = x1761;

}
double* x1765 = (double*)myMalloc(150 * sizeof(double));
for(int x1766=0; x1766 < 150; x1766++) {
x1765[x1766] = 0.0;

}
double* x1770 = (double*)myMalloc(150 * sizeof(double));
for(int x1771=0; x1771 < 150; x1771++) {
double x1772 = x1757[x1771];
double x1773 = x143[x1771];
double x1774 = x1772 + x1773;
x1770[x1771] = x1774;

}
double* x1778 = (double*)myMalloc(150 * sizeof(double));
for(int x1779=0; x1779 < 150; x1779++) {
x1778[x1779] = 0.0;

}
double* x1783 = (double*)myMalloc(150 * sizeof(double));
for(int x1784=0; x1784 < 150; x1784++) {
double x1785 = x1770[x1784];
double x1786 = -1.0 * x1785;
double x1787 = exp(x1786);
double x1788 = x1787 + 1.0;
double x1789 = 1.0 / x1788;
x1783[x1784] = x1789;

}
double* x1793 = (double*)myMalloc(150 * sizeof(double));
for(int x1794=0; x1794 < 150; x1794++) {
x1793[x1794] = 0.0;

}
double** x1798 = (double**)myMalloc(2 * sizeof(double*));
x1798[0] = x1783;
x1798[1] = x1793;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1798);
for(int x1802=0; x1802 < 150; x1802++) {
double x1803 = x1778[x1802];
double x1804 = x1783[x1802];
double x1807 = x1793[x1802];
double x1805 = 1.0 - x1804;
double x1806 = x1805 * x1804;
double x1808 = x1806 * x1807;
double x1809 = x1803 + x1808;
x1778[x1802] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x1765[x1813];
double x1815 = x1778[x1813];
double x1816 = x1814 + x1815;
x1765[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x270[x1820];
double x1822 = x1778[x1820];
double x1823 = x1821 + x1822;
x270[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1731[x1827];
double x1829 = x1765[x1827];
double x1830 = x1828 + x1829;
x1731[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
double x1835 = x1752[x1834];
double x1836 = x1765[x1834];
double x1837 = x1835 + x1836;
x1752[x1834] = x1837;

}
for(int x1841=0; x1841 < 150; x1841++) {
int32_t x1843 = 150 * x1841;
for(int x1842=0; x1842 < 150; x1842++) {
int32_t x1844 = x1843 + x1842;
double x1845 = x265[x1844];
double x1847 = x1752[x1841];
double x1846 = x545[x1842];
double x1848 = x1846 * x1847;
double x1849 = x1845 + x1848;
x265[x1844] = x1849;

}

}
for(int x1855=0; x1855 < 150; x1855++) {
int32_t x1858 = 150 * x1855;
for(int x1856=0; x1856 < 150; x1856++) {
int32_t x1859 = x1858 + x1856;
double x1860 = x136[x1859];
double x1861 = x1752[x1855];
double x1857 = x546[x1856];
double x1862 = x1860 * x1861;
double x1863 = x1857 + x1862;
x546[x1856] = x1863;

}

}
for(int x1869=0; x1869 < 150; x1869++) {
int32_t x1871 = 150 * x1869;
for(int x1870=0; x1870 < 150; x1870++) {
int32_t x1872 = x1871 + x1870;
double x1873 = x260[x1872];
double x1875 = x1731[x1869];
double x1874 = x536[x1870];
double x1876 = x1874 * x1875;
double x1877 = x1873 + x1876;
x260[x1872] = x1877;

}

}
for(int x1883=0; x1883 < 150; x1883++) {
int32_t x1886 = 150 * x1883;
for(int x1884=0; x1884 < 150; x1884++) {
int32_t x1887 = x1886 + x1884;
double x1888 = x128[x1887];
double x1889 = x1731[x1883];
double x1885 = x537[x1884];
double x1890 = x1888 * x1889;
double x1891 = x1885 + x1890;
x537[x1884] = x1891;

}

}
}
};
x575(x1900);
} else {
double* x1905 = (double*)myMalloc(150 * sizeof(double));
for(int x1906=0; x1906 < 150; x1906++) {
double x1907 = 0.0;
int32_t x1909 = 150 * x1906;
for(int x1908=0; x1908 < 150; x1908++) {
int32_t x1910 = x1908 + x1909;
double x1911 = x112[x1910];
double x1912 = x536[x1908];
double x1913 = x1911 * x1912;
x1907 += x1913;

}
double x1917 = x1907;
x1905[x1906] = x1917;

}
double* x1921 = (double*)myMalloc(150 * sizeof(double));
for(int x1922=0; x1922 < 150; x1922++) {
x1921[x1922] = 0.0;

}
double* x1926 = (double*)myMalloc(150 * sizeof(double));
for(int x1927=0; x1927 < 150; x1927++) {
double x1928 = 0.0;
int32_t x1930 = 150 * x1927;
for(int x1929=0; x1929 < 150; x1929++) {
int32_t x1931 = x1929 + x1930;
double x1932 = x120[x1931];
double x1933 = x545[x1929];
double x1934 = x1932 * x1933;
x1928 += x1934;

}
double x1938 = x1928;
x1926[x1927] = x1938;

}
double* x1942 = (double*)myMalloc(150 * sizeof(double));
for(int x1943=0; x1943 < 150; x1943++) {
x1942[x1943] = 0.0;

}
double* x1947 = (double*)myMalloc(150 * sizeof(double));
for(int x1948=0; x1948 < 150; x1948++) {
double x1949 = x1905[x1948];
double x1950 = x1926[x1948];
double x1951 = x1949 + x1950;
x1947[x1948] = x1951;

}
double* x1955 = (double*)myMalloc(150 * sizeof(double));
for(int x1956=0; x1956 < 150; x1956++) {
x1955[x1956] = 0.0;

}
double* x1960 = (double*)myMalloc(150 * sizeof(double));
for(int x1961=0; x1961 < 150; x1961++) {
double x1962 = x1947[x1961];
double x1963 = x143[x1961];
double x1964 = x1962 + x1963;
x1960[x1961] = x1964;

}
double* x1968 = (double*)myMalloc(150 * sizeof(double));
for(int x1969=0; x1969 < 150; x1969++) {
x1968[x1969] = 0.0;

}
double* x1973 = (double*)myMalloc(150 * sizeof(double));
for(int x1974=0; x1974 < 150; x1974++) {
double x1975 = x1960[x1974];
double x1976 = -1.0 * x1975;
double x1977 = exp(x1976);
double x1978 = x1977 + 1.0;
double x1979 = 1.0 / x1978;
x1973[x1974] = x1979;

}
double* x1983 = (double*)myMalloc(150 * sizeof(double));
for(int x1984=0; x1984 < 150; x1984++) {
x1983[x1984] = 0.0;

}
double** x1988 = (double**)myMalloc(2 * sizeof(double*));
x1988[0] = x1973;
x1988[1] = x1983;
double* x571 = x570[0];
double* x572 = x570[1];
function<void(double**)> x575 = [&](double** x576) {
int32_t x579 = x469[x521];
bool x580 = x579 < 0;
if (x580) {
double** x1710 = (double**)myMalloc(2 * sizeof(double*));
x1710[0] = x325;
x1710[1] = x330;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1710);
} else {
double* x1715 = (double*)myMalloc(150 * sizeof(double));
for(int x1716=0; x1716 < 150; x1716++) {
double x1717 = 0.0;
int32_t x1719 = 150 * x1716;
for(int x1718=0; x1718 < 150; x1718++) {
int32_t x1720 = x1718 + x1719;
double x1721 = x128[x1720];
double x1722 = x536[x1718];
double x1723 = x1721 * x1722;
x1717 += x1723;

}
double x1727 = x1717;
x1715[x1716] = x1727;

}
double* x1731 = (double*)myMalloc(150 * sizeof(double));
for(int x1732=0; x1732 < 150; x1732++) {
x1731[x1732] = 0.0;

}
double* x1736 = (double*)myMalloc(150 * sizeof(double));
for(int x1737=0; x1737 < 150; x1737++) {
double x1738 = 0.0;
int32_t x1740 = 150 * x1737;
for(int x1739=0; x1739 < 150; x1739++) {
int32_t x1741 = x1739 + x1740;
double x1742 = x136[x1741];
double x1743 = x545[x1739];
double x1744 = x1742 * x1743;
x1738 += x1744;

}
double x1748 = x1738;
x1736[x1737] = x1748;

}
double* x1752 = (double*)myMalloc(150 * sizeof(double));
for(int x1753=0; x1753 < 150; x1753++) {
x1752[x1753] = 0.0;

}
double* x1757 = (double*)myMalloc(150 * sizeof(double));
for(int x1758=0; x1758 < 150; x1758++) {
double x1759 = x1715[x1758];
double x1760 = x1736[x1758];
double x1761 = x1759 + x1760;
x1757[x1758] = x1761;

}
double* x1765 = (double*)myMalloc(150 * sizeof(double));
for(int x1766=0; x1766 < 150; x1766++) {
x1765[x1766] = 0.0;

}
double* x1770 = (double*)myMalloc(150 * sizeof(double));
for(int x1771=0; x1771 < 150; x1771++) {
double x1772 = x1757[x1771];
double x1773 = x143[x1771];
double x1774 = x1772 + x1773;
x1770[x1771] = x1774;

}
double* x1778 = (double*)myMalloc(150 * sizeof(double));
for(int x1779=0; x1779 < 150; x1779++) {
x1778[x1779] = 0.0;

}
double* x1783 = (double*)myMalloc(150 * sizeof(double));
for(int x1784=0; x1784 < 150; x1784++) {
double x1785 = x1770[x1784];
double x1786 = -1.0 * x1785;
double x1787 = exp(x1786);
double x1788 = x1787 + 1.0;
double x1789 = 1.0 / x1788;
x1783[x1784] = x1789;

}
double* x1793 = (double*)myMalloc(150 * sizeof(double));
for(int x1794=0; x1794 < 150; x1794++) {
x1793[x1794] = 0.0;

}
double** x1798 = (double**)myMalloc(2 * sizeof(double*));
x1798[0] = x1783;
x1798[1] = x1793;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1798);
for(int x1802=0; x1802 < 150; x1802++) {
double x1803 = x1778[x1802];
double x1804 = x1783[x1802];
double x1807 = x1793[x1802];
double x1805 = 1.0 - x1804;
double x1806 = x1805 * x1804;
double x1808 = x1806 * x1807;
double x1809 = x1803 + x1808;
x1778[x1802] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x1765[x1813];
double x1815 = x1778[x1813];
double x1816 = x1814 + x1815;
x1765[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x270[x1820];
double x1822 = x1778[x1820];
double x1823 = x1821 + x1822;
x270[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1731[x1827];
double x1829 = x1765[x1827];
double x1830 = x1828 + x1829;
x1731[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
double x1835 = x1752[x1834];
double x1836 = x1765[x1834];
double x1837 = x1835 + x1836;
x1752[x1834] = x1837;

}
for(int x1841=0; x1841 < 150; x1841++) {
int32_t x1843 = 150 * x1841;
for(int x1842=0; x1842 < 150; x1842++) {
int32_t x1844 = x1843 + x1842;
double x1845 = x265[x1844];
double x1847 = x1752[x1841];
double x1846 = x545[x1842];
double x1848 = x1846 * x1847;
double x1849 = x1845 + x1848;
x265[x1844] = x1849;

}

}
for(int x1855=0; x1855 < 150; x1855++) {
int32_t x1858 = 150 * x1855;
for(int x1856=0; x1856 < 150; x1856++) {
int32_t x1859 = x1858 + x1856;
double x1860 = x136[x1859];
double x1861 = x1752[x1855];
double x1857 = x546[x1856];
double x1862 = x1860 * x1861;
double x1863 = x1857 + x1862;
x546[x1856] = x1863;

}

}
for(int x1869=0; x1869 < 150; x1869++) {
int32_t x1871 = 150 * x1869;
for(int x1870=0; x1870 < 150; x1870++) {
int32_t x1872 = x1871 + x1870;
double x1873 = x260[x1872];
double x1875 = x1731[x1869];
double x1874 = x536[x1870];
double x1876 = x1874 * x1875;
double x1877 = x1873 + x1876;
x260[x1872] = x1877;

}

}
for(int x1883=0; x1883 < 150; x1883++) {
int32_t x1886 = 150 * x1883;
for(int x1884=0; x1884 < 150; x1884++) {
int32_t x1887 = x1886 + x1884;
double x1888 = x128[x1887];
double x1889 = x1731[x1883];
double x1885 = x537[x1884];
double x1890 = x1888 * x1889;
double x1891 = x1885 + x1890;
x537[x1884] = x1891;

}

}
}
};
x575(x1988);
for(int x1992=0; x1992 < 150; x1992++) {
double x1993 = x1968[x1992];
double x1994 = x1973[x1992];
double x1997 = x1983[x1992];
double x1995 = 1.0 - x1994;
double x1996 = x1995 * x1994;
double x1998 = x1996 * x1997;
double x1999 = x1993 + x1998;
x1968[x1992] = x1999;

}
for(int x2003=0; x2003 < 150; x2003++) {
double x2004 = x1955[x2003];
double x2005 = x1968[x2003];
double x2006 = x2004 + x2005;
x1955[x2003] = x2006;

}
for(int x2010=0; x2010 < 150; x2010++) {
double x2011 = x270[x2010];
double x2012 = x1968[x2010];
double x2013 = x2011 + x2012;
x270[x2010] = x2013;

}
for(int x2017=0; x2017 < 150; x2017++) {
double x2018 = x1921[x2017];
double x2019 = x1955[x2017];
double x2020 = x2018 + x2019;
x1921[x2017] = x2020;

}
for(int x2024=0; x2024 < 150; x2024++) {
double x2025 = x1942[x2024];
double x2026 = x1955[x2024];
double x2027 = x2025 + x2026;
x1942[x2024] = x2027;

}
for(int x2031=0; x2031 < 150; x2031++) {
int32_t x2033 = 150 * x2031;
for(int x2032=0; x2032 < 150; x2032++) {
int32_t x2034 = x2033 + x2032;
double x2035 = x255[x2034];
double x2037 = x1942[x2031];
double x2036 = x545[x2032];
double x2038 = x2036 * x2037;
double x2039 = x2035 + x2038;
x255[x2034] = x2039;

}

}
for(int x2045=0; x2045 < 150; x2045++) {
int32_t x2048 = 150 * x2045;
for(int x2046=0; x2046 < 150; x2046++) {
int32_t x2049 = x2048 + x2046;
double x2050 = x120[x2049];
double x2051 = x1942[x2045];
double x2047 = x546[x2046];
double x2052 = x2050 * x2051;
double x2053 = x2047 + x2052;
x546[x2046] = x2053;

}

}
for(int x2059=0; x2059 < 150; x2059++) {
int32_t x2061 = 150 * x2059;
for(int x2060=0; x2060 < 150; x2060++) {
int32_t x2062 = x2061 + x2060;
double x2063 = x250[x2062];
double x2065 = x1921[x2059];
double x2064 = x536[x2060];
double x2066 = x2064 * x2065;
double x2067 = x2063 + x2066;
x250[x2062] = x2067;

}

}
for(int x2073=0; x2073 < 150; x2073++) {
int32_t x2076 = 150 * x2073;
for(int x2074=0; x2074 < 150; x2074++) {
int32_t x2077 = x2076 + x2074;
double x2078 = x112[x2077];
double x2079 = x1921[x2073];
double x2075 = x537[x2074];
double x2080 = x2078 * x2079;
double x2081 = x2075 + x2080;
x537[x2074] = x2081;

}

}
}
};
x569(x2139);
for(int x2143=0; x2143 < 150; x2143++) {
double x2144 = x2119[x2143];
double x2145 = x2124[x2143];
double x2148 = x2134[x2143];
double x2146 = 1.0 - x2145;
double x2147 = x2146 * x2145;
double x2149 = x2147 * x2148;
double x2150 = x2144 + x2149;
x2119[x2143] = x2150;

}
for(int x2154=0; x2154 < 150; x2154++) {
double x2155 = x2106[x2154];
double x2156 = x2119[x2154];
double x2157 = x2155 + x2156;
x2106[x2154] = x2157;

}
for(int x2161=0; x2161 < 150; x2161++) {
double x2162 = x210[x2161];
double x2163 = x2119[x2161];
double x2164 = x2162 + x2163;
x210[x2161] = x2164;

}
for(int x2168=0; x2168 < 150; x2168++) {
int32_t x2170 = 300 * x2168;
for(int x2169=0; x2169 < 300; x2169++) {
int32_t x2171 = x2170 + x2169;
double x2172 = x205[x2171];
double x2174 = x2106[x2168];
double x2173 = x565[x2169];
double x2175 = x2173 * x2174;
double x2176 = x2172 + x2175;
x205[x2171] = x2176;

}

}
for(int x2182=0; x2182 < 150; x2182++) {
int32_t x2185 = 300 * x2182;
for(int x2183=0; x2183 < 300; x2183++) {
int32_t x2186 = x2185 + x2183;
double x2187 = x49[x2186];
double x2188 = x2106[x2182];
double x2184 = x566[x2183];
double x2189 = x2187 * x2188;
double x2190 = x2184 + x2189;
x566[x2183] = x2190;

}

}
} else {
double* x2197 = (double*)myMalloc(150 * sizeof(double));
for(int x2198=0; x2198 < 150; x2198++) {
double x2199 = 0.0;
int32_t x2201 = 150 * x2198;
for(int x2200=0; x2200 < 150; x2200++) {
int32_t x2202 = x2200 + x2201;
double x2203 = x90[x2202];
double x2204 = x536[x2200];
double x2205 = x2203 * x2204;
x2199 += x2205;

}
double x2209 = x2199;
x2197[x2198] = x2209;

}
double* x2213 = (double*)myMalloc(150 * sizeof(double));
for(int x2214=0; x2214 < 150; x2214++) {
x2213[x2214] = 0.0;

}
double* x2218 = (double*)myMalloc(150 * sizeof(double));
for(int x2219=0; x2219 < 150; x2219++) {
double x2220 = 0.0;
int32_t x2222 = 150 * x2219;
for(int x2221=0; x2221 < 150; x2221++) {
int32_t x2223 = x2221 + x2222;
double x2224 = x99[x2223];
double x2225 = x545[x2221];
double x2226 = x2224 * x2225;
x2220 += x2226;

}
double x2230 = x2220;
x2218[x2219] = x2230;

}
double* x2234 = (double*)myMalloc(150 * sizeof(double));
for(int x2235=0; x2235 < 150; x2235++) {
x2234[x2235] = 0.0;

}
double* x2239 = (double*)myMalloc(150 * sizeof(double));
for(int x2240=0; x2240 < 150; x2240++) {
double x2241 = x2197[x2240];
double x2242 = x2218[x2240];
double x2243 = x2241 + x2242;
x2239[x2240] = x2243;

}
double* x2247 = (double*)myMalloc(150 * sizeof(double));
for(int x2248=0; x2248 < 150; x2248++) {
x2247[x2248] = 0.0;

}
double* x2252 = (double*)myMalloc(150 * sizeof(double));
for(int x2253=0; x2253 < 150; x2253++) {
double x2254 = x2239[x2253];
double x2255 = x106[x2253];
double x2256 = x2254 + x2255;
x2252[x2253] = x2256;

}
double* x2260 = (double*)myMalloc(150 * sizeof(double));
for(int x2261=0; x2261 < 150; x2261++) {
x2260[x2261] = 0.0;

}
double* x2265 = (double*)myMalloc(150 * sizeof(double));
for(int x2266=0; x2266 < 150; x2266++) {
double x2267 = x2252[x2266];
double x2268 = -1.0 * x2267;
double x2269 = exp(x2268);
double x2270 = x2269 + 1.0;
double x2271 = 1.0 / x2270;
x2265[x2266] = x2271;

}
double* x2275 = (double*)myMalloc(150 * sizeof(double));
for(int x2276=0; x2276 < 150; x2276++) {
x2275[x2276] = 0.0;

}
double** x2280 = (double**)myMalloc(2 * sizeof(double*));
x2280[0] = x2265;
x2280[1] = x2275;
double* x565 = x564[0];
double* x566 = x564[1];
function<void(double**)> x569 = [&](double** x570) {
int32_t x573 = x469[x521];
bool x574 = x573 < 0;
if (x574) {
double** x1900 = (double**)myMalloc(2 * sizeof(double*));
x1900[0] = x325;
x1900[1] = x330;
double* x571 = x570[0];
double* x572 = x570[1];
function<void(double**)> x575 = [&](double** x576) {
int32_t x579 = x469[x521];
bool x580 = x579 < 0;
if (x580) {
double** x1710 = (double**)myMalloc(2 * sizeof(double*));
x1710[0] = x325;
x1710[1] = x330;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1710);
} else {
double* x1715 = (double*)myMalloc(150 * sizeof(double));
for(int x1716=0; x1716 < 150; x1716++) {
double x1717 = 0.0;
int32_t x1719 = 150 * x1716;
for(int x1718=0; x1718 < 150; x1718++) {
int32_t x1720 = x1718 + x1719;
double x1721 = x128[x1720];
double x1722 = x536[x1718];
double x1723 = x1721 * x1722;
x1717 += x1723;

}
double x1727 = x1717;
x1715[x1716] = x1727;

}
double* x1731 = (double*)myMalloc(150 * sizeof(double));
for(int x1732=0; x1732 < 150; x1732++) {
x1731[x1732] = 0.0;

}
double* x1736 = (double*)myMalloc(150 * sizeof(double));
for(int x1737=0; x1737 < 150; x1737++) {
double x1738 = 0.0;
int32_t x1740 = 150 * x1737;
for(int x1739=0; x1739 < 150; x1739++) {
int32_t x1741 = x1739 + x1740;
double x1742 = x136[x1741];
double x1743 = x545[x1739];
double x1744 = x1742 * x1743;
x1738 += x1744;

}
double x1748 = x1738;
x1736[x1737] = x1748;

}
double* x1752 = (double*)myMalloc(150 * sizeof(double));
for(int x1753=0; x1753 < 150; x1753++) {
x1752[x1753] = 0.0;

}
double* x1757 = (double*)myMalloc(150 * sizeof(double));
for(int x1758=0; x1758 < 150; x1758++) {
double x1759 = x1715[x1758];
double x1760 = x1736[x1758];
double x1761 = x1759 + x1760;
x1757[x1758] = x1761;

}
double* x1765 = (double*)myMalloc(150 * sizeof(double));
for(int x1766=0; x1766 < 150; x1766++) {
x1765[x1766] = 0.0;

}
double* x1770 = (double*)myMalloc(150 * sizeof(double));
for(int x1771=0; x1771 < 150; x1771++) {
double x1772 = x1757[x1771];
double x1773 = x143[x1771];
double x1774 = x1772 + x1773;
x1770[x1771] = x1774;

}
double* x1778 = (double*)myMalloc(150 * sizeof(double));
for(int x1779=0; x1779 < 150; x1779++) {
x1778[x1779] = 0.0;

}
double* x1783 = (double*)myMalloc(150 * sizeof(double));
for(int x1784=0; x1784 < 150; x1784++) {
double x1785 = x1770[x1784];
double x1786 = -1.0 * x1785;
double x1787 = exp(x1786);
double x1788 = x1787 + 1.0;
double x1789 = 1.0 / x1788;
x1783[x1784] = x1789;

}
double* x1793 = (double*)myMalloc(150 * sizeof(double));
for(int x1794=0; x1794 < 150; x1794++) {
x1793[x1794] = 0.0;

}
double** x1798 = (double**)myMalloc(2 * sizeof(double*));
x1798[0] = x1783;
x1798[1] = x1793;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1798);
for(int x1802=0; x1802 < 150; x1802++) {
double x1803 = x1778[x1802];
double x1804 = x1783[x1802];
double x1807 = x1793[x1802];
double x1805 = 1.0 - x1804;
double x1806 = x1805 * x1804;
double x1808 = x1806 * x1807;
double x1809 = x1803 + x1808;
x1778[x1802] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x1765[x1813];
double x1815 = x1778[x1813];
double x1816 = x1814 + x1815;
x1765[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x270[x1820];
double x1822 = x1778[x1820];
double x1823 = x1821 + x1822;
x270[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1731[x1827];
double x1829 = x1765[x1827];
double x1830 = x1828 + x1829;
x1731[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
double x1835 = x1752[x1834];
double x1836 = x1765[x1834];
double x1837 = x1835 + x1836;
x1752[x1834] = x1837;

}
for(int x1841=0; x1841 < 150; x1841++) {
int32_t x1843 = 150 * x1841;
for(int x1842=0; x1842 < 150; x1842++) {
int32_t x1844 = x1843 + x1842;
double x1845 = x265[x1844];
double x1847 = x1752[x1841];
double x1846 = x545[x1842];
double x1848 = x1846 * x1847;
double x1849 = x1845 + x1848;
x265[x1844] = x1849;

}

}
for(int x1855=0; x1855 < 150; x1855++) {
int32_t x1858 = 150 * x1855;
for(int x1856=0; x1856 < 150; x1856++) {
int32_t x1859 = x1858 + x1856;
double x1860 = x136[x1859];
double x1861 = x1752[x1855];
double x1857 = x546[x1856];
double x1862 = x1860 * x1861;
double x1863 = x1857 + x1862;
x546[x1856] = x1863;

}

}
for(int x1869=0; x1869 < 150; x1869++) {
int32_t x1871 = 150 * x1869;
for(int x1870=0; x1870 < 150; x1870++) {
int32_t x1872 = x1871 + x1870;
double x1873 = x260[x1872];
double x1875 = x1731[x1869];
double x1874 = x536[x1870];
double x1876 = x1874 * x1875;
double x1877 = x1873 + x1876;
x260[x1872] = x1877;

}

}
for(int x1883=0; x1883 < 150; x1883++) {
int32_t x1886 = 150 * x1883;
for(int x1884=0; x1884 < 150; x1884++) {
int32_t x1887 = x1886 + x1884;
double x1888 = x128[x1887];
double x1889 = x1731[x1883];
double x1885 = x537[x1884];
double x1890 = x1888 * x1889;
double x1891 = x1885 + x1890;
x537[x1884] = x1891;

}

}
}
};
x575(x1900);
} else {
double* x1905 = (double*)myMalloc(150 * sizeof(double));
for(int x1906=0; x1906 < 150; x1906++) {
double x1907 = 0.0;
int32_t x1909 = 150 * x1906;
for(int x1908=0; x1908 < 150; x1908++) {
int32_t x1910 = x1908 + x1909;
double x1911 = x112[x1910];
double x1912 = x536[x1908];
double x1913 = x1911 * x1912;
x1907 += x1913;

}
double x1917 = x1907;
x1905[x1906] = x1917;

}
double* x1921 = (double*)myMalloc(150 * sizeof(double));
for(int x1922=0; x1922 < 150; x1922++) {
x1921[x1922] = 0.0;

}
double* x1926 = (double*)myMalloc(150 * sizeof(double));
for(int x1927=0; x1927 < 150; x1927++) {
double x1928 = 0.0;
int32_t x1930 = 150 * x1927;
for(int x1929=0; x1929 < 150; x1929++) {
int32_t x1931 = x1929 + x1930;
double x1932 = x120[x1931];
double x1933 = x545[x1929];
double x1934 = x1932 * x1933;
x1928 += x1934;

}
double x1938 = x1928;
x1926[x1927] = x1938;

}
double* x1942 = (double*)myMalloc(150 * sizeof(double));
for(int x1943=0; x1943 < 150; x1943++) {
x1942[x1943] = 0.0;

}
double* x1947 = (double*)myMalloc(150 * sizeof(double));
for(int x1948=0; x1948 < 150; x1948++) {
double x1949 = x1905[x1948];
double x1950 = x1926[x1948];
double x1951 = x1949 + x1950;
x1947[x1948] = x1951;

}
double* x1955 = (double*)myMalloc(150 * sizeof(double));
for(int x1956=0; x1956 < 150; x1956++) {
x1955[x1956] = 0.0;

}
double* x1960 = (double*)myMalloc(150 * sizeof(double));
for(int x1961=0; x1961 < 150; x1961++) {
double x1962 = x1947[x1961];
double x1963 = x143[x1961];
double x1964 = x1962 + x1963;
x1960[x1961] = x1964;

}
double* x1968 = (double*)myMalloc(150 * sizeof(double));
for(int x1969=0; x1969 < 150; x1969++) {
x1968[x1969] = 0.0;

}
double* x1973 = (double*)myMalloc(150 * sizeof(double));
for(int x1974=0; x1974 < 150; x1974++) {
double x1975 = x1960[x1974];
double x1976 = -1.0 * x1975;
double x1977 = exp(x1976);
double x1978 = x1977 + 1.0;
double x1979 = 1.0 / x1978;
x1973[x1974] = x1979;

}
double* x1983 = (double*)myMalloc(150 * sizeof(double));
for(int x1984=0; x1984 < 150; x1984++) {
x1983[x1984] = 0.0;

}
double** x1988 = (double**)myMalloc(2 * sizeof(double*));
x1988[0] = x1973;
x1988[1] = x1983;
double* x571 = x570[0];
double* x572 = x570[1];
function<void(double**)> x575 = [&](double** x576) {
int32_t x579 = x469[x521];
bool x580 = x579 < 0;
if (x580) {
double** x1710 = (double**)myMalloc(2 * sizeof(double*));
x1710[0] = x325;
x1710[1] = x330;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1710);
} else {
double* x1715 = (double*)myMalloc(150 * sizeof(double));
for(int x1716=0; x1716 < 150; x1716++) {
double x1717 = 0.0;
int32_t x1719 = 150 * x1716;
for(int x1718=0; x1718 < 150; x1718++) {
int32_t x1720 = x1718 + x1719;
double x1721 = x128[x1720];
double x1722 = x536[x1718];
double x1723 = x1721 * x1722;
x1717 += x1723;

}
double x1727 = x1717;
x1715[x1716] = x1727;

}
double* x1731 = (double*)myMalloc(150 * sizeof(double));
for(int x1732=0; x1732 < 150; x1732++) {
x1731[x1732] = 0.0;

}
double* x1736 = (double*)myMalloc(150 * sizeof(double));
for(int x1737=0; x1737 < 150; x1737++) {
double x1738 = 0.0;
int32_t x1740 = 150 * x1737;
for(int x1739=0; x1739 < 150; x1739++) {
int32_t x1741 = x1739 + x1740;
double x1742 = x136[x1741];
double x1743 = x545[x1739];
double x1744 = x1742 * x1743;
x1738 += x1744;

}
double x1748 = x1738;
x1736[x1737] = x1748;

}
double* x1752 = (double*)myMalloc(150 * sizeof(double));
for(int x1753=0; x1753 < 150; x1753++) {
x1752[x1753] = 0.0;

}
double* x1757 = (double*)myMalloc(150 * sizeof(double));
for(int x1758=0; x1758 < 150; x1758++) {
double x1759 = x1715[x1758];
double x1760 = x1736[x1758];
double x1761 = x1759 + x1760;
x1757[x1758] = x1761;

}
double* x1765 = (double*)myMalloc(150 * sizeof(double));
for(int x1766=0; x1766 < 150; x1766++) {
x1765[x1766] = 0.0;

}
double* x1770 = (double*)myMalloc(150 * sizeof(double));
for(int x1771=0; x1771 < 150; x1771++) {
double x1772 = x1757[x1771];
double x1773 = x143[x1771];
double x1774 = x1772 + x1773;
x1770[x1771] = x1774;

}
double* x1778 = (double*)myMalloc(150 * sizeof(double));
for(int x1779=0; x1779 < 150; x1779++) {
x1778[x1779] = 0.0;

}
double* x1783 = (double*)myMalloc(150 * sizeof(double));
for(int x1784=0; x1784 < 150; x1784++) {
double x1785 = x1770[x1784];
double x1786 = -1.0 * x1785;
double x1787 = exp(x1786);
double x1788 = x1787 + 1.0;
double x1789 = 1.0 / x1788;
x1783[x1784] = x1789;

}
double* x1793 = (double*)myMalloc(150 * sizeof(double));
for(int x1794=0; x1794 < 150; x1794++) {
x1793[x1794] = 0.0;

}
double** x1798 = (double**)myMalloc(2 * sizeof(double*));
x1798[0] = x1783;
x1798[1] = x1793;
double* x577 = x576[0];
double* x578 = x576[1];
function<void(double**)> x581 = [&](double** x582) {
int32_t x585 = x469[x521];
bool x586 = x585 < 0;
if (x586) {
double* x1418 = (double*)myMalloc(150 * sizeof(double));
for(int x1419=0; x1419 < 150; x1419++) {
double x1420 = 0.0;
int32_t x1422 = 300 * x1419;
for(int x1421=0; x1421 < 300; x1421++) {
int32_t x1423 = x1421 + x1422;
double x1424 = x64[x1423];
double x1425 = x565[x1421];
double x1426 = x1424 * x1425;
x1420 += x1426;

}
double x1430 = x1420;
x1418[x1419] = x1430;

}
double* x1434 = (double*)myMalloc(150 * sizeof(double));
for(int x1435=0; x1435 < 150; x1435++) {
x1434[x1435] = 0.0;

}
double* x1439 = (double*)myMalloc(150 * sizeof(double));
for(int x1440=0; x1440 < 150; x1440++) {
double x1441 = x1418[x1440];
double x1442 = x71[x1440];
double x1443 = x1441 + x1442;
x1439[x1440] = x1443;

}
double* x1447 = (double*)myMalloc(150 * sizeof(double));
for(int x1448=0; x1448 < 150; x1448++) {
x1447[x1448] = 0.0;

}
double* x1452 = (double*)myMalloc(150 * sizeof(double));
for(int x1453=0; x1453 < 150; x1453++) {
double x1454 = x1439[x1453];
double x1455 = -1.0 * x1454;
double x1456 = exp(x1455);
double x1457 = x1456 + 1.0;
double x1458 = 1.0 / x1457;
x1452[x1453] = x1458;

}
double* x1462 = (double*)myMalloc(150 * sizeof(double));
for(int x1463=0; x1463 < 150; x1463++) {
x1462[x1463] = 0.0;

}
double** x1467 = (double**)myMalloc(2 * sizeof(double*));
x1467[0] = x1452;
x1467[1] = x1462;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1467);
for(int x1471=0; x1471 < 150; x1471++) {
double x1472 = x1447[x1471];
double x1473 = x1452[x1471];
double x1476 = x1462[x1471];
double x1474 = 1.0 - x1473;
double x1475 = x1474 * x1473;
double x1477 = x1475 * x1476;
double x1478 = x1472 + x1477;
x1447[x1471] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x1434[x1482];
double x1484 = x1447[x1482];
double x1485 = x1483 + x1484;
x1434[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
double x1490 = x220[x1489];
double x1491 = x1447[x1489];
double x1492 = x1490 + x1491;
x220[x1489] = x1492;

}
for(int x1496=0; x1496 < 150; x1496++) {
int32_t x1498 = 300 * x1496;
for(int x1497=0; x1497 < 300; x1497++) {
int32_t x1499 = x1498 + x1497;
double x1500 = x215[x1499];
double x1502 = x1434[x1496];
double x1501 = x565[x1497];
double x1503 = x1501 * x1502;
double x1504 = x1500 + x1503;
x215[x1499] = x1504;

}

}
for(int x1510=0; x1510 < 150; x1510++) {
int32_t x1513 = 300 * x1510;
for(int x1511=0; x1511 < 300; x1511++) {
int32_t x1514 = x1513 + x1511;
double x1515 = x64[x1514];
double x1516 = x1434[x1510];
double x1512 = x566[x1511];
double x1517 = x1515 * x1516;
double x1518 = x1512 + x1517;
x566[x1511] = x1518;

}

}
} else {
double* x1525 = (double*)myMalloc(150 * sizeof(double));
for(int x1526=0; x1526 < 150; x1526++) {
double x1527 = 0.0;
int32_t x1529 = 150 * x1526;
for(int x1528=0; x1528 < 150; x1528++) {
int32_t x1530 = x1528 + x1529;
double x1531 = x149[x1530];
double x1532 = x536[x1528];
double x1533 = x1531 * x1532;
x1527 += x1533;

}
double x1537 = x1527;
x1525[x1526] = x1537;

}
double* x1541 = (double*)myMalloc(150 * sizeof(double));
for(int x1542=0; x1542 < 150; x1542++) {
x1541[x1542] = 0.0;

}
double* x1546 = (double*)myMalloc(150 * sizeof(double));
for(int x1547=0; x1547 < 150; x1547++) {
double x1548 = 0.0;
int32_t x1550 = 150 * x1547;
for(int x1549=0; x1549 < 150; x1549++) {
int32_t x1551 = x1549 + x1550;
double x1552 = x157[x1551];
double x1553 = x545[x1549];
double x1554 = x1552 * x1553;
x1548 += x1554;

}
double x1558 = x1548;
x1546[x1547] = x1558;

}
double* x1562 = (double*)myMalloc(150 * sizeof(double));
for(int x1563=0; x1563 < 150; x1563++) {
x1562[x1563] = 0.0;

}
double* x1567 = (double*)myMalloc(150 * sizeof(double));
for(int x1568=0; x1568 < 150; x1568++) {
double x1569 = x1525[x1568];
double x1570 = x1546[x1568];
double x1571 = x1569 + x1570;
x1567[x1568] = x1571;

}
double* x1575 = (double*)myMalloc(150 * sizeof(double));
for(int x1576=0; x1576 < 150; x1576++) {
x1575[x1576] = 0.0;

}
double* x1580 = (double*)myMalloc(150 * sizeof(double));
for(int x1581=0; x1581 < 150; x1581++) {
double x1582 = x1567[x1581];
double x1583 = x164[x1581];
double x1584 = x1582 + x1583;
x1580[x1581] = x1584;

}
double* x1588 = (double*)myMalloc(150 * sizeof(double));
for(int x1589=0; x1589 < 150; x1589++) {
x1588[x1589] = 0.0;

}
double* x1593 = (double*)myMalloc(150 * sizeof(double));
for(int x1594=0; x1594 < 150; x1594++) {
double x1595 = x1580[x1594];
double x1596 = -1.0 * x1595;
double x1597 = exp(x1596);
double x1598 = x1597 + 1.0;
double x1599 = 1.0 / x1598;
x1593[x1594] = x1599;

}
double* x1603 = (double*)myMalloc(150 * sizeof(double));
for(int x1604=0; x1604 < 150; x1604++) {
x1603[x1604] = 0.0;

}
double** x1608 = (double**)myMalloc(2 * sizeof(double*));
x1608[0] = x1593;
x1608[1] = x1603;
double* x583 = x582[0];
double* x584 = x582[1];
function<void(double**)> x587 = [&](double** x588) {
int32_t x591 = x469[x521];
bool x592 = x591 < 0;
if (x592) {
double* x1132 = (double*)myMalloc(150 * sizeof(double));
for(int x1133=0; x1133 < 150; x1133++) {
double x1134 = 0.0;
int32_t x1136 = 300 * x1133;
for(int x1135=0; x1135 < 300; x1135++) {
int32_t x1137 = x1135 + x1136;
double x1138 = x77[x1137];
double x1139 = x565[x1135];
double x1140 = x1138 * x1139;
x1134 += x1140;

}
double x1144 = x1134;
x1132[x1133] = x1144;

}
double* x1148 = (double*)myMalloc(150 * sizeof(double));
for(int x1149=0; x1149 < 150; x1149++) {
x1148[x1149] = 0.0;

}
double* x1153 = (double*)myMalloc(150 * sizeof(double));
for(int x1154=0; x1154 < 150; x1154++) {
double x1155 = x1132[x1154];
double x1156 = x84[x1154];
double x1157 = x1155 + x1156;
x1153[x1154] = x1157;

}
double* x1161 = (double*)myMalloc(150 * sizeof(double));
for(int x1162=0; x1162 < 150; x1162++) {
x1161[x1162] = 0.0;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
double x1168 = x1153[x1167];
double x1169 = tanh(x1168);
x1166[x1167] = x1169;

}
double* x1173 = (double*)myMalloc(150 * sizeof(double));
for(int x1174=0; x1174 < 150; x1174++) {
x1173[x1174] = 0.0;

}
double** x1178 = (double**)myMalloc(2 * sizeof(double*));
x1178[0] = x1166;
x1178[1] = x1173;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1178);
for(int x1182=0; x1182 < 150; x1182++) {
double x1183 = x1161[x1182];
double x1184 = x1166[x1182];
double x1187 = x1173[x1182];
double x1185 = x1184 * x1184;
double x1186 = 1.0 - x1185;
double x1188 = x1186 * x1187;
double x1189 = x1183 + x1188;
x1161[x1182] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x1148[x1193];
double x1195 = x1161[x1193];
double x1196 = x1194 + x1195;
x1148[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
double x1201 = x230[x1200];
double x1202 = x1161[x1200];
double x1203 = x1201 + x1202;
x230[x1200] = x1203;

}
for(int x1207=0; x1207 < 150; x1207++) {
int32_t x1209 = 300 * x1207;
for(int x1208=0; x1208 < 300; x1208++) {
int32_t x1210 = x1209 + x1208;
double x1211 = x225[x1210];
double x1213 = x1148[x1207];
double x1212 = x565[x1208];
double x1214 = x1212 * x1213;
double x1215 = x1211 + x1214;
x225[x1210] = x1215;

}

}
for(int x1221=0; x1221 < 150; x1221++) {
int32_t x1224 = 300 * x1221;
for(int x1222=0; x1222 < 300; x1222++) {
int32_t x1225 = x1224 + x1222;
double x1226 = x77[x1225];
double x1227 = x1148[x1221];
double x1223 = x566[x1222];
double x1228 = x1226 * x1227;
double x1229 = x1223 + x1228;
x566[x1222] = x1229;

}

}
} else {
double* x1236 = (double*)myMalloc(150 * sizeof(double));
for(int x1237=0; x1237 < 150; x1237++) {
double x1238 = 0.0;
int32_t x1240 = 150 * x1237;
for(int x1239=0; x1239 < 150; x1239++) {
int32_t x1241 = x1239 + x1240;
double x1242 = x170[x1241];
double x1243 = x536[x1239];
double x1244 = x1242 * x1243;
x1238 += x1244;

}
double x1248 = x1238;
x1236[x1237] = x1248;

}
double* x1252 = (double*)myMalloc(150 * sizeof(double));
for(int x1253=0; x1253 < 150; x1253++) {
x1252[x1253] = 0.0;

}
double* x1257 = (double*)myMalloc(150 * sizeof(double));
for(int x1258=0; x1258 < 150; x1258++) {
double x1259 = 0.0;
int32_t x1261 = 150 * x1258;
for(int x1260=0; x1260 < 150; x1260++) {
int32_t x1262 = x1260 + x1261;
double x1263 = x178[x1262];
double x1264 = x545[x1260];
double x1265 = x1263 * x1264;
x1259 += x1265;

}
double x1269 = x1259;
x1257[x1258] = x1269;

}
double* x1273 = (double*)myMalloc(150 * sizeof(double));
for(int x1274=0; x1274 < 150; x1274++) {
x1273[x1274] = 0.0;

}
double* x1278 = (double*)myMalloc(150 * sizeof(double));
for(int x1279=0; x1279 < 150; x1279++) {
double x1280 = x1236[x1279];
double x1281 = x1257[x1279];
double x1282 = x1280 + x1281;
x1278[x1279] = x1282;

}
double* x1286 = (double*)myMalloc(150 * sizeof(double));
for(int x1287=0; x1287 < 150; x1287++) {
x1286[x1287] = 0.0;

}
double* x1291 = (double*)myMalloc(150 * sizeof(double));
for(int x1292=0; x1292 < 150; x1292++) {
double x1293 = x1278[x1292];
double x1294 = x185[x1292];
double x1295 = x1293 + x1294;
x1291[x1292] = x1295;

}
double* x1299 = (double*)myMalloc(150 * sizeof(double));
for(int x1300=0; x1300 < 150; x1300++) {
x1299[x1300] = 0.0;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
double x1306 = x1291[x1305];
double x1307 = tanh(x1306);
x1304[x1305] = x1307;

}
double* x1311 = (double*)myMalloc(150 * sizeof(double));
for(int x1312=0; x1312 < 150; x1312++) {
x1311[x1312] = 0.0;

}
double** x1316 = (double**)myMalloc(2 * sizeof(double*));
x1316[0] = x1304;
x1316[1] = x1311;
double* x589 = x588[0];
double* x590 = x588[1];
function<void(double**)> x599 = [&](double** x600) {
double* x603 = (double*)myMalloc(150 * sizeof(double));
double* x601 = x600[0];
for(int x604=0; x604 < 150; x604++) {
double x605 = x601[x604];
double x606 = tanh(x605);
x603[x604] = x606;

}
double* x610 = (double*)myMalloc(150 * sizeof(double));
for(int x611=0; x611 < 150; x611++) {
x610[x611] = 0.0;

}
double* x615 = (double*)myMalloc(150 * sizeof(double));
for(int x616=0; x616 < 150; x616++) {
double x618 = x603[x616];
double x617 = x589[x616];
double x619 = x617 * x618;
x615[x616] = x619;

}
double* x623 = (double*)myMalloc(150 * sizeof(double));
for(int x624=0; x624 < 150; x624++) {
x623[x624] = 0.0;

}
double* x628 = (double*)myMalloc(5 * sizeof(double));
for(int x629=0; x629 < 5; x629++) {
double x630 = 0.0;
int32_t x632 = 150 * x629;
for(int x631=0; x631 < 150; x631++) {
int32_t x633 = x631 + x632;
double x634 = x191[x633];
double x635 = x615[x631];
double x636 = x634 * x635;
x630 += x636;

}
double x640 = x630;
x628[x629] = x640;

}
double* x644 = (double*)myMalloc(5 * sizeof(double));
for(int x645=0; x645 < 5; x645++) {
x644[x645] = 0.0;

}
double* x649 = (double*)myMalloc(5 * sizeof(double));
for(int x650=0; x650 < 5; x650++) {
double x651 = x628[x650];
double x652 = x199[x650];
double x653 = x651 + x652;
x649[x650] = x653;

}
double* x657 = (double*)myMalloc(5 * sizeof(double));
for(int x658=0; x658 < 5; x658++) {
x657[x658] = 0.0;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
double x664 = x649[x663];
double x665 = exp(x664);
x662[x663] = x665;

}
double* x669 = (double*)myMalloc(5 * sizeof(double));
for(int x670=0; x670 < 5; x670++) {
x669[x670] = 0.0;

}
double x674 = 0.0;
for(int x675=0; x675 < 5; x675++) {
double x676 = x662[x675];
x674 += x676;

}
double* x680 = (double*)myMalloc(1 * sizeof(double));
double x681 = x674;
x680[0] = x681;
double* x683 = (double*)myMalloc(1 * sizeof(double));
for(int x684=0; x684 < 1; x684++) {
x683[x684] = 0.0;

}
double* x688 = (double*)myMalloc(5 * sizeof(double));
for(int x689=0; x689 < 5; x689++) {
double x690 = x662[x689];
double x691 = x680[0];
double x692 = x690 / x691;
x688[x689] = x692;

}
double* x696 = (double*)myMalloc(5 * sizeof(double));
for(int x697=0; x697 < 5; x697++) {
x696[x697] = 0.0;

}
double* x701 = (double*)myMalloc(1 * sizeof(double));
for(int x702=0; x702 < 1; x702++) {
double x703 = x534[x702];
double x704 = x543[x702];
double x705 = x703 + x704;
x701[x702] = x705;

}
double* x709 = (double*)myMalloc(1 * sizeof(double));
for(int x710=0; x710 < 1; x710++) {
x709[x710] = 0.0;

}
double* x714 = (double*)myMalloc(1 * sizeof(double));
for(int x715=0; x715 < 1; x715++) {
double x716 = 0.0;
int32_t x718 = 5 * x715;
for(int x717=0; x717 < 5; x717++) {
int32_t x719 = x717 + x718;
double x720 = x688[x719];
double x721 = x549[x717];
double x722 = x720 * x721;
x716 += x722;

}
double x726 = x716;
x714[x715] = x726;

}
double* x730 = (double*)myMalloc(1 * sizeof(double));
for(int x731=0; x731 < 1; x731++) {
x730[x731] = 0.0;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
double x737 = x714[x736];
double x738 = log(x737);
x735[x736] = x738;

}
double* x742 = (double*)myMalloc(1 * sizeof(double));
for(int x743=0; x743 < 1; x743++) {
x742[x743] = 0.0;

}
double* x747 = (double*)myMalloc(1 * sizeof(double));
for(int x748=0; x748 < 1; x748++) {
double x749 = x701[x748];
double x750 = x735[x748];
double x751 = x749 - x750;
x747[x748] = x751;

}
double* x755 = (double*)myMalloc(1 * sizeof(double));
for(int x756=0; x756 < 1; x756++) {
x755[x756] = 0.0;

}
double** x760 = (double**)myMalloc(6 * sizeof(double*));
x760[0] = x747;
x760[1] = x755;
x760[2] = x615;
x760[3] = x623;
x760[4] = x601;
double* x602 = x600[1];
x760[5] = x602;
x522(x760);
for(int x768=0; x768 < 1; x768++) {
double x769 = x709[x768];
double x770 = x755[x768];
double x771 = x769 + x770;
x709[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x742[x775];
double x777 = x755[x775];
double x778 = x776 - x777;
x742[x775] = x778;

}
for(int x782=0; x782 < 1; x782++) {
double x783 = x730[0];
double x784 = x742[0];
double x785 = x714[0];
double x786 = x784 / x785;
double x787 = x783 + x786;
x730[0] = x787;

}
for(int x791=0; x791 < 1; x791++) {
int32_t x793 = 5 * x791;
for(int x792=0; x792 < 5; x792++) {
int32_t x794 = x793 + x792;
double x795 = x696[x794];
double x796 = x549[x792];
double x797 = x730[x791];
double x798 = x796 * x797;
double x799 = x795 + x798;
x696[x794] = x799;

}

}
for(int x805=0; x805 < 1; x805++) {
int32_t x808 = 5 * x805;
for(int x806=0; x806 < 5; x806++) {
double x807 = x556[x806];
int32_t x809 = x808 + x806;
double x810 = x688[x809];
double x811 = x730[x805];
double x812 = x810 * x811;
double x813 = x807 + x812;
x556[x806] = x813;

}

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x709[x819];
double x820 = x535[x819];
double x822 = x820 + x821;
x535[x819] = x822;

}
for(int x826=0; x826 < 1; x826++) {
double x828 = x709[x826];
double x827 = x544[x826];
double x829 = x827 + x828;
x544[x826] = x829;

}
for(int x833=0; x833 < 5; x833++) {
double x834 = x669[x833];
double x835 = x696[x833];
double x836 = x680[0];
double x837 = x835 / x836;
double x838 = x834 + x837;
x669[x833] = x838;

}
for(int x842=0; x842 < 5; x842++) {
double x843 = x683[0];
double x844 = x662[x842];
double x845 = x696[x842];
double x847 = x680[0];
double x846 = x844 * x845;
double x848 = x847 * x847;
double x849 = x846 / x848;
double x850 = x843 - x849;
x683[0] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x669[x854];
double x856 = x683[0];
double x857 = x855 + x856;
x669[x854] = x857;

}
for(int x861=0; x861 < 5; x861++) {
double x862 = x657[x861];
double x863 = x662[x861];
double x864 = x669[x861];
double x865 = x863 * x864;
double x866 = x862 + x865;
x657[x861] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x644[x870];
double x872 = x657[x870];
double x873 = x871 + x872;
x644[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
double x878 = x310[x877];
double x879 = x657[x877];
double x880 = x878 + x879;
x310[x877] = x880;

}
for(int x884=0; x884 < 5; x884++) {
int32_t x886 = 150 * x884;
for(int x885=0; x885 < 150; x885++) {
int32_t x887 = x886 + x885;
double x888 = x305[x887];
double x889 = x615[x885];
double x890 = x644[x884];
double x891 = x889 * x890;
double x892 = x888 + x891;
x305[x887] = x892;

}

}
for(int x898=0; x898 < 5; x898++) {
int32_t x901 = 150 * x898;
for(int x899=0; x899 < 150; x899++) {
double x900 = x623[x899];
int32_t x902 = x901 + x899;
double x903 = x191[x902];
double x904 = x644[x898];
double x905 = x903 * x904;
double x906 = x900 + x905;
x623[x899] = x906;

}

}
for(int x912=0; x912 < 150; x912++) {
double x914 = x603[x912];
double x915 = x623[x912];
double x913 = x590[x912];
double x916 = x914 * x915;
double x917 = x913 + x916;
x590[x912] = x917;

}
for(int x921=0; x921 < 150; x921++) {
double x922 = x610[x921];
double x924 = x623[x921];
double x923 = x589[x921];
double x925 = x923 * x924;
double x926 = x922 + x925;
x610[x921] = x926;

}
for(int x930=0; x930 < 150; x930++) {
double x932 = x603[x930];
double x935 = x610[x930];
double x931 = x602[x930];
double x933 = x932 * x932;
double x934 = 1.0 - x933;
double x936 = x934 * x935;
double x937 = x931 + x936;
x602[x930] = x937;

}
};
function<void(double**)> x593 = [&](double** x594) {
int32_t x597 = x469[x521];
bool x598 = x597 < 0;
if (x598) {
double* x942 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x943=0; x943 < 150; x943++) {
double x944 = x571[x943];
double x945 = x595[x943];
double x946 = x944 * x945;
x942[x943] = x946;

}
double* x950 = (double*)myMalloc(150 * sizeof(double));
for(int x951=0; x951 < 150; x951++) {
x950[x951] = 0.0;

}
double** x955 = (double**)myMalloc(2 * sizeof(double*));
x955[0] = x942;
x955[1] = x950;
x599(x955);
for(int x959=0; x959 < 150; x959++) {
double x962 = x950[x959];
double x960 = x572[x959];
double x961 = x595[x959];
double x963 = x961 * x962;
double x964 = x960 + x963;
x572[x959] = x964;

}
double* x596 = x594[1];
for(int x968=0; x968 < 150; x968++) {
double x971 = x950[x968];
double x969 = x596[x968];
double x970 = x571[x968];
double x972 = x970 * x971;
double x973 = x969 + x972;
x596[x968] = x973;

}
} else {
double* x978 = (double*)myMalloc(150 * sizeof(double));
double* x595 = x594[0];
for(int x979=0; x979 < 150; x979++) {
double x980 = x571[x979];
double x981 = x595[x979];
double x982 = x980 * x981;
x978[x979] = x982;

}
double* x986 = (double*)myMalloc(150 * sizeof(double));
for(int x987=0; x987 < 150; x987++) {
x986[x987] = 0.0;

}
double* x991 = (double*)myMalloc(150 * sizeof(double));
for(int x992=0; x992 < 150; x992++) {
double x993 = x577[x992];
double x994 = x538[x992];
double x995 = x993 * x994;
x991[x992] = x995;

}
double* x999 = (double*)myMalloc(150 * sizeof(double));
for(int x1000=0; x1000 < 150; x1000++) {
x999[x1000] = 0.0;

}
double* x1004 = (double*)myMalloc(150 * sizeof(double));
for(int x1005=0; x1005 < 150; x1005++) {
double x1006 = x978[x1005];
double x1007 = x991[x1005];
double x1008 = x1006 + x1007;
x1004[x1005] = x1008;

}
double* x1012 = (double*)myMalloc(150 * sizeof(double));
for(int x1013=0; x1013 < 150; x1013++) {
x1012[x1013] = 0.0;

}
double* x1017 = (double*)myMalloc(150 * sizeof(double));
for(int x1018=0; x1018 < 150; x1018++) {
double x1019 = x583[x1018];
double x1020 = x547[x1018];
double x1021 = x1019 * x1020;
x1017[x1018] = x1021;

}
double* x1025 = (double*)myMalloc(150 * sizeof(double));
for(int x1026=0; x1026 < 150; x1026++) {
x1025[x1026] = 0.0;

}
double* x1030 = (double*)myMalloc(150 * sizeof(double));
for(int x1031=0; x1031 < 150; x1031++) {
double x1032 = x1004[x1031];
double x1033 = x1017[x1031];
double x1034 = x1032 + x1033;
x1030[x1031] = x1034;

}
double* x1038 = (double*)myMalloc(150 * sizeof(double));
for(int x1039=0; x1039 < 150; x1039++) {
x1038[x1039] = 0.0;

}
double** x1043 = (double**)myMalloc(2 * sizeof(double*));
x1043[0] = x1030;
x1043[1] = x1038;
x599(x1043);
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1012[x1047];
double x1049 = x1038[x1047];
double x1050 = x1048 + x1049;
x1012[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1055 = x1025[x1054];
double x1056 = x1038[x1054];
double x1057 = x1055 + x1056;
x1025[x1054] = x1057;

}
for(int x1061=0; x1061 < 150; x1061++) {
double x1064 = x1025[x1061];
double x1062 = x584[x1061];
double x1063 = x547[x1061];
double x1065 = x1063 * x1064;
double x1066 = x1062 + x1065;
x584[x1061] = x1066;

}
for(int x1070=0; x1070 < 150; x1070++) {
double x1073 = x1025[x1070];
double x1071 = x548[x1070];
double x1072 = x583[x1070];
double x1074 = x1072 * x1073;
double x1075 = x1071 + x1074;
x548[x1070] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x986[x1079];
double x1081 = x1012[x1079];
double x1082 = x1080 + x1081;
x986[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1087 = x999[x1086];
double x1088 = x1012[x1086];
double x1089 = x1087 + x1088;
x999[x1086] = x1089;

}
for(int x1093=0; x1093 < 150; x1093++) {
double x1096 = x999[x1093];
double x1094 = x578[x1093];
double x1095 = x538[x1093];
double x1097 = x1095 * x1096;
double x1098 = x1094 + x1097;
x578[x1093] = x1098;

}
for(int x1102=0; x1102 < 150; x1102++) {
double x1105 = x999[x1102];
double x1103 = x539[x1102];
double x1104 = x577[x1102];
double x1106 = x1104 * x1105;
double x1107 = x1103 + x1106;
x539[x1102] = x1107;

}
for(int x1111=0; x1111 < 150; x1111++) {
double x1114 = x986[x1111];
double x1112 = x572[x1111];
double x1113 = x595[x1111];
double x1115 = x1113 * x1114;
double x1116 = x1112 + x1115;
x572[x1111] = x1116;

}
double* x596 = x594[1];
for(int x1120=0; x1120 < 150; x1120++) {
double x1123 = x986[x1120];
double x1121 = x596[x1120];
double x1122 = x571[x1120];
double x1124 = x1122 * x1123;
double x1125 = x1121 + x1124;
x596[x1120] = x1125;

}
}
};
x593(x1316);
for(int x1320=0; x1320 < 150; x1320++) {
double x1321 = x1299[x1320];
double x1322 = x1304[x1320];
double x1325 = x1311[x1320];
double x1323 = x1322 * x1322;
double x1324 = 1.0 - x1323;
double x1326 = x1324 * x1325;
double x1327 = x1321 + x1326;
x1299[x1320] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x1286[x1331];
double x1333 = x1299[x1331];
double x1334 = x1332 + x1333;
x1286[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x300[x1338];
double x1340 = x1299[x1338];
double x1341 = x1339 + x1340;
x300[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1252[x1345];
double x1347 = x1286[x1345];
double x1348 = x1346 + x1347;
x1252[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
double x1353 = x1273[x1352];
double x1354 = x1286[x1352];
double x1355 = x1353 + x1354;
x1273[x1352] = x1355;

}
for(int x1359=0; x1359 < 150; x1359++) {
int32_t x1361 = 150 * x1359;
for(int x1360=0; x1360 < 150; x1360++) {
int32_t x1362 = x1361 + x1360;
double x1363 = x295[x1362];
double x1365 = x1273[x1359];
double x1364 = x545[x1360];
double x1366 = x1364 * x1365;
double x1367 = x1363 + x1366;
x295[x1362] = x1367;

}

}
for(int x1373=0; x1373 < 150; x1373++) {
int32_t x1376 = 150 * x1373;
for(int x1374=0; x1374 < 150; x1374++) {
int32_t x1377 = x1376 + x1374;
double x1378 = x178[x1377];
double x1379 = x1273[x1373];
double x1375 = x546[x1374];
double x1380 = x1378 * x1379;
double x1381 = x1375 + x1380;
x546[x1374] = x1381;

}

}
for(int x1387=0; x1387 < 150; x1387++) {
int32_t x1389 = 150 * x1387;
for(int x1388=0; x1388 < 150; x1388++) {
int32_t x1390 = x1389 + x1388;
double x1391 = x290[x1390];
double x1393 = x1252[x1387];
double x1392 = x536[x1388];
double x1394 = x1392 * x1393;
double x1395 = x1391 + x1394;
x290[x1390] = x1395;

}

}
for(int x1401=0; x1401 < 150; x1401++) {
int32_t x1404 = 150 * x1401;
for(int x1402=0; x1402 < 150; x1402++) {
int32_t x1405 = x1404 + x1402;
double x1406 = x170[x1405];
double x1407 = x1252[x1401];
double x1403 = x537[x1402];
double x1408 = x1406 * x1407;
double x1409 = x1403 + x1408;
x537[x1402] = x1409;

}

}
}
};
x587(x1608);
for(int x1612=0; x1612 < 150; x1612++) {
double x1613 = x1588[x1612];
double x1614 = x1593[x1612];
double x1617 = x1603[x1612];
double x1615 = 1.0 - x1614;
double x1616 = x1615 * x1614;
double x1618 = x1616 * x1617;
double x1619 = x1613 + x1618;
x1588[x1612] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x1575[x1623];
double x1625 = x1588[x1623];
double x1626 = x1624 + x1625;
x1575[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x285[x1630];
double x1632 = x1588[x1630];
double x1633 = x1631 + x1632;
x285[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1541[x1637];
double x1639 = x1575[x1637];
double x1640 = x1638 + x1639;
x1541[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
double x1645 = x1562[x1644];
double x1646 = x1575[x1644];
double x1647 = x1645 + x1646;
x1562[x1644] = x1647;

}
for(int x1651=0; x1651 < 150; x1651++) {
int32_t x1653 = 150 * x1651;
for(int x1652=0; x1652 < 150; x1652++) {
int32_t x1654 = x1653 + x1652;
double x1655 = x280[x1654];
double x1657 = x1562[x1651];
double x1656 = x545[x1652];
double x1658 = x1656 * x1657;
double x1659 = x1655 + x1658;
x280[x1654] = x1659;

}

}
for(int x1665=0; x1665 < 150; x1665++) {
int32_t x1668 = 150 * x1665;
for(int x1666=0; x1666 < 150; x1666++) {
int32_t x1669 = x1668 + x1666;
double x1670 = x157[x1669];
double x1671 = x1562[x1665];
double x1667 = x546[x1666];
double x1672 = x1670 * x1671;
double x1673 = x1667 + x1672;
x546[x1666] = x1673;

}

}
for(int x1679=0; x1679 < 150; x1679++) {
int32_t x1681 = 150 * x1679;
for(int x1680=0; x1680 < 150; x1680++) {
int32_t x1682 = x1681 + x1680;
double x1683 = x275[x1682];
double x1685 = x1541[x1679];
double x1684 = x536[x1680];
double x1686 = x1684 * x1685;
double x1687 = x1683 + x1686;
x275[x1682] = x1687;

}

}
for(int x1693=0; x1693 < 150; x1693++) {
int32_t x1696 = 150 * x1693;
for(int x1694=0; x1694 < 150; x1694++) {
int32_t x1697 = x1696 + x1694;
double x1698 = x149[x1697];
double x1699 = x1541[x1693];
double x1695 = x537[x1694];
double x1700 = x1698 * x1699;
double x1701 = x1695 + x1700;
x537[x1694] = x1701;

}

}
}
};
x581(x1798);
for(int x1802=0; x1802 < 150; x1802++) {
double x1803 = x1778[x1802];
double x1804 = x1783[x1802];
double x1807 = x1793[x1802];
double x1805 = 1.0 - x1804;
double x1806 = x1805 * x1804;
double x1808 = x1806 * x1807;
double x1809 = x1803 + x1808;
x1778[x1802] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x1765[x1813];
double x1815 = x1778[x1813];
double x1816 = x1814 + x1815;
x1765[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x270[x1820];
double x1822 = x1778[x1820];
double x1823 = x1821 + x1822;
x270[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1731[x1827];
double x1829 = x1765[x1827];
double x1830 = x1828 + x1829;
x1731[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
double x1835 = x1752[x1834];
double x1836 = x1765[x1834];
double x1837 = x1835 + x1836;
x1752[x1834] = x1837;

}
for(int x1841=0; x1841 < 150; x1841++) {
int32_t x1843 = 150 * x1841;
for(int x1842=0; x1842 < 150; x1842++) {
int32_t x1844 = x1843 + x1842;
double x1845 = x265[x1844];
double x1847 = x1752[x1841];
double x1846 = x545[x1842];
double x1848 = x1846 * x1847;
double x1849 = x1845 + x1848;
x265[x1844] = x1849;

}

}
for(int x1855=0; x1855 < 150; x1855++) {
int32_t x1858 = 150 * x1855;
for(int x1856=0; x1856 < 150; x1856++) {
int32_t x1859 = x1858 + x1856;
double x1860 = x136[x1859];
double x1861 = x1752[x1855];
double x1857 = x546[x1856];
double x1862 = x1860 * x1861;
double x1863 = x1857 + x1862;
x546[x1856] = x1863;

}

}
for(int x1869=0; x1869 < 150; x1869++) {
int32_t x1871 = 150 * x1869;
for(int x1870=0; x1870 < 150; x1870++) {
int32_t x1872 = x1871 + x1870;
double x1873 = x260[x1872];
double x1875 = x1731[x1869];
double x1874 = x536[x1870];
double x1876 = x1874 * x1875;
double x1877 = x1873 + x1876;
x260[x1872] = x1877;

}

}
for(int x1883=0; x1883 < 150; x1883++) {
int32_t x1886 = 150 * x1883;
for(int x1884=0; x1884 < 150; x1884++) {
int32_t x1887 = x1886 + x1884;
double x1888 = x128[x1887];
double x1889 = x1731[x1883];
double x1885 = x537[x1884];
double x1890 = x1888 * x1889;
double x1891 = x1885 + x1890;
x537[x1884] = x1891;

}

}
}
};
x575(x1988);
for(int x1992=0; x1992 < 150; x1992++) {
double x1993 = x1968[x1992];
double x1994 = x1973[x1992];
double x1997 = x1983[x1992];
double x1995 = 1.0 - x1994;
double x1996 = x1995 * x1994;
double x1998 = x1996 * x1997;
double x1999 = x1993 + x1998;
x1968[x1992] = x1999;

}
for(int x2003=0; x2003 < 150; x2003++) {
double x2004 = x1955[x2003];
double x2005 = x1968[x2003];
double x2006 = x2004 + x2005;
x1955[x2003] = x2006;

}
for(int x2010=0; x2010 < 150; x2010++) {
double x2011 = x270[x2010];
double x2012 = x1968[x2010];
double x2013 = x2011 + x2012;
x270[x2010] = x2013;

}
for(int x2017=0; x2017 < 150; x2017++) {
double x2018 = x1921[x2017];
double x2019 = x1955[x2017];
double x2020 = x2018 + x2019;
x1921[x2017] = x2020;

}
for(int x2024=0; x2024 < 150; x2024++) {
double x2025 = x1942[x2024];
double x2026 = x1955[x2024];
double x2027 = x2025 + x2026;
x1942[x2024] = x2027;

}
for(int x2031=0; x2031 < 150; x2031++) {
int32_t x2033 = 150 * x2031;
for(int x2032=0; x2032 < 150; x2032++) {
int32_t x2034 = x2033 + x2032;
double x2035 = x255[x2034];
double x2037 = x1942[x2031];
double x2036 = x545[x2032];
double x2038 = x2036 * x2037;
double x2039 = x2035 + x2038;
x255[x2034] = x2039;

}

}
for(int x2045=0; x2045 < 150; x2045++) {
int32_t x2048 = 150 * x2045;
for(int x2046=0; x2046 < 150; x2046++) {
int32_t x2049 = x2048 + x2046;
double x2050 = x120[x2049];
double x2051 = x1942[x2045];
double x2047 = x546[x2046];
double x2052 = x2050 * x2051;
double x2053 = x2047 + x2052;
x546[x2046] = x2053;

}

}
for(int x2059=0; x2059 < 150; x2059++) {
int32_t x2061 = 150 * x2059;
for(int x2060=0; x2060 < 150; x2060++) {
int32_t x2062 = x2061 + x2060;
double x2063 = x250[x2062];
double x2065 = x1921[x2059];
double x2064 = x536[x2060];
double x2066 = x2064 * x2065;
double x2067 = x2063 + x2066;
x250[x2062] = x2067;

}

}
for(int x2073=0; x2073 < 150; x2073++) {
int32_t x2076 = 150 * x2073;
for(int x2074=0; x2074 < 150; x2074++) {
int32_t x2077 = x2076 + x2074;
double x2078 = x112[x2077];
double x2079 = x1921[x2073];
double x2075 = x537[x2074];
double x2080 = x2078 * x2079;
double x2081 = x2075 + x2080;
x537[x2074] = x2081;

}

}
}
};
x569(x2280);
for(int x2284=0; x2284 < 150; x2284++) {
double x2285 = x2260[x2284];
double x2286 = x2265[x2284];
double x2289 = x2275[x2284];
double x2287 = 1.0 - x2286;
double x2288 = x2287 * x2286;
double x2290 = x2288 * x2289;
double x2291 = x2285 + x2290;
x2260[x2284] = x2291;

}
for(int x2295=0; x2295 < 150; x2295++) {
double x2296 = x2247[x2295];
double x2297 = x2260[x2295];
double x2298 = x2296 + x2297;
x2247[x2295] = x2298;

}
for(int x2302=0; x2302 < 150; x2302++) {
double x2303 = x245[x2302];
double x2304 = x2260[x2302];
double x2305 = x2303 + x2304;
x245[x2302] = x2305;

}
for(int x2309=0; x2309 < 150; x2309++) {
double x2310 = x2213[x2309];
double x2311 = x2247[x2309];
double x2312 = x2310 + x2311;
x2213[x2309] = x2312;

}
for(int x2316=0; x2316 < 150; x2316++) {
double x2317 = x2234[x2316];
double x2318 = x2247[x2316];
double x2319 = x2317 + x2318;
x2234[x2316] = x2319;

}
for(int x2323=0; x2323 < 150; x2323++) {
int32_t x2325 = 150 * x2323;
for(int x2324=0; x2324 < 150; x2324++) {
int32_t x2326 = x2325 + x2324;
double x2327 = x240[x2326];
double x2329 = x2234[x2323];
double x2328 = x545[x2324];
double x2330 = x2328 * x2329;
double x2331 = x2327 + x2330;
x240[x2326] = x2331;

}

}
for(int x2337=0; x2337 < 150; x2337++) {
int32_t x2340 = 150 * x2337;
for(int x2338=0; x2338 < 150; x2338++) {
int32_t x2341 = x2340 + x2338;
double x2342 = x99[x2341];
double x2343 = x2234[x2337];
double x2339 = x546[x2338];
double x2344 = x2342 * x2343;
double x2345 = x2339 + x2344;
x546[x2338] = x2345;

}

}
for(int x2351=0; x2351 < 150; x2351++) {
int32_t x2353 = 150 * x2351;
for(int x2352=0; x2352 < 150; x2352++) {
int32_t x2354 = x2353 + x2352;
double x2355 = x235[x2354];
double x2357 = x2213[x2351];
double x2356 = x536[x2352];
double x2358 = x2356 * x2357;
double x2359 = x2355 + x2358;
x235[x2354] = x2359;

}

}
for(int x2365=0; x2365 < 150; x2365++) {
int32_t x2368 = 150 * x2365;
for(int x2366=0; x2366 < 150; x2366++) {
int32_t x2369 = x2368 + x2366;
double x2370 = x90[x2369];
double x2371 = x2213[x2365];
double x2367 = x537[x2366];
double x2372 = x2370 * x2371;
double x2373 = x2367 + x2372;
x537[x2366] = x2373;

}

}
}
};
x563(x2394);
}
};
x517(x540,x541,x2401);
};
x517(x531,x532,x2411);
} else {
double** x2421 = (double**)myMalloc(6 * sizeof(double*));
double** x523 = x520;
double* x524 = x523[0];
x2421[0] = x524;
double* x525 = x523[1];
x2421[1] = x525;
double* x526 = x523[2];
x2421[2] = x526;
double* x527 = x523[3];
x2421[3] = x527;
double* x528 = x523[4];
x2421[4] = x528;
double* x529 = x523[5];
x2421[5] = x529;
function<void(double**)> x522 = x519;
x522(x2421);
}
};
double* x472 = (double*)myMalloc(1 * sizeof(double));
for(int x473=0; x473 < 1; x473++) {
x472[x473] = 0.0;

}
double* x477 = (double*)myMalloc(1 * sizeof(double));
for(int x478=0; x478 < 1; x478++) {
x477[x478] = 0.0;

}
double* x482 = (double*)myMalloc(1 * sizeof(double));
for(int x483=0; x483 < 1; x483++) {
x482[x483] = 0.0;

}
double* x487 = (double*)myMalloc(1 * sizeof(double));
for(int x488=0; x488 < 1; x488++) {
x487[x488] = 0.0;

}
double* x492 = (double*)myMalloc(1 * sizeof(double));
for(int x493=0; x493 < 1; x493++) {
x492[x493] = 0.0;

}
double* x497 = (double*)myMalloc(150 * sizeof(double));
for(int x498=0; x498 < 150; x498++) {
x497[x498] = 0.0;

}
double* x502 = (double*)myMalloc(150 * sizeof(double));
for(int x503=0; x503 < 150; x503++) {
x502[x503] = 0.0;

}
double* x507 = (double*)myMalloc(150 * sizeof(double));
for(int x508=0; x508 < 150; x508++) {
x507[x508] = 0.0;

}
double* x512 = (double*)myMalloc(150 * sizeof(double));
for(int x513=0; x513 < 150; x513++) {
x512[x513] = 0.0;

}
double** x2450 = (double**)myMalloc(6 * sizeof(double*));
x2450[0] = x487;
x2450[1] = x492;
x2450[2] = x497;
x2450[3] = x502;
x2450[4] = x507;
x2450[5] = x512;
function<void(double**)> x2432 = [&](double** x2433) {
double* x2435 = x2433[1];
for(int x2440=0; x2440 < 1; x2440++) {
x2435[x2440] = 1.0;

}
double* x2434 = x2433[0];
for(int x2444=0; x2444 < 1; x2444++) {
double x2445 = x2434[x2444];
x482[x2444] = x2445;

}
};
x517(0,x2432,x2450);
double x2459 = x482[0];
double x2460 = x461;
double x2461 = (double)x462;
double x2462 = x2460 * x2461;
int32_t x2463 = x462 + 1;
double x2464 = (double)x2463;
double x2465 = x2462 / x2464;
double x2466 = x2459 / x2464;
double x2467 = x2465 + x2466;
x461 = x2467;
for(int x2469=0; x2469 < 45000; x2469++) {
double x2470 = x205[x2469];
bool x2471 = x2470 > 5.0;
if (x2471) {
x205[x2469] = 5.0;
} else {
}
bool x2475 = x2470 < -5.0;
if (x2475) {
x205[x2469] = -5.0;
} else {
}

}
double* x2481 = (double*)myMalloc(45000 * sizeof(double));
for(int x2482=0; x2482 < 45000; x2482++) {
double x2483 = x205[x2482];
double x2484 = x2483 * x2483;
x2481[x2482] = x2484;

}
for(int x2488=0; x2488 < 45000; x2488++) {
double x2489 = x346[x2488];
double x2490 = x2481[x2488];
double x2491 = x2489 + x2490;
x346[x2488] = x2491;

}
double* x2495 = (double*)myMalloc(45000 * sizeof(double));
for(int x2496=0; x2496 < 45000; x2496++) {
double x2497 = x205[x2496];
double x2498 = x335[0];
double x2499 = x2497 * x2498;
x2495[x2496] = x2499;

}
double* x2503 = (double*)myMalloc(45000 * sizeof(double));
for(int x2504=0; x2504 < 45000; x2504++) {
double x2505 = x346[x2504];
double x2506 = x341[0];
double x2507 = x2505 + x2506;
x2503[x2504] = x2507;

}
double* x2511 = (double*)myMalloc(45000 * sizeof(double));
for(int x2512=0; x2512 < 45000; x2512++) {
double x2513 = x2503[x2512];
double x2514 = sqrt(x2513);
x2511[x2512] = x2514;

}
double* x2518 = (double*)myMalloc(45000 * sizeof(double));
for(int x2519=0; x2519 < 45000; x2519++) {
double x2520 = x2495[x2519];
double x2521 = x2511[x2519];
double x2522 = x2520 / x2521;
x2518[x2519] = x2522;

}
for(int x2526=0; x2526 < 45000; x2526++) {
double x2527 = x49[x2526];
double x2528 = x2518[x2526];
double x2529 = x2527 - x2528;
x49[x2526] = x2529;

}
for(int x2533=0; x2533 < 45000; x2533++) {
x205[x2533] = 0.0;

}
for(int x2537=0; x2537 < 150; x2537++) {
double x2538 = x210[x2537];
bool x2539 = x2538 > 5.0;
if (x2539) {
x210[x2537] = 5.0;
} else {
}
bool x2543 = x2538 < -5.0;
if (x2543) {
x210[x2537] = -5.0;
} else {
}

}
double* x2549 = (double*)myMalloc(150 * sizeof(double));
for(int x2550=0; x2550 < 150; x2550++) {
double x2551 = x210[x2550];
double x2552 = x2551 * x2551;
x2549[x2550] = x2552;

}
for(int x2556=0; x2556 < 150; x2556++) {
double x2557 = x351[x2556];
double x2558 = x2549[x2556];
double x2559 = x2557 + x2558;
x351[x2556] = x2559;

}
double* x2563 = (double*)myMalloc(150 * sizeof(double));
for(int x2564=0; x2564 < 150; x2564++) {
double x2565 = x210[x2564];
double x2566 = x335[0];
double x2567 = x2565 * x2566;
x2563[x2564] = x2567;

}
double* x2571 = (double*)myMalloc(150 * sizeof(double));
for(int x2572=0; x2572 < 150; x2572++) {
double x2573 = x351[x2572];
double x2574 = x341[0];
double x2575 = x2573 + x2574;
x2571[x2572] = x2575;

}
double* x2579 = (double*)myMalloc(150 * sizeof(double));
for(int x2580=0; x2580 < 150; x2580++) {
double x2581 = x2571[x2580];
double x2582 = sqrt(x2581);
x2579[x2580] = x2582;

}
double* x2586 = (double*)myMalloc(150 * sizeof(double));
for(int x2587=0; x2587 < 150; x2587++) {
double x2588 = x2563[x2587];
double x2589 = x2579[x2587];
double x2590 = x2588 / x2589;
x2586[x2587] = x2590;

}
for(int x2594=0; x2594 < 150; x2594++) {
double x2595 = x57[x2594];
double x2596 = x2586[x2594];
double x2597 = x2595 - x2596;
x57[x2594] = x2597;

}
for(int x2601=0; x2601 < 150; x2601++) {
x210[x2601] = 0.0;

}
for(int x2605=0; x2605 < 45000; x2605++) {
double x2606 = x215[x2605];
bool x2607 = x2606 > 5.0;
if (x2607) {
x215[x2605] = 5.0;
} else {
}
bool x2611 = x2606 < -5.0;
if (x2611) {
x215[x2605] = -5.0;
} else {
}

}
double* x2617 = (double*)myMalloc(45000 * sizeof(double));
for(int x2618=0; x2618 < 45000; x2618++) {
double x2619 = x215[x2618];
double x2620 = x2619 * x2619;
x2617[x2618] = x2620;

}
for(int x2624=0; x2624 < 45000; x2624++) {
double x2625 = x356[x2624];
double x2626 = x2617[x2624];
double x2627 = x2625 + x2626;
x356[x2624] = x2627;

}
double* x2631 = (double*)myMalloc(45000 * sizeof(double));
for(int x2632=0; x2632 < 45000; x2632++) {
double x2633 = x215[x2632];
double x2634 = x335[0];
double x2635 = x2633 * x2634;
x2631[x2632] = x2635;

}
double* x2639 = (double*)myMalloc(45000 * sizeof(double));
for(int x2640=0; x2640 < 45000; x2640++) {
double x2641 = x356[x2640];
double x2642 = x341[0];
double x2643 = x2641 + x2642;
x2639[x2640] = x2643;

}
double* x2647 = (double*)myMalloc(45000 * sizeof(double));
for(int x2648=0; x2648 < 45000; x2648++) {
double x2649 = x2639[x2648];
double x2650 = sqrt(x2649);
x2647[x2648] = x2650;

}
double* x2654 = (double*)myMalloc(45000 * sizeof(double));
for(int x2655=0; x2655 < 45000; x2655++) {
double x2656 = x2631[x2655];
double x2657 = x2647[x2655];
double x2658 = x2656 / x2657;
x2654[x2655] = x2658;

}
for(int x2662=0; x2662 < 45000; x2662++) {
double x2663 = x64[x2662];
double x2664 = x2654[x2662];
double x2665 = x2663 - x2664;
x64[x2662] = x2665;

}
for(int x2669=0; x2669 < 45000; x2669++) {
x215[x2669] = 0.0;

}
for(int x2673=0; x2673 < 150; x2673++) {
double x2674 = x220[x2673];
bool x2675 = x2674 > 5.0;
if (x2675) {
x220[x2673] = 5.0;
} else {
}
bool x2679 = x2674 < -5.0;
if (x2679) {
x220[x2673] = -5.0;
} else {
}

}
double* x2685 = (double*)myMalloc(150 * sizeof(double));
for(int x2686=0; x2686 < 150; x2686++) {
double x2687 = x220[x2686];
double x2688 = x2687 * x2687;
x2685[x2686] = x2688;

}
for(int x2692=0; x2692 < 150; x2692++) {
double x2693 = x361[x2692];
double x2694 = x2685[x2692];
double x2695 = x2693 + x2694;
x361[x2692] = x2695;

}
double* x2699 = (double*)myMalloc(150 * sizeof(double));
for(int x2700=0; x2700 < 150; x2700++) {
double x2701 = x220[x2700];
double x2702 = x335[0];
double x2703 = x2701 * x2702;
x2699[x2700] = x2703;

}
double* x2707 = (double*)myMalloc(150 * sizeof(double));
for(int x2708=0; x2708 < 150; x2708++) {
double x2709 = x361[x2708];
double x2710 = x341[0];
double x2711 = x2709 + x2710;
x2707[x2708] = x2711;

}
double* x2715 = (double*)myMalloc(150 * sizeof(double));
for(int x2716=0; x2716 < 150; x2716++) {
double x2717 = x2707[x2716];
double x2718 = sqrt(x2717);
x2715[x2716] = x2718;

}
double* x2722 = (double*)myMalloc(150 * sizeof(double));
for(int x2723=0; x2723 < 150; x2723++) {
double x2724 = x2699[x2723];
double x2725 = x2715[x2723];
double x2726 = x2724 / x2725;
x2722[x2723] = x2726;

}
for(int x2730=0; x2730 < 150; x2730++) {
double x2731 = x71[x2730];
double x2732 = x2722[x2730];
double x2733 = x2731 - x2732;
x71[x2730] = x2733;

}
for(int x2737=0; x2737 < 150; x2737++) {
x220[x2737] = 0.0;

}
for(int x2741=0; x2741 < 45000; x2741++) {
double x2742 = x225[x2741];
bool x2743 = x2742 > 5.0;
if (x2743) {
x225[x2741] = 5.0;
} else {
}
bool x2747 = x2742 < -5.0;
if (x2747) {
x225[x2741] = -5.0;
} else {
}

}
double* x2753 = (double*)myMalloc(45000 * sizeof(double));
for(int x2754=0; x2754 < 45000; x2754++) {
double x2755 = x225[x2754];
double x2756 = x2755 * x2755;
x2753[x2754] = x2756;

}
for(int x2760=0; x2760 < 45000; x2760++) {
double x2761 = x366[x2760];
double x2762 = x2753[x2760];
double x2763 = x2761 + x2762;
x366[x2760] = x2763;

}
double* x2767 = (double*)myMalloc(45000 * sizeof(double));
for(int x2768=0; x2768 < 45000; x2768++) {
double x2769 = x225[x2768];
double x2770 = x335[0];
double x2771 = x2769 * x2770;
x2767[x2768] = x2771;

}
double* x2775 = (double*)myMalloc(45000 * sizeof(double));
for(int x2776=0; x2776 < 45000; x2776++) {
double x2777 = x366[x2776];
double x2778 = x341[0];
double x2779 = x2777 + x2778;
x2775[x2776] = x2779;

}
double* x2783 = (double*)myMalloc(45000 * sizeof(double));
for(int x2784=0; x2784 < 45000; x2784++) {
double x2785 = x2775[x2784];
double x2786 = sqrt(x2785);
x2783[x2784] = x2786;

}
double* x2790 = (double*)myMalloc(45000 * sizeof(double));
for(int x2791=0; x2791 < 45000; x2791++) {
double x2792 = x2767[x2791];
double x2793 = x2783[x2791];
double x2794 = x2792 / x2793;
x2790[x2791] = x2794;

}
for(int x2798=0; x2798 < 45000; x2798++) {
double x2799 = x77[x2798];
double x2800 = x2790[x2798];
double x2801 = x2799 - x2800;
x77[x2798] = x2801;

}
for(int x2805=0; x2805 < 45000; x2805++) {
x225[x2805] = 0.0;

}
for(int x2809=0; x2809 < 150; x2809++) {
double x2810 = x230[x2809];
bool x2811 = x2810 > 5.0;
if (x2811) {
x230[x2809] = 5.0;
} else {
}
bool x2815 = x2810 < -5.0;
if (x2815) {
x230[x2809] = -5.0;
} else {
}

}
double* x2821 = (double*)myMalloc(150 * sizeof(double));
for(int x2822=0; x2822 < 150; x2822++) {
double x2823 = x230[x2822];
double x2824 = x2823 * x2823;
x2821[x2822] = x2824;

}
for(int x2828=0; x2828 < 150; x2828++) {
double x2829 = x371[x2828];
double x2830 = x2821[x2828];
double x2831 = x2829 + x2830;
x371[x2828] = x2831;

}
double* x2835 = (double*)myMalloc(150 * sizeof(double));
for(int x2836=0; x2836 < 150; x2836++) {
double x2837 = x230[x2836];
double x2838 = x335[0];
double x2839 = x2837 * x2838;
x2835[x2836] = x2839;

}
double* x2843 = (double*)myMalloc(150 * sizeof(double));
for(int x2844=0; x2844 < 150; x2844++) {
double x2845 = x371[x2844];
double x2846 = x341[0];
double x2847 = x2845 + x2846;
x2843[x2844] = x2847;

}
double* x2851 = (double*)myMalloc(150 * sizeof(double));
for(int x2852=0; x2852 < 150; x2852++) {
double x2853 = x2843[x2852];
double x2854 = sqrt(x2853);
x2851[x2852] = x2854;

}
double* x2858 = (double*)myMalloc(150 * sizeof(double));
for(int x2859=0; x2859 < 150; x2859++) {
double x2860 = x2835[x2859];
double x2861 = x2851[x2859];
double x2862 = x2860 / x2861;
x2858[x2859] = x2862;

}
for(int x2866=0; x2866 < 150; x2866++) {
double x2867 = x84[x2866];
double x2868 = x2858[x2866];
double x2869 = x2867 - x2868;
x84[x2866] = x2869;

}
for(int x2873=0; x2873 < 150; x2873++) {
x230[x2873] = 0.0;

}
for(int x2877=0; x2877 < 22500; x2877++) {
double x2878 = x235[x2877];
bool x2879 = x2878 > 5.0;
if (x2879) {
x235[x2877] = 5.0;
} else {
}
bool x2883 = x2878 < -5.0;
if (x2883) {
x235[x2877] = -5.0;
} else {
}

}
double* x2889 = (double*)myMalloc(22500 * sizeof(double));
for(int x2890=0; x2890 < 22500; x2890++) {
double x2891 = x235[x2890];
double x2892 = x2891 * x2891;
x2889[x2890] = x2892;

}
for(int x2896=0; x2896 < 22500; x2896++) {
double x2897 = x376[x2896];
double x2898 = x2889[x2896];
double x2899 = x2897 + x2898;
x376[x2896] = x2899;

}
double* x2903 = (double*)myMalloc(22500 * sizeof(double));
for(int x2904=0; x2904 < 22500; x2904++) {
double x2905 = x235[x2904];
double x2906 = x335[0];
double x2907 = x2905 * x2906;
x2903[x2904] = x2907;

}
double* x2911 = (double*)myMalloc(22500 * sizeof(double));
for(int x2912=0; x2912 < 22500; x2912++) {
double x2913 = x376[x2912];
double x2914 = x341[0];
double x2915 = x2913 + x2914;
x2911[x2912] = x2915;

}
double* x2919 = (double*)myMalloc(22500 * sizeof(double));
for(int x2920=0; x2920 < 22500; x2920++) {
double x2921 = x2911[x2920];
double x2922 = sqrt(x2921);
x2919[x2920] = x2922;

}
double* x2926 = (double*)myMalloc(22500 * sizeof(double));
for(int x2927=0; x2927 < 22500; x2927++) {
double x2928 = x2903[x2927];
double x2929 = x2919[x2927];
double x2930 = x2928 / x2929;
x2926[x2927] = x2930;

}
for(int x2934=0; x2934 < 22500; x2934++) {
double x2935 = x90[x2934];
double x2936 = x2926[x2934];
double x2937 = x2935 - x2936;
x90[x2934] = x2937;

}
for(int x2941=0; x2941 < 22500; x2941++) {
x235[x2941] = 0.0;

}
for(int x2945=0; x2945 < 22500; x2945++) {
double x2946 = x240[x2945];
bool x2947 = x2946 > 5.0;
if (x2947) {
x240[x2945] = 5.0;
} else {
}
bool x2951 = x2946 < -5.0;
if (x2951) {
x240[x2945] = -5.0;
} else {
}

}
double* x2957 = (double*)myMalloc(22500 * sizeof(double));
for(int x2958=0; x2958 < 22500; x2958++) {
double x2959 = x240[x2958];
double x2960 = x2959 * x2959;
x2957[x2958] = x2960;

}
for(int x2964=0; x2964 < 22500; x2964++) {
double x2965 = x381[x2964];
double x2966 = x2957[x2964];
double x2967 = x2965 + x2966;
x381[x2964] = x2967;

}
double* x2971 = (double*)myMalloc(22500 * sizeof(double));
for(int x2972=0; x2972 < 22500; x2972++) {
double x2973 = x240[x2972];
double x2974 = x335[0];
double x2975 = x2973 * x2974;
x2971[x2972] = x2975;

}
double* x2979 = (double*)myMalloc(22500 * sizeof(double));
for(int x2980=0; x2980 < 22500; x2980++) {
double x2981 = x381[x2980];
double x2982 = x341[0];
double x2983 = x2981 + x2982;
x2979[x2980] = x2983;

}
double* x2987 = (double*)myMalloc(22500 * sizeof(double));
for(int x2988=0; x2988 < 22500; x2988++) {
double x2989 = x2979[x2988];
double x2990 = sqrt(x2989);
x2987[x2988] = x2990;

}
double* x2994 = (double*)myMalloc(22500 * sizeof(double));
for(int x2995=0; x2995 < 22500; x2995++) {
double x2996 = x2971[x2995];
double x2997 = x2987[x2995];
double x2998 = x2996 / x2997;
x2994[x2995] = x2998;

}
for(int x3002=0; x3002 < 22500; x3002++) {
double x3003 = x99[x3002];
double x3004 = x2994[x3002];
double x3005 = x3003 - x3004;
x99[x3002] = x3005;

}
for(int x3009=0; x3009 < 22500; x3009++) {
x240[x3009] = 0.0;

}
for(int x3013=0; x3013 < 150; x3013++) {
double x3014 = x245[x3013];
bool x3015 = x3014 > 5.0;
if (x3015) {
x245[x3013] = 5.0;
} else {
}
bool x3019 = x3014 < -5.0;
if (x3019) {
x245[x3013] = -5.0;
} else {
}

}
double* x3025 = (double*)myMalloc(150 * sizeof(double));
for(int x3026=0; x3026 < 150; x3026++) {
double x3027 = x245[x3026];
double x3028 = x3027 * x3027;
x3025[x3026] = x3028;

}
for(int x3032=0; x3032 < 150; x3032++) {
double x3033 = x386[x3032];
double x3034 = x3025[x3032];
double x3035 = x3033 + x3034;
x386[x3032] = x3035;

}
double* x3039 = (double*)myMalloc(150 * sizeof(double));
for(int x3040=0; x3040 < 150; x3040++) {
double x3041 = x245[x3040];
double x3042 = x335[0];
double x3043 = x3041 * x3042;
x3039[x3040] = x3043;

}
double* x3047 = (double*)myMalloc(150 * sizeof(double));
for(int x3048=0; x3048 < 150; x3048++) {
double x3049 = x386[x3048];
double x3050 = x341[0];
double x3051 = x3049 + x3050;
x3047[x3048] = x3051;

}
double* x3055 = (double*)myMalloc(150 * sizeof(double));
for(int x3056=0; x3056 < 150; x3056++) {
double x3057 = x3047[x3056];
double x3058 = sqrt(x3057);
x3055[x3056] = x3058;

}
double* x3062 = (double*)myMalloc(150 * sizeof(double));
for(int x3063=0; x3063 < 150; x3063++) {
double x3064 = x3039[x3063];
double x3065 = x3055[x3063];
double x3066 = x3064 / x3065;
x3062[x3063] = x3066;

}
for(int x3070=0; x3070 < 150; x3070++) {
double x3071 = x106[x3070];
double x3072 = x3062[x3070];
double x3073 = x3071 - x3072;
x106[x3070] = x3073;

}
for(int x3077=0; x3077 < 150; x3077++) {
x245[x3077] = 0.0;

}
for(int x3081=0; x3081 < 22500; x3081++) {
double x3082 = x250[x3081];
bool x3083 = x3082 > 5.0;
if (x3083) {
x250[x3081] = 5.0;
} else {
}
bool x3087 = x3082 < -5.0;
if (x3087) {
x250[x3081] = -5.0;
} else {
}

}
double* x3093 = (double*)myMalloc(22500 * sizeof(double));
for(int x3094=0; x3094 < 22500; x3094++) {
double x3095 = x250[x3094];
double x3096 = x3095 * x3095;
x3093[x3094] = x3096;

}
for(int x3100=0; x3100 < 22500; x3100++) {
double x3101 = x391[x3100];
double x3102 = x3093[x3100];
double x3103 = x3101 + x3102;
x391[x3100] = x3103;

}
double* x3107 = (double*)myMalloc(22500 * sizeof(double));
for(int x3108=0; x3108 < 22500; x3108++) {
double x3109 = x250[x3108];
double x3110 = x335[0];
double x3111 = x3109 * x3110;
x3107[x3108] = x3111;

}
double* x3115 = (double*)myMalloc(22500 * sizeof(double));
for(int x3116=0; x3116 < 22500; x3116++) {
double x3117 = x391[x3116];
double x3118 = x341[0];
double x3119 = x3117 + x3118;
x3115[x3116] = x3119;

}
double* x3123 = (double*)myMalloc(22500 * sizeof(double));
for(int x3124=0; x3124 < 22500; x3124++) {
double x3125 = x3115[x3124];
double x3126 = sqrt(x3125);
x3123[x3124] = x3126;

}
double* x3130 = (double*)myMalloc(22500 * sizeof(double));
for(int x3131=0; x3131 < 22500; x3131++) {
double x3132 = x3107[x3131];
double x3133 = x3123[x3131];
double x3134 = x3132 / x3133;
x3130[x3131] = x3134;

}
for(int x3138=0; x3138 < 22500; x3138++) {
double x3139 = x112[x3138];
double x3140 = x3130[x3138];
double x3141 = x3139 - x3140;
x112[x3138] = x3141;

}
for(int x3145=0; x3145 < 22500; x3145++) {
x250[x3145] = 0.0;

}
for(int x3149=0; x3149 < 22500; x3149++) {
double x3150 = x255[x3149];
bool x3151 = x3150 > 5.0;
if (x3151) {
x255[x3149] = 5.0;
} else {
}
bool x3155 = x3150 < -5.0;
if (x3155) {
x255[x3149] = -5.0;
} else {
}

}
double* x3161 = (double*)myMalloc(22500 * sizeof(double));
for(int x3162=0; x3162 < 22500; x3162++) {
double x3163 = x255[x3162];
double x3164 = x3163 * x3163;
x3161[x3162] = x3164;

}
for(int x3168=0; x3168 < 22500; x3168++) {
double x3169 = x396[x3168];
double x3170 = x3161[x3168];
double x3171 = x3169 + x3170;
x396[x3168] = x3171;

}
double* x3175 = (double*)myMalloc(22500 * sizeof(double));
for(int x3176=0; x3176 < 22500; x3176++) {
double x3177 = x255[x3176];
double x3178 = x335[0];
double x3179 = x3177 * x3178;
x3175[x3176] = x3179;

}
double* x3183 = (double*)myMalloc(22500 * sizeof(double));
for(int x3184=0; x3184 < 22500; x3184++) {
double x3185 = x396[x3184];
double x3186 = x341[0];
double x3187 = x3185 + x3186;
x3183[x3184] = x3187;

}
double* x3191 = (double*)myMalloc(22500 * sizeof(double));
for(int x3192=0; x3192 < 22500; x3192++) {
double x3193 = x3183[x3192];
double x3194 = sqrt(x3193);
x3191[x3192] = x3194;

}
double* x3198 = (double*)myMalloc(22500 * sizeof(double));
for(int x3199=0; x3199 < 22500; x3199++) {
double x3200 = x3175[x3199];
double x3201 = x3191[x3199];
double x3202 = x3200 / x3201;
x3198[x3199] = x3202;

}
for(int x3206=0; x3206 < 22500; x3206++) {
double x3207 = x120[x3206];
double x3208 = x3198[x3206];
double x3209 = x3207 - x3208;
x120[x3206] = x3209;

}
for(int x3213=0; x3213 < 22500; x3213++) {
x255[x3213] = 0.0;

}
for(int x3217=0; x3217 < 22500; x3217++) {
double x3218 = x260[x3217];
bool x3219 = x3218 > 5.0;
if (x3219) {
x260[x3217] = 5.0;
} else {
}
bool x3223 = x3218 < -5.0;
if (x3223) {
x260[x3217] = -5.0;
} else {
}

}
double* x3229 = (double*)myMalloc(22500 * sizeof(double));
for(int x3230=0; x3230 < 22500; x3230++) {
double x3231 = x260[x3230];
double x3232 = x3231 * x3231;
x3229[x3230] = x3232;

}
for(int x3236=0; x3236 < 22500; x3236++) {
double x3237 = x401[x3236];
double x3238 = x3229[x3236];
double x3239 = x3237 + x3238;
x401[x3236] = x3239;

}
double* x3243 = (double*)myMalloc(22500 * sizeof(double));
for(int x3244=0; x3244 < 22500; x3244++) {
double x3245 = x260[x3244];
double x3246 = x335[0];
double x3247 = x3245 * x3246;
x3243[x3244] = x3247;

}
double* x3251 = (double*)myMalloc(22500 * sizeof(double));
for(int x3252=0; x3252 < 22500; x3252++) {
double x3253 = x401[x3252];
double x3254 = x341[0];
double x3255 = x3253 + x3254;
x3251[x3252] = x3255;

}
double* x3259 = (double*)myMalloc(22500 * sizeof(double));
for(int x3260=0; x3260 < 22500; x3260++) {
double x3261 = x3251[x3260];
double x3262 = sqrt(x3261);
x3259[x3260] = x3262;

}
double* x3266 = (double*)myMalloc(22500 * sizeof(double));
for(int x3267=0; x3267 < 22500; x3267++) {
double x3268 = x3243[x3267];
double x3269 = x3259[x3267];
double x3270 = x3268 / x3269;
x3266[x3267] = x3270;

}
for(int x3274=0; x3274 < 22500; x3274++) {
double x3275 = x128[x3274];
double x3276 = x3266[x3274];
double x3277 = x3275 - x3276;
x128[x3274] = x3277;

}
for(int x3281=0; x3281 < 22500; x3281++) {
x260[x3281] = 0.0;

}
for(int x3285=0; x3285 < 22500; x3285++) {
double x3286 = x265[x3285];
bool x3287 = x3286 > 5.0;
if (x3287) {
x265[x3285] = 5.0;
} else {
}
bool x3291 = x3286 < -5.0;
if (x3291) {
x265[x3285] = -5.0;
} else {
}

}
double* x3297 = (double*)myMalloc(22500 * sizeof(double));
for(int x3298=0; x3298 < 22500; x3298++) {
double x3299 = x265[x3298];
double x3300 = x3299 * x3299;
x3297[x3298] = x3300;

}
for(int x3304=0; x3304 < 22500; x3304++) {
double x3305 = x406[x3304];
double x3306 = x3297[x3304];
double x3307 = x3305 + x3306;
x406[x3304] = x3307;

}
double* x3311 = (double*)myMalloc(22500 * sizeof(double));
for(int x3312=0; x3312 < 22500; x3312++) {
double x3313 = x265[x3312];
double x3314 = x335[0];
double x3315 = x3313 * x3314;
x3311[x3312] = x3315;

}
double* x3319 = (double*)myMalloc(22500 * sizeof(double));
for(int x3320=0; x3320 < 22500; x3320++) {
double x3321 = x406[x3320];
double x3322 = x341[0];
double x3323 = x3321 + x3322;
x3319[x3320] = x3323;

}
double* x3327 = (double*)myMalloc(22500 * sizeof(double));
for(int x3328=0; x3328 < 22500; x3328++) {
double x3329 = x3319[x3328];
double x3330 = sqrt(x3329);
x3327[x3328] = x3330;

}
double* x3334 = (double*)myMalloc(22500 * sizeof(double));
for(int x3335=0; x3335 < 22500; x3335++) {
double x3336 = x3311[x3335];
double x3337 = x3327[x3335];
double x3338 = x3336 / x3337;
x3334[x3335] = x3338;

}
for(int x3342=0; x3342 < 22500; x3342++) {
double x3343 = x136[x3342];
double x3344 = x3334[x3342];
double x3345 = x3343 - x3344;
x136[x3342] = x3345;

}
for(int x3349=0; x3349 < 22500; x3349++) {
x265[x3349] = 0.0;

}
for(int x3353=0; x3353 < 150; x3353++) {
double x3354 = x270[x3353];
bool x3355 = x3354 > 5.0;
if (x3355) {
x270[x3353] = 5.0;
} else {
}
bool x3359 = x3354 < -5.0;
if (x3359) {
x270[x3353] = -5.0;
} else {
}

}
double* x3365 = (double*)myMalloc(150 * sizeof(double));
for(int x3366=0; x3366 < 150; x3366++) {
double x3367 = x270[x3366];
double x3368 = x3367 * x3367;
x3365[x3366] = x3368;

}
for(int x3372=0; x3372 < 150; x3372++) {
double x3373 = x411[x3372];
double x3374 = x3365[x3372];
double x3375 = x3373 + x3374;
x411[x3372] = x3375;

}
double* x3379 = (double*)myMalloc(150 * sizeof(double));
for(int x3380=0; x3380 < 150; x3380++) {
double x3381 = x270[x3380];
double x3382 = x335[0];
double x3383 = x3381 * x3382;
x3379[x3380] = x3383;

}
double* x3387 = (double*)myMalloc(150 * sizeof(double));
for(int x3388=0; x3388 < 150; x3388++) {
double x3389 = x411[x3388];
double x3390 = x341[0];
double x3391 = x3389 + x3390;
x3387[x3388] = x3391;

}
double* x3395 = (double*)myMalloc(150 * sizeof(double));
for(int x3396=0; x3396 < 150; x3396++) {
double x3397 = x3387[x3396];
double x3398 = sqrt(x3397);
x3395[x3396] = x3398;

}
double* x3402 = (double*)myMalloc(150 * sizeof(double));
for(int x3403=0; x3403 < 150; x3403++) {
double x3404 = x3379[x3403];
double x3405 = x3395[x3403];
double x3406 = x3404 / x3405;
x3402[x3403] = x3406;

}
for(int x3410=0; x3410 < 150; x3410++) {
double x3411 = x143[x3410];
double x3412 = x3402[x3410];
double x3413 = x3411 - x3412;
x143[x3410] = x3413;

}
for(int x3417=0; x3417 < 150; x3417++) {
x270[x3417] = 0.0;

}
for(int x3421=0; x3421 < 22500; x3421++) {
double x3422 = x275[x3421];
bool x3423 = x3422 > 5.0;
if (x3423) {
x275[x3421] = 5.0;
} else {
}
bool x3427 = x3422 < -5.0;
if (x3427) {
x275[x3421] = -5.0;
} else {
}

}
double* x3433 = (double*)myMalloc(22500 * sizeof(double));
for(int x3434=0; x3434 < 22500; x3434++) {
double x3435 = x275[x3434];
double x3436 = x3435 * x3435;
x3433[x3434] = x3436;

}
for(int x3440=0; x3440 < 22500; x3440++) {
double x3441 = x416[x3440];
double x3442 = x3433[x3440];
double x3443 = x3441 + x3442;
x416[x3440] = x3443;

}
double* x3447 = (double*)myMalloc(22500 * sizeof(double));
for(int x3448=0; x3448 < 22500; x3448++) {
double x3449 = x275[x3448];
double x3450 = x335[0];
double x3451 = x3449 * x3450;
x3447[x3448] = x3451;

}
double* x3455 = (double*)myMalloc(22500 * sizeof(double));
for(int x3456=0; x3456 < 22500; x3456++) {
double x3457 = x416[x3456];
double x3458 = x341[0];
double x3459 = x3457 + x3458;
x3455[x3456] = x3459;

}
double* x3463 = (double*)myMalloc(22500 * sizeof(double));
for(int x3464=0; x3464 < 22500; x3464++) {
double x3465 = x3455[x3464];
double x3466 = sqrt(x3465);
x3463[x3464] = x3466;

}
double* x3470 = (double*)myMalloc(22500 * sizeof(double));
for(int x3471=0; x3471 < 22500; x3471++) {
double x3472 = x3447[x3471];
double x3473 = x3463[x3471];
double x3474 = x3472 / x3473;
x3470[x3471] = x3474;

}
for(int x3478=0; x3478 < 22500; x3478++) {
double x3479 = x149[x3478];
double x3480 = x3470[x3478];
double x3481 = x3479 - x3480;
x149[x3478] = x3481;

}
for(int x3485=0; x3485 < 22500; x3485++) {
x275[x3485] = 0.0;

}
for(int x3489=0; x3489 < 22500; x3489++) {
double x3490 = x280[x3489];
bool x3491 = x3490 > 5.0;
if (x3491) {
x280[x3489] = 5.0;
} else {
}
bool x3495 = x3490 < -5.0;
if (x3495) {
x280[x3489] = -5.0;
} else {
}

}
double* x3501 = (double*)myMalloc(22500 * sizeof(double));
for(int x3502=0; x3502 < 22500; x3502++) {
double x3503 = x280[x3502];
double x3504 = x3503 * x3503;
x3501[x3502] = x3504;

}
for(int x3508=0; x3508 < 22500; x3508++) {
double x3509 = x421[x3508];
double x3510 = x3501[x3508];
double x3511 = x3509 + x3510;
x421[x3508] = x3511;

}
double* x3515 = (double*)myMalloc(22500 * sizeof(double));
for(int x3516=0; x3516 < 22500; x3516++) {
double x3517 = x280[x3516];
double x3518 = x335[0];
double x3519 = x3517 * x3518;
x3515[x3516] = x3519;

}
double* x3523 = (double*)myMalloc(22500 * sizeof(double));
for(int x3524=0; x3524 < 22500; x3524++) {
double x3525 = x421[x3524];
double x3526 = x341[0];
double x3527 = x3525 + x3526;
x3523[x3524] = x3527;

}
double* x3531 = (double*)myMalloc(22500 * sizeof(double));
for(int x3532=0; x3532 < 22500; x3532++) {
double x3533 = x3523[x3532];
double x3534 = sqrt(x3533);
x3531[x3532] = x3534;

}
double* x3538 = (double*)myMalloc(22500 * sizeof(double));
for(int x3539=0; x3539 < 22500; x3539++) {
double x3540 = x3515[x3539];
double x3541 = x3531[x3539];
double x3542 = x3540 / x3541;
x3538[x3539] = x3542;

}
for(int x3546=0; x3546 < 22500; x3546++) {
double x3547 = x157[x3546];
double x3548 = x3538[x3546];
double x3549 = x3547 - x3548;
x157[x3546] = x3549;

}
for(int x3553=0; x3553 < 22500; x3553++) {
x280[x3553] = 0.0;

}
for(int x3557=0; x3557 < 150; x3557++) {
double x3558 = x285[x3557];
bool x3559 = x3558 > 5.0;
if (x3559) {
x285[x3557] = 5.0;
} else {
}
bool x3563 = x3558 < -5.0;
if (x3563) {
x285[x3557] = -5.0;
} else {
}

}
double* x3569 = (double*)myMalloc(150 * sizeof(double));
for(int x3570=0; x3570 < 150; x3570++) {
double x3571 = x285[x3570];
double x3572 = x3571 * x3571;
x3569[x3570] = x3572;

}
for(int x3576=0; x3576 < 150; x3576++) {
double x3577 = x426[x3576];
double x3578 = x3569[x3576];
double x3579 = x3577 + x3578;
x426[x3576] = x3579;

}
double* x3583 = (double*)myMalloc(150 * sizeof(double));
for(int x3584=0; x3584 < 150; x3584++) {
double x3585 = x285[x3584];
double x3586 = x335[0];
double x3587 = x3585 * x3586;
x3583[x3584] = x3587;

}
double* x3591 = (double*)myMalloc(150 * sizeof(double));
for(int x3592=0; x3592 < 150; x3592++) {
double x3593 = x426[x3592];
double x3594 = x341[0];
double x3595 = x3593 + x3594;
x3591[x3592] = x3595;

}
double* x3599 = (double*)myMalloc(150 * sizeof(double));
for(int x3600=0; x3600 < 150; x3600++) {
double x3601 = x3591[x3600];
double x3602 = sqrt(x3601);
x3599[x3600] = x3602;

}
double* x3606 = (double*)myMalloc(150 * sizeof(double));
for(int x3607=0; x3607 < 150; x3607++) {
double x3608 = x3583[x3607];
double x3609 = x3599[x3607];
double x3610 = x3608 / x3609;
x3606[x3607] = x3610;

}
for(int x3614=0; x3614 < 150; x3614++) {
double x3615 = x164[x3614];
double x3616 = x3606[x3614];
double x3617 = x3615 - x3616;
x164[x3614] = x3617;

}
for(int x3621=0; x3621 < 150; x3621++) {
x285[x3621] = 0.0;

}
for(int x3625=0; x3625 < 22500; x3625++) {
double x3626 = x290[x3625];
bool x3627 = x3626 > 5.0;
if (x3627) {
x290[x3625] = 5.0;
} else {
}
bool x3631 = x3626 < -5.0;
if (x3631) {
x290[x3625] = -5.0;
} else {
}

}
double* x3637 = (double*)myMalloc(22500 * sizeof(double));
for(int x3638=0; x3638 < 22500; x3638++) {
double x3639 = x290[x3638];
double x3640 = x3639 * x3639;
x3637[x3638] = x3640;

}
for(int x3644=0; x3644 < 22500; x3644++) {
double x3645 = x431[x3644];
double x3646 = x3637[x3644];
double x3647 = x3645 + x3646;
x431[x3644] = x3647;

}
double* x3651 = (double*)myMalloc(22500 * sizeof(double));
for(int x3652=0; x3652 < 22500; x3652++) {
double x3653 = x290[x3652];
double x3654 = x335[0];
double x3655 = x3653 * x3654;
x3651[x3652] = x3655;

}
double* x3659 = (double*)myMalloc(22500 * sizeof(double));
for(int x3660=0; x3660 < 22500; x3660++) {
double x3661 = x431[x3660];
double x3662 = x341[0];
double x3663 = x3661 + x3662;
x3659[x3660] = x3663;

}
double* x3667 = (double*)myMalloc(22500 * sizeof(double));
for(int x3668=0; x3668 < 22500; x3668++) {
double x3669 = x3659[x3668];
double x3670 = sqrt(x3669);
x3667[x3668] = x3670;

}
double* x3674 = (double*)myMalloc(22500 * sizeof(double));
for(int x3675=0; x3675 < 22500; x3675++) {
double x3676 = x3651[x3675];
double x3677 = x3667[x3675];
double x3678 = x3676 / x3677;
x3674[x3675] = x3678;

}
for(int x3682=0; x3682 < 22500; x3682++) {
double x3683 = x170[x3682];
double x3684 = x3674[x3682];
double x3685 = x3683 - x3684;
x170[x3682] = x3685;

}
for(int x3689=0; x3689 < 22500; x3689++) {
x290[x3689] = 0.0;

}
for(int x3693=0; x3693 < 22500; x3693++) {
double x3694 = x295[x3693];
bool x3695 = x3694 > 5.0;
if (x3695) {
x295[x3693] = 5.0;
} else {
}
bool x3699 = x3694 < -5.0;
if (x3699) {
x295[x3693] = -5.0;
} else {
}

}
double* x3705 = (double*)myMalloc(22500 * sizeof(double));
for(int x3706=0; x3706 < 22500; x3706++) {
double x3707 = x295[x3706];
double x3708 = x3707 * x3707;
x3705[x3706] = x3708;

}
for(int x3712=0; x3712 < 22500; x3712++) {
double x3713 = x436[x3712];
double x3714 = x3705[x3712];
double x3715 = x3713 + x3714;
x436[x3712] = x3715;

}
double* x3719 = (double*)myMalloc(22500 * sizeof(double));
for(int x3720=0; x3720 < 22500; x3720++) {
double x3721 = x295[x3720];
double x3722 = x335[0];
double x3723 = x3721 * x3722;
x3719[x3720] = x3723;

}
double* x3727 = (double*)myMalloc(22500 * sizeof(double));
for(int x3728=0; x3728 < 22500; x3728++) {
double x3729 = x436[x3728];
double x3730 = x341[0];
double x3731 = x3729 + x3730;
x3727[x3728] = x3731;

}
double* x3735 = (double*)myMalloc(22500 * sizeof(double));
for(int x3736=0; x3736 < 22500; x3736++) {
double x3737 = x3727[x3736];
double x3738 = sqrt(x3737);
x3735[x3736] = x3738;

}
double* x3742 = (double*)myMalloc(22500 * sizeof(double));
for(int x3743=0; x3743 < 22500; x3743++) {
double x3744 = x3719[x3743];
double x3745 = x3735[x3743];
double x3746 = x3744 / x3745;
x3742[x3743] = x3746;

}
for(int x3750=0; x3750 < 22500; x3750++) {
double x3751 = x178[x3750];
double x3752 = x3742[x3750];
double x3753 = x3751 - x3752;
x178[x3750] = x3753;

}
for(int x3757=0; x3757 < 22500; x3757++) {
x295[x3757] = 0.0;

}
for(int x3761=0; x3761 < 150; x3761++) {
double x3762 = x300[x3761];
bool x3763 = x3762 > 5.0;
if (x3763) {
x300[x3761] = 5.0;
} else {
}
bool x3767 = x3762 < -5.0;
if (x3767) {
x300[x3761] = -5.0;
} else {
}

}
double* x3773 = (double*)myMalloc(150 * sizeof(double));
for(int x3774=0; x3774 < 150; x3774++) {
double x3775 = x300[x3774];
double x3776 = x3775 * x3775;
x3773[x3774] = x3776;

}
for(int x3780=0; x3780 < 150; x3780++) {
double x3781 = x441[x3780];
double x3782 = x3773[x3780];
double x3783 = x3781 + x3782;
x441[x3780] = x3783;

}
double* x3787 = (double*)myMalloc(150 * sizeof(double));
for(int x3788=0; x3788 < 150; x3788++) {
double x3789 = x300[x3788];
double x3790 = x335[0];
double x3791 = x3789 * x3790;
x3787[x3788] = x3791;

}
double* x3795 = (double*)myMalloc(150 * sizeof(double));
for(int x3796=0; x3796 < 150; x3796++) {
double x3797 = x441[x3796];
double x3798 = x341[0];
double x3799 = x3797 + x3798;
x3795[x3796] = x3799;

}
double* x3803 = (double*)myMalloc(150 * sizeof(double));
for(int x3804=0; x3804 < 150; x3804++) {
double x3805 = x3795[x3804];
double x3806 = sqrt(x3805);
x3803[x3804] = x3806;

}
double* x3810 = (double*)myMalloc(150 * sizeof(double));
for(int x3811=0; x3811 < 150; x3811++) {
double x3812 = x3787[x3811];
double x3813 = x3803[x3811];
double x3814 = x3812 / x3813;
x3810[x3811] = x3814;

}
for(int x3818=0; x3818 < 150; x3818++) {
double x3819 = x185[x3818];
double x3820 = x3810[x3818];
double x3821 = x3819 - x3820;
x185[x3818] = x3821;

}
for(int x3825=0; x3825 < 150; x3825++) {
x300[x3825] = 0.0;

}
for(int x3829=0; x3829 < 750; x3829++) {
double x3830 = x305[x3829];
bool x3831 = x3830 > 5.0;
if (x3831) {
x305[x3829] = 5.0;
} else {
}
bool x3835 = x3830 < -5.0;
if (x3835) {
x305[x3829] = -5.0;
} else {
}

}
double* x3841 = (double*)myMalloc(750 * sizeof(double));
for(int x3842=0; x3842 < 750; x3842++) {
double x3843 = x305[x3842];
double x3844 = x3843 * x3843;
x3841[x3842] = x3844;

}
for(int x3848=0; x3848 < 750; x3848++) {
double x3849 = x446[x3848];
double x3850 = x3841[x3848];
double x3851 = x3849 + x3850;
x446[x3848] = x3851;

}
double* x3855 = (double*)myMalloc(750 * sizeof(double));
for(int x3856=0; x3856 < 750; x3856++) {
double x3857 = x305[x3856];
double x3858 = x335[0];
double x3859 = x3857 * x3858;
x3855[x3856] = x3859;

}
double* x3863 = (double*)myMalloc(750 * sizeof(double));
for(int x3864=0; x3864 < 750; x3864++) {
double x3865 = x446[x3864];
double x3866 = x341[0];
double x3867 = x3865 + x3866;
x3863[x3864] = x3867;

}
double* x3871 = (double*)myMalloc(750 * sizeof(double));
for(int x3872=0; x3872 < 750; x3872++) {
double x3873 = x3863[x3872];
double x3874 = sqrt(x3873);
x3871[x3872] = x3874;

}
double* x3878 = (double*)myMalloc(750 * sizeof(double));
for(int x3879=0; x3879 < 750; x3879++) {
double x3880 = x3855[x3879];
double x3881 = x3871[x3879];
double x3882 = x3880 / x3881;
x3878[x3879] = x3882;

}
for(int x3886=0; x3886 < 750; x3886++) {
double x3887 = x191[x3886];
double x3888 = x3878[x3886];
double x3889 = x3887 - x3888;
x191[x3886] = x3889;

}
for(int x3893=0; x3893 < 750; x3893++) {
x305[x3893] = 0.0;

}
for(int x3897=0; x3897 < 5; x3897++) {
double x3898 = x310[x3897];
bool x3899 = x3898 > 5.0;
if (x3899) {
x310[x3897] = 5.0;
} else {
}
bool x3903 = x3898 < -5.0;
if (x3903) {
x310[x3897] = -5.0;
} else {
}

}
double* x3909 = (double*)myMalloc(5 * sizeof(double));
for(int x3910=0; x3910 < 5; x3910++) {
double x3911 = x310[x3910];
double x3912 = x3911 * x3911;
x3909[x3910] = x3912;

}
for(int x3916=0; x3916 < 5; x3916++) {
double x3917 = x451[x3916];
double x3918 = x3909[x3916];
double x3919 = x3917 + x3918;
x451[x3916] = x3919;

}
double* x3923 = (double*)myMalloc(5 * sizeof(double));
for(int x3924=0; x3924 < 5; x3924++) {
double x3925 = x310[x3924];
double x3926 = x335[0];
double x3927 = x3925 * x3926;
x3923[x3924] = x3927;

}
double* x3931 = (double*)myMalloc(5 * sizeof(double));
for(int x3932=0; x3932 < 5; x3932++) {
double x3933 = x451[x3932];
double x3934 = x341[0];
double x3935 = x3933 + x3934;
x3931[x3932] = x3935;

}
double* x3939 = (double*)myMalloc(5 * sizeof(double));
for(int x3940=0; x3940 < 5; x3940++) {
double x3941 = x3931[x3940];
double x3942 = sqrt(x3941);
x3939[x3940] = x3942;

}
double* x3946 = (double*)myMalloc(5 * sizeof(double));
for(int x3947=0; x3947 < 5; x3947++) {
double x3948 = x3923[x3947];
double x3949 = x3939[x3947];
double x3950 = x3948 / x3949;
x3946[x3947] = x3950;

}
for(int x3954=0; x3954 < 5; x3954++) {
double x3955 = x199[x3954];
double x3956 = x3946[x3954];
double x3957 = x3955 - x3956;
x199[x3954] = x3957;

}
for(int x3961=0; x3961 < 5; x3961++) {
x310[x3961] = 0.0;

}
mallocAddr = (void*)x457;

}
double x3968 = x461;
x456[x460] = x3968;
double x3970 = ((double)clock() / CLOCKS_PER_SEC);
double x3971 = x3970 - x458;
printf("epoc %d, average_loss %f, time %lf\n",x460,x3968,x3971);

}
double x3975 = ((double)clock() / CLOCKS_PER_SEC);
int64_t x3979 = (long)fopen(x0, "w");
fprintf((FILE *)x3979, "unit: %s\n", "1 epoch");
for(int x3981=0; x3981 < 30; x3981++) {
double x3982 = x456[x3981];
fprintf((FILE *)x3979, "%lf\n", x3982);

}
double x3976 = x458 - x1;
double x3977 = x3975 - x458;
double x3978 = x3977 / 30.0;
fprintf((FILE *)x3979, "run time: %lf %lf\n", x3976, x3978);
fclose((FILE*)x3979);
}
/*****************************************
  End of C Generated Code                  
*******************************************/

