
      #include <fcntl.h>
      #include <errno.h>
      #include <err.h>
      #include <sys/mman.h>
      #include <sys/stat.h>
      #include <stdio.h>
      #include <stdint.h>
      #include <unistd.h>
      #include <time.h>
      #include <functional>
      #include <memory>
      #include <math.h>
      #include <random>

      using namespace std;
      #ifndef MAP_FILE
      #define MAP_FILE MAP_SHARED
      #endif
      int fsize(int fd) {
        struct stat stat;
        int res = fstat(fd,&stat);
        return stat.st_size;
      }
      int printll(char* s) {
        while (*s != '\n' && *s != ',' && *s != '\t') {
          putchar(*s++);
        }
        return 0;
      }
      long hash(char *str0, int len)
      {
        unsigned char* str = (unsigned char*)str0;
        unsigned long hash = 5381;
        int c;

        while ((c = *str++) && len--)
          hash = ((hash << 5) + hash) + c; /* hash * 33 + c */

        return hash;
      }
      int HEAP_SIZE = 1073741826; // 1048576;  //2147483652; //536870912; // 268435456; //2097152; 
      void *mallocBase = malloc(HEAP_SIZE);
      void *mallocAddr = mallocBase;
      void *waterMark  = mallocBase;
      void* myMalloc(size_t bytes) {
        void* res = mallocAddr;
        mallocAddr += bytes;
        return res;
      }


      void Snippet(char*);

      std::random_device rd{};
      std::mt19937 gen{rd()};
      std::normal_distribution<> d{0,1};

      int main(int argc, char *argv[])
      {

        if (argc != 2) {
          printf("usage: query <filename>\n");
          return 0;
        }
        Snippet(argv[1]);
        return 0;
      }

      
/*****************************************
  Emitting C Generated Code                  
*******************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
void Snippet(char*  x0) {
clock_t begin_0, end_0; double time_spent_0;
begin_0 = clock();
int64_t x3 = (long)fopen("senti/small_glove.txt", "r");
double** x4 = (double**)myMalloc(5265 * sizeof(double*));
for(int x6=0; x6 < 5265; x6++) {
double* x7 = (double*)myMalloc(300 * sizeof(double));
x4[x6] = x7;
for(int x10=0; x10 < 300; x10++) {
double* x11 = x4[x6];
if (fscanf((FILE *)x3,"%lf", &x11[x10])!=1) perror("Error reading file");

}

}
fclose((FILE*)x3);
int64_t x18 = (long)fopen("senti/array_tree.txt", "r");
int** x19 = (int**)myMalloc(4404 * sizeof(int*));
int32_t* x20 = (int32_t*)myMalloc(1 * sizeof(int32_t));
for(int x22=0; x22 < 1101; x22++) {
if (fscanf((FILE *)x18,"%d", &x20[0])!=1) perror("Error reading file");
int32_t x26 = x22 * 4;
for(int x25=0; x25 < 4; x25++) {
int32_t x28 = x20[0];
int32_t* x29 = (int32_t*)myMalloc(x28 * sizeof(int32_t));
int32_t x27 = x26 + x25;
x19[x27] = x29;
for(int x32=0; x32 < x28; x32++) {
int* x33 = x19[x27];
if (fscanf((FILE *)x18,"%d", &x33[x32])!=1) perror("Error reading file");

}

}

}
srand(time(NULL)+0);
double* x42 = (double*)myMalloc(45000 * sizeof(double));
for(int x44=0; x44 < 45000; x44++) {
double x45 = (double)rand()/RAND_MAX*2.0-1.0;
double x46 = x45 * 0.01;
x42[x44] = x46;

}
double* x50 = (double*)myMalloc(150 * sizeof(double));
for(int x52=0; x52 < 150; x52++) {
x50[x52] = 0.0;

}
srand(time(NULL)+0);
double* x57 = (double*)myMalloc(45000 * sizeof(double));
for(int x58=0; x58 < 45000; x58++) {
double x59 = (double)rand()/RAND_MAX*2.0-1.0;
double x60 = x59 * 0.01;
x57[x58] = x60;

}
double* x64 = (double*)myMalloc(150 * sizeof(double));
for(int x65=0; x65 < 150; x65++) {
x64[x65] = 0.0;

}
srand(time(NULL)+0);
double* x70 = (double*)myMalloc(45000 * sizeof(double));
for(int x71=0; x71 < 45000; x71++) {
double x72 = (double)rand()/RAND_MAX*2.0-1.0;
double x73 = x72 * 0.01;
x70[x71] = x73;

}
double* x77 = (double*)myMalloc(150 * sizeof(double));
for(int x78=0; x78 < 150; x78++) {
x77[x78] = 0.0;

}
srand(time(NULL)+0);
double* x83 = (double*)myMalloc(22500 * sizeof(double));
for(int x85=0; x85 < 22500; x85++) {
double x86 = (double)rand()/RAND_MAX*2.0-1.0;
double x87 = x86 * 0.01;
x83[x85] = x87;

}
srand(time(NULL)+0);
double* x92 = (double*)myMalloc(22500 * sizeof(double));
for(int x93=0; x93 < 22500; x93++) {
double x94 = (double)rand()/RAND_MAX*2.0-1.0;
double x95 = x94 * 0.01;
x92[x93] = x95;

}
double* x99 = (double*)myMalloc(150 * sizeof(double));
for(int x100=0; x100 < 150; x100++) {
x99[x100] = 0.0;

}
srand(time(NULL)+0);
double* x105 = (double*)myMalloc(22500 * sizeof(double));
for(int x106=0; x106 < 22500; x106++) {
double x107 = (double)rand()/RAND_MAX*2.0-1.0;
double x108 = x107 * 0.01;
x105[x106] = x108;

}
srand(time(NULL)+0);
double* x113 = (double*)myMalloc(22500 * sizeof(double));
for(int x114=0; x114 < 22500; x114++) {
double x115 = (double)rand()/RAND_MAX*2.0-1.0;
double x116 = x115 * 0.01;
x113[x114] = x116;

}
srand(time(NULL)+0);
double* x121 = (double*)myMalloc(22500 * sizeof(double));
for(int x122=0; x122 < 22500; x122++) {
double x123 = (double)rand()/RAND_MAX*2.0-1.0;
double x124 = x123 * 0.01;
x121[x122] = x124;

}
srand(time(NULL)+0);
double* x129 = (double*)myMalloc(22500 * sizeof(double));
for(int x130=0; x130 < 22500; x130++) {
double x131 = (double)rand()/RAND_MAX*2.0-1.0;
double x132 = x131 * 0.01;
x129[x130] = x132;

}
double* x136 = (double*)myMalloc(150 * sizeof(double));
for(int x137=0; x137 < 150; x137++) {
x136[x137] = 0.0;

}
srand(time(NULL)+0);
double* x142 = (double*)myMalloc(22500 * sizeof(double));
for(int x143=0; x143 < 22500; x143++) {
double x144 = (double)rand()/RAND_MAX*2.0-1.0;
double x145 = x144 * 0.01;
x142[x143] = x145;

}
srand(time(NULL)+0);
double* x150 = (double*)myMalloc(22500 * sizeof(double));
for(int x151=0; x151 < 22500; x151++) {
double x152 = (double)rand()/RAND_MAX*2.0-1.0;
double x153 = x152 * 0.01;
x150[x151] = x153;

}
double* x157 = (double*)myMalloc(150 * sizeof(double));
for(int x158=0; x158 < 150; x158++) {
x157[x158] = 0.0;

}
srand(time(NULL)+0);
double* x163 = (double*)myMalloc(22500 * sizeof(double));
for(int x164=0; x164 < 22500; x164++) {
double x165 = (double)rand()/RAND_MAX*2.0-1.0;
double x166 = x165 * 0.01;
x163[x164] = x166;

}
srand(time(NULL)+0);
double* x171 = (double*)myMalloc(22500 * sizeof(double));
for(int x172=0; x172 < 22500; x172++) {
double x173 = (double)rand()/RAND_MAX*2.0-1.0;
double x174 = x173 * 0.01;
x171[x172] = x174;

}
double* x178 = (double*)myMalloc(150 * sizeof(double));
for(int x179=0; x179 < 150; x179++) {
x178[x179] = 0.0;

}
srand(time(NULL)+0);
double* x184 = (double*)myMalloc(750 * sizeof(double));
for(int x186=0; x186 < 750; x186++) {
double x187 = (double)rand()/RAND_MAX*2.0-1.0;
double x188 = x187 * 0.01;
x184[x186] = x188;

}
double* x192 = (double*)myMalloc(5 * sizeof(double));
for(int x194=0; x194 < 5; x194++) {
x192[x194] = 0.0;

}
double* x198 = (double*)myMalloc(45000 * sizeof(double));
for(int x199=0; x199 < 45000; x199++) {
x198[x199] = 0.0;

}
double* x203 = (double*)myMalloc(150 * sizeof(double));
for(int x204=0; x204 < 150; x204++) {
x203[x204] = 0.0;

}
double* x208 = (double*)myMalloc(45000 * sizeof(double));
for(int x209=0; x209 < 45000; x209++) {
x208[x209] = 0.0;

}
double* x213 = (double*)myMalloc(150 * sizeof(double));
for(int x214=0; x214 < 150; x214++) {
x213[x214] = 0.0;

}
double* x218 = (double*)myMalloc(45000 * sizeof(double));
for(int x219=0; x219 < 45000; x219++) {
x218[x219] = 0.0;

}
double* x223 = (double*)myMalloc(150 * sizeof(double));
for(int x224=0; x224 < 150; x224++) {
x223[x224] = 0.0;

}
double* x228 = (double*)myMalloc(22500 * sizeof(double));
for(int x229=0; x229 < 22500; x229++) {
x228[x229] = 0.0;

}
double* x233 = (double*)myMalloc(22500 * sizeof(double));
for(int x234=0; x234 < 22500; x234++) {
x233[x234] = 0.0;

}
double* x238 = (double*)myMalloc(150 * sizeof(double));
for(int x239=0; x239 < 150; x239++) {
x238[x239] = 0.0;

}
double* x243 = (double*)myMalloc(22500 * sizeof(double));
for(int x244=0; x244 < 22500; x244++) {
x243[x244] = 0.0;

}
double* x248 = (double*)myMalloc(22500 * sizeof(double));
for(int x249=0; x249 < 22500; x249++) {
x248[x249] = 0.0;

}
double* x253 = (double*)myMalloc(22500 * sizeof(double));
for(int x254=0; x254 < 22500; x254++) {
x253[x254] = 0.0;

}
double* x258 = (double*)myMalloc(22500 * sizeof(double));
for(int x259=0; x259 < 22500; x259++) {
x258[x259] = 0.0;

}
double* x263 = (double*)myMalloc(150 * sizeof(double));
for(int x264=0; x264 < 150; x264++) {
x263[x264] = 0.0;

}
double* x268 = (double*)myMalloc(22500 * sizeof(double));
for(int x269=0; x269 < 22500; x269++) {
x268[x269] = 0.0;

}
double* x273 = (double*)myMalloc(22500 * sizeof(double));
for(int x274=0; x274 < 22500; x274++) {
x273[x274] = 0.0;

}
double* x278 = (double*)myMalloc(150 * sizeof(double));
for(int x279=0; x279 < 150; x279++) {
x278[x279] = 0.0;

}
double* x283 = (double*)myMalloc(22500 * sizeof(double));
for(int x284=0; x284 < 22500; x284++) {
x283[x284] = 0.0;

}
double* x288 = (double*)myMalloc(22500 * sizeof(double));
for(int x289=0; x289 < 22500; x289++) {
x288[x289] = 0.0;

}
double* x293 = (double*)myMalloc(150 * sizeof(double));
for(int x294=0; x294 < 150; x294++) {
x293[x294] = 0.0;

}
double* x298 = (double*)myMalloc(750 * sizeof(double));
for(int x299=0; x299 < 750; x299++) {
x298[x299] = 0.0;

}
double* x303 = (double*)myMalloc(5 * sizeof(double));
for(int x304=0; x304 < 5; x304++) {
x303[x304] = 0.0;

}
double* x308 = (double*)myMalloc(300 * sizeof(double));
for(int x309=0; x309 < 300; x309++) {
x308[x309] = 0.0;

}
double* x313 = (double*)myMalloc(300 * sizeof(double));
for(int x314=0; x314 < 300; x314++) {
x313[x314] = 0.0;

}
double* x318 = (double*)myMalloc(150 * sizeof(double));
for(int x319=0; x319 < 150; x319++) {
x318[x319] = 0.0;

}
double* x323 = (double*)myMalloc(150 * sizeof(double));
for(int x324=0; x324 < 150; x324++) {
x323[x324] = 0.0;

}
double* x328 = (double*)myMalloc(1 * sizeof(double));
for(int x330=0; x330 < 1; x330++) {
x328[x330] = 0.05;

}
double* x334 = (double*)myMalloc(1 * sizeof(double));
for(int x335=0; x335 < 1; x335++) {
x334[x335] = 1.0E-8;

}
double* x339 = (double*)myMalloc(45000 * sizeof(double));
for(int x340=0; x340 < 45000; x340++) {
x339[x340] = 0.0;

}
double* x344 = (double*)myMalloc(150 * sizeof(double));
for(int x345=0; x345 < 150; x345++) {
x344[x345] = 0.0;

}
double* x349 = (double*)myMalloc(45000 * sizeof(double));
for(int x350=0; x350 < 45000; x350++) {
x349[x350] = 0.0;

}
double* x354 = (double*)myMalloc(150 * sizeof(double));
for(int x355=0; x355 < 150; x355++) {
x354[x355] = 0.0;

}
double* x359 = (double*)myMalloc(45000 * sizeof(double));
for(int x360=0; x360 < 45000; x360++) {
x359[x360] = 0.0;

}
double* x364 = (double*)myMalloc(150 * sizeof(double));
for(int x365=0; x365 < 150; x365++) {
x364[x365] = 0.0;

}
double* x369 = (double*)myMalloc(22500 * sizeof(double));
for(int x370=0; x370 < 22500; x370++) {
x369[x370] = 0.0;

}
double* x374 = (double*)myMalloc(22500 * sizeof(double));
for(int x375=0; x375 < 22500; x375++) {
x374[x375] = 0.0;

}
double* x379 = (double*)myMalloc(150 * sizeof(double));
for(int x380=0; x380 < 150; x380++) {
x379[x380] = 0.0;

}
double* x384 = (double*)myMalloc(22500 * sizeof(double));
for(int x385=0; x385 < 22500; x385++) {
x384[x385] = 0.0;

}
double* x389 = (double*)myMalloc(22500 * sizeof(double));
for(int x390=0; x390 < 22500; x390++) {
x389[x390] = 0.0;

}
double* x394 = (double*)myMalloc(22500 * sizeof(double));
for(int x395=0; x395 < 22500; x395++) {
x394[x395] = 0.0;

}
double* x399 = (double*)myMalloc(22500 * sizeof(double));
for(int x400=0; x400 < 22500; x400++) {
x399[x400] = 0.0;

}
double* x404 = (double*)myMalloc(150 * sizeof(double));
for(int x405=0; x405 < 150; x405++) {
x404[x405] = 0.0;

}
double* x409 = (double*)myMalloc(22500 * sizeof(double));
for(int x410=0; x410 < 22500; x410++) {
x409[x410] = 0.0;

}
double* x414 = (double*)myMalloc(22500 * sizeof(double));
for(int x415=0; x415 < 22500; x415++) {
x414[x415] = 0.0;

}
double* x419 = (double*)myMalloc(150 * sizeof(double));
for(int x420=0; x420 < 150; x420++) {
x419[x420] = 0.0;

}
double* x424 = (double*)myMalloc(22500 * sizeof(double));
for(int x425=0; x425 < 22500; x425++) {
x424[x425] = 0.0;

}
double* x429 = (double*)myMalloc(22500 * sizeof(double));
for(int x430=0; x430 < 22500; x430++) {
x429[x430] = 0.0;

}
double* x434 = (double*)myMalloc(150 * sizeof(double));
for(int x435=0; x435 < 150; x435++) {
x434[x435] = 0.0;

}
double* x439 = (double*)myMalloc(750 * sizeof(double));
for(int x440=0; x440 < 750; x440++) {
x439[x440] = 0.0;

}
double* x444 = (double*)myMalloc(5 * sizeof(double));
for(int x445=0; x445 < 5; x445++) {
x444[x445] = 0.0;

}
int64_t x449 = (long)mallocAddr;
printf("before entering loop\n");
end_0 = clock(); printf("Time elapsed: %f\n", (double)(end_0 - begin_0) / CLOCKS_PER_SEC);
for(int x453=0; x453 < 30; x453++) {
double x454 = 0.0;
for(int x455=0; x455 < 1101; x455++) {
int32_t x456 = x455 % 1101;
int32_t x457 = x456 * 4;
int32_t x461 = x457 + 2;
int* x462 = x19[x461];
int32_t x463 = x457 + 3;
int* x464 = x19[x463];
int* x458 = x19[x457];
int32_t x459 = x457 + 1;
int* x460 = x19[x459];
function<void(int32_t,function<void(double**)>,double**)> x510 = [&](int32_t x511,function<void(double**)> x512,double** x513) {
int32_t x514 = x511;
bool x523 = x514 >= 0;
if (x523) {
int32_t x524 = x462[x514];
double** x2404 = (double**)myMalloc(6 * sizeof(double*));
double** x516 = x513;
double* x517 = x516[0];
x2404[0] = x517;
double* x518 = x516[1];
x2404[1] = x518;
double* x519 = x516[2];
x2404[2] = x519;
double* x520 = x516[3];
x2404[3] = x520;
double* x521 = x516[4];
x2404[4] = x521;
double* x522 = x516[5];
x2404[5] = x522;
function<void(double**)> x515 = x512;
function<void(double**)> x525 = [&](double** x526) {
int32_t x533 = x464[x514];
double** x2394 = (double**)myMalloc(6 * sizeof(double*));
x2394[0] = x517;
x2394[1] = x518;
x2394[2] = x519;
x2394[3] = x520;
x2394[4] = x521;
x2394[5] = x522;
double* x527 = x526[0];
double* x528 = x526[1];
double* x531 = x526[4];
double* x532 = x526[5];
double* x529 = x526[2];
double* x530 = x526[3];
function<void(double**)> x534 = [&](double** x535) {
double* x542 = (double*)myMalloc(5 * sizeof(double));
for(int x543=0; x543 < 5; x543++) {
x542[x543] = 0.0;

}
int32_t x547 = x458[x514];
x542[x547] = 1.0;
double* x549 = (double*)myMalloc(5 * sizeof(double));
for(int x550=0; x550 < 5; x550++) {
x549[x550] = 0.0;

}
int32_t x554 = x462[x514];
bool x555 = x554 < 0;
if (x555) {
int32_t x2375 = x460[x514];
double* x2376 = x4[x2375];
double* x2377 = (double*)myMalloc(300 * sizeof(double));
for(int x2378=0; x2378 < 300; x2378++) {
x2377[x2378] = 0.0;

}
double** x2382 = (double**)myMalloc(2 * sizeof(double*));
x2382[0] = x2376;
x2382[1] = x2377;
double* x536 = x535[0];
double* x537 = x535[1];
double* x540 = x535[4];
double* x541 = x535[5];
double* x538 = x535[2];
double* x539 = x535[3];
function<void(double**)> x556 = [&](double** x557) {
int32_t x560 = x462[x514];
bool x561 = x560 < 0;
if (x561) {
double* x2083 = (double*)myMalloc(150 * sizeof(double));
double* x558 = x557[0];
for(int x2084=0; x2084 < 150; x2084++) {
double x2085 = 0.0;
int32_t x2087 = 300 * x2084;
for(int x2086=0; x2086 < 300; x2086++) {
int32_t x2088 = x2086 + x2087;
double x2089 = x42[x2088];
double x2090 = x558[x2086];
double x2091 = x2089 * x2090;
x2085 += x2091;

}
double x2095 = x2085;
x2083[x2084] = x2095;

}
double* x2099 = (double*)myMalloc(150 * sizeof(double));
for(int x2100=0; x2100 < 150; x2100++) {
x2099[x2100] = 0.0;

}
double* x2104 = (double*)myMalloc(150 * sizeof(double));
for(int x2105=0; x2105 < 150; x2105++) {
double x2106 = x2083[x2105];
double x2107 = x50[x2105];
double x2108 = x2106 + x2107;
x2104[x2105] = x2108;

}
double* x2112 = (double*)myMalloc(150 * sizeof(double));
for(int x2113=0; x2113 < 150; x2113++) {
x2112[x2113] = 0.0;

}
double* x2117 = (double*)myMalloc(150 * sizeof(double));
for(int x2118=0; x2118 < 150; x2118++) {
double x2119 = x2104[x2118];
double x2120 = -1.0 * x2119;
double x2121 = exp(x2120);
double x2122 = x2121 + 1.0;
double x2123 = 1.0 / x2122;
x2117[x2118] = x2123;

}
double* x2127 = (double*)myMalloc(150 * sizeof(double));
for(int x2128=0; x2128 < 150; x2128++) {
x2127[x2128] = 0.0;

}
double** x2132 = (double**)myMalloc(2 * sizeof(double*));
x2132[0] = x2117;
x2132[1] = x2127;
double* x559 = x557[1];
function<void(double**)> x562 = [&](double** x563) {
int32_t x566 = x462[x514];
bool x567 = x566 < 0;
if (x567) {
double** x1893 = (double**)myMalloc(2 * sizeof(double*));
x1893[0] = x318;
x1893[1] = x323;
double* x564 = x563[0];
double* x565 = x563[1];
function<void(double**)> x568 = [&](double** x569) {
int32_t x572 = x462[x514];
bool x573 = x572 < 0;
if (x573) {
double** x1703 = (double**)myMalloc(2 * sizeof(double*));
x1703[0] = x318;
x1703[1] = x323;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1703);
} else {
double* x1708 = (double*)myMalloc(150 * sizeof(double));
for(int x1709=0; x1709 < 150; x1709++) {
double x1710 = 0.0;
int32_t x1712 = 150 * x1709;
for(int x1711=0; x1711 < 150; x1711++) {
int32_t x1713 = x1711 + x1712;
double x1714 = x121[x1713];
double x1715 = x529[x1711];
double x1716 = x1714 * x1715;
x1710 += x1716;

}
double x1720 = x1710;
x1708[x1709] = x1720;

}
double* x1724 = (double*)myMalloc(150 * sizeof(double));
for(int x1725=0; x1725 < 150; x1725++) {
x1724[x1725] = 0.0;

}
double* x1729 = (double*)myMalloc(150 * sizeof(double));
for(int x1730=0; x1730 < 150; x1730++) {
double x1731 = 0.0;
int32_t x1733 = 150 * x1730;
for(int x1732=0; x1732 < 150; x1732++) {
int32_t x1734 = x1732 + x1733;
double x1735 = x129[x1734];
double x1736 = x538[x1732];
double x1737 = x1735 * x1736;
x1731 += x1737;

}
double x1741 = x1731;
x1729[x1730] = x1741;

}
double* x1745 = (double*)myMalloc(150 * sizeof(double));
for(int x1746=0; x1746 < 150; x1746++) {
x1745[x1746] = 0.0;

}
double* x1750 = (double*)myMalloc(150 * sizeof(double));
for(int x1751=0; x1751 < 150; x1751++) {
double x1752 = x1708[x1751];
double x1753 = x1729[x1751];
double x1754 = x1752 + x1753;
x1750[x1751] = x1754;

}
double* x1758 = (double*)myMalloc(150 * sizeof(double));
for(int x1759=0; x1759 < 150; x1759++) {
x1758[x1759] = 0.0;

}
double* x1763 = (double*)myMalloc(150 * sizeof(double));
for(int x1764=0; x1764 < 150; x1764++) {
double x1765 = x1750[x1764];
double x1766 = x136[x1764];
double x1767 = x1765 + x1766;
x1763[x1764] = x1767;

}
double* x1771 = (double*)myMalloc(150 * sizeof(double));
for(int x1772=0; x1772 < 150; x1772++) {
x1771[x1772] = 0.0;

}
double* x1776 = (double*)myMalloc(150 * sizeof(double));
for(int x1777=0; x1777 < 150; x1777++) {
double x1778 = x1763[x1777];
double x1779 = -1.0 * x1778;
double x1780 = exp(x1779);
double x1781 = x1780 + 1.0;
double x1782 = 1.0 / x1781;
x1776[x1777] = x1782;

}
double* x1786 = (double*)myMalloc(150 * sizeof(double));
for(int x1787=0; x1787 < 150; x1787++) {
x1786[x1787] = 0.0;

}
double** x1791 = (double**)myMalloc(2 * sizeof(double*));
x1791[0] = x1776;
x1791[1] = x1786;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1791);
for(int x1795=0; x1795 < 150; x1795++) {
double x1796 = x1771[x1795];
double x1797 = x1776[x1795];
double x1800 = x1786[x1795];
double x1798 = 1.0 - x1797;
double x1799 = x1798 * x1797;
double x1801 = x1799 * x1800;
double x1802 = x1796 + x1801;
x1771[x1795] = x1802;

}
for(int x1806=0; x1806 < 150; x1806++) {
double x1807 = x1758[x1806];
double x1808 = x1771[x1806];
double x1809 = x1807 + x1808;
x1758[x1806] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x263[x1813];
double x1815 = x1771[x1813];
double x1816 = x1814 + x1815;
x263[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x1724[x1820];
double x1822 = x1758[x1820];
double x1823 = x1821 + x1822;
x1724[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1745[x1827];
double x1829 = x1758[x1827];
double x1830 = x1828 + x1829;
x1745[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
int32_t x1836 = 150 * x1834;
for(int x1835=0; x1835 < 150; x1835++) {
int32_t x1837 = x1836 + x1835;
double x1838 = x258[x1837];
double x1840 = x1745[x1834];
double x1839 = x538[x1835];
double x1841 = x1839 * x1840;
double x1842 = x1838 + x1841;
x258[x1837] = x1842;

}

}
for(int x1848=0; x1848 < 150; x1848++) {
int32_t x1851 = 150 * x1848;
for(int x1849=0; x1849 < 150; x1849++) {
int32_t x1852 = x1851 + x1849;
double x1853 = x129[x1852];
double x1854 = x1745[x1848];
double x1850 = x539[x1849];
double x1855 = x1853 * x1854;
double x1856 = x1850 + x1855;
x539[x1849] = x1856;

}

}
for(int x1862=0; x1862 < 150; x1862++) {
int32_t x1864 = 150 * x1862;
for(int x1863=0; x1863 < 150; x1863++) {
int32_t x1865 = x1864 + x1863;
double x1866 = x253[x1865];
double x1868 = x1724[x1862];
double x1867 = x529[x1863];
double x1869 = x1867 * x1868;
double x1870 = x1866 + x1869;
x253[x1865] = x1870;

}

}
for(int x1876=0; x1876 < 150; x1876++) {
int32_t x1879 = 150 * x1876;
for(int x1877=0; x1877 < 150; x1877++) {
int32_t x1880 = x1879 + x1877;
double x1881 = x121[x1880];
double x1882 = x1724[x1876];
double x1878 = x530[x1877];
double x1883 = x1881 * x1882;
double x1884 = x1878 + x1883;
x530[x1877] = x1884;

}

}
}
};
x568(x1893);
} else {
double* x1898 = (double*)myMalloc(150 * sizeof(double));
for(int x1899=0; x1899 < 150; x1899++) {
double x1900 = 0.0;
int32_t x1902 = 150 * x1899;
for(int x1901=0; x1901 < 150; x1901++) {
int32_t x1903 = x1901 + x1902;
double x1904 = x105[x1903];
double x1905 = x529[x1901];
double x1906 = x1904 * x1905;
x1900 += x1906;

}
double x1910 = x1900;
x1898[x1899] = x1910;

}
double* x1914 = (double*)myMalloc(150 * sizeof(double));
for(int x1915=0; x1915 < 150; x1915++) {
x1914[x1915] = 0.0;

}
double* x1919 = (double*)myMalloc(150 * sizeof(double));
for(int x1920=0; x1920 < 150; x1920++) {
double x1921 = 0.0;
int32_t x1923 = 150 * x1920;
for(int x1922=0; x1922 < 150; x1922++) {
int32_t x1924 = x1922 + x1923;
double x1925 = x113[x1924];
double x1926 = x538[x1922];
double x1927 = x1925 * x1926;
x1921 += x1927;

}
double x1931 = x1921;
x1919[x1920] = x1931;

}
double* x1935 = (double*)myMalloc(150 * sizeof(double));
for(int x1936=0; x1936 < 150; x1936++) {
x1935[x1936] = 0.0;

}
double* x1940 = (double*)myMalloc(150 * sizeof(double));
for(int x1941=0; x1941 < 150; x1941++) {
double x1942 = x1898[x1941];
double x1943 = x1919[x1941];
double x1944 = x1942 + x1943;
x1940[x1941] = x1944;

}
double* x1948 = (double*)myMalloc(150 * sizeof(double));
for(int x1949=0; x1949 < 150; x1949++) {
x1948[x1949] = 0.0;

}
double* x1953 = (double*)myMalloc(150 * sizeof(double));
for(int x1954=0; x1954 < 150; x1954++) {
double x1955 = x1940[x1954];
double x1956 = x136[x1954];
double x1957 = x1955 + x1956;
x1953[x1954] = x1957;

}
double* x1961 = (double*)myMalloc(150 * sizeof(double));
for(int x1962=0; x1962 < 150; x1962++) {
x1961[x1962] = 0.0;

}
double* x1966 = (double*)myMalloc(150 * sizeof(double));
for(int x1967=0; x1967 < 150; x1967++) {
double x1968 = x1953[x1967];
double x1969 = -1.0 * x1968;
double x1970 = exp(x1969);
double x1971 = x1970 + 1.0;
double x1972 = 1.0 / x1971;
x1966[x1967] = x1972;

}
double* x1976 = (double*)myMalloc(150 * sizeof(double));
for(int x1977=0; x1977 < 150; x1977++) {
x1976[x1977] = 0.0;

}
double** x1981 = (double**)myMalloc(2 * sizeof(double*));
x1981[0] = x1966;
x1981[1] = x1976;
double* x564 = x563[0];
double* x565 = x563[1];
function<void(double**)> x568 = [&](double** x569) {
int32_t x572 = x462[x514];
bool x573 = x572 < 0;
if (x573) {
double** x1703 = (double**)myMalloc(2 * sizeof(double*));
x1703[0] = x318;
x1703[1] = x323;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1703);
} else {
double* x1708 = (double*)myMalloc(150 * sizeof(double));
for(int x1709=0; x1709 < 150; x1709++) {
double x1710 = 0.0;
int32_t x1712 = 150 * x1709;
for(int x1711=0; x1711 < 150; x1711++) {
int32_t x1713 = x1711 + x1712;
double x1714 = x121[x1713];
double x1715 = x529[x1711];
double x1716 = x1714 * x1715;
x1710 += x1716;

}
double x1720 = x1710;
x1708[x1709] = x1720;

}
double* x1724 = (double*)myMalloc(150 * sizeof(double));
for(int x1725=0; x1725 < 150; x1725++) {
x1724[x1725] = 0.0;

}
double* x1729 = (double*)myMalloc(150 * sizeof(double));
for(int x1730=0; x1730 < 150; x1730++) {
double x1731 = 0.0;
int32_t x1733 = 150 * x1730;
for(int x1732=0; x1732 < 150; x1732++) {
int32_t x1734 = x1732 + x1733;
double x1735 = x129[x1734];
double x1736 = x538[x1732];
double x1737 = x1735 * x1736;
x1731 += x1737;

}
double x1741 = x1731;
x1729[x1730] = x1741;

}
double* x1745 = (double*)myMalloc(150 * sizeof(double));
for(int x1746=0; x1746 < 150; x1746++) {
x1745[x1746] = 0.0;

}
double* x1750 = (double*)myMalloc(150 * sizeof(double));
for(int x1751=0; x1751 < 150; x1751++) {
double x1752 = x1708[x1751];
double x1753 = x1729[x1751];
double x1754 = x1752 + x1753;
x1750[x1751] = x1754;

}
double* x1758 = (double*)myMalloc(150 * sizeof(double));
for(int x1759=0; x1759 < 150; x1759++) {
x1758[x1759] = 0.0;

}
double* x1763 = (double*)myMalloc(150 * sizeof(double));
for(int x1764=0; x1764 < 150; x1764++) {
double x1765 = x1750[x1764];
double x1766 = x136[x1764];
double x1767 = x1765 + x1766;
x1763[x1764] = x1767;

}
double* x1771 = (double*)myMalloc(150 * sizeof(double));
for(int x1772=0; x1772 < 150; x1772++) {
x1771[x1772] = 0.0;

}
double* x1776 = (double*)myMalloc(150 * sizeof(double));
for(int x1777=0; x1777 < 150; x1777++) {
double x1778 = x1763[x1777];
double x1779 = -1.0 * x1778;
double x1780 = exp(x1779);
double x1781 = x1780 + 1.0;
double x1782 = 1.0 / x1781;
x1776[x1777] = x1782;

}
double* x1786 = (double*)myMalloc(150 * sizeof(double));
for(int x1787=0; x1787 < 150; x1787++) {
x1786[x1787] = 0.0;

}
double** x1791 = (double**)myMalloc(2 * sizeof(double*));
x1791[0] = x1776;
x1791[1] = x1786;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1791);
for(int x1795=0; x1795 < 150; x1795++) {
double x1796 = x1771[x1795];
double x1797 = x1776[x1795];
double x1800 = x1786[x1795];
double x1798 = 1.0 - x1797;
double x1799 = x1798 * x1797;
double x1801 = x1799 * x1800;
double x1802 = x1796 + x1801;
x1771[x1795] = x1802;

}
for(int x1806=0; x1806 < 150; x1806++) {
double x1807 = x1758[x1806];
double x1808 = x1771[x1806];
double x1809 = x1807 + x1808;
x1758[x1806] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x263[x1813];
double x1815 = x1771[x1813];
double x1816 = x1814 + x1815;
x263[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x1724[x1820];
double x1822 = x1758[x1820];
double x1823 = x1821 + x1822;
x1724[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1745[x1827];
double x1829 = x1758[x1827];
double x1830 = x1828 + x1829;
x1745[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
int32_t x1836 = 150 * x1834;
for(int x1835=0; x1835 < 150; x1835++) {
int32_t x1837 = x1836 + x1835;
double x1838 = x258[x1837];
double x1840 = x1745[x1834];
double x1839 = x538[x1835];
double x1841 = x1839 * x1840;
double x1842 = x1838 + x1841;
x258[x1837] = x1842;

}

}
for(int x1848=0; x1848 < 150; x1848++) {
int32_t x1851 = 150 * x1848;
for(int x1849=0; x1849 < 150; x1849++) {
int32_t x1852 = x1851 + x1849;
double x1853 = x129[x1852];
double x1854 = x1745[x1848];
double x1850 = x539[x1849];
double x1855 = x1853 * x1854;
double x1856 = x1850 + x1855;
x539[x1849] = x1856;

}

}
for(int x1862=0; x1862 < 150; x1862++) {
int32_t x1864 = 150 * x1862;
for(int x1863=0; x1863 < 150; x1863++) {
int32_t x1865 = x1864 + x1863;
double x1866 = x253[x1865];
double x1868 = x1724[x1862];
double x1867 = x529[x1863];
double x1869 = x1867 * x1868;
double x1870 = x1866 + x1869;
x253[x1865] = x1870;

}

}
for(int x1876=0; x1876 < 150; x1876++) {
int32_t x1879 = 150 * x1876;
for(int x1877=0; x1877 < 150; x1877++) {
int32_t x1880 = x1879 + x1877;
double x1881 = x121[x1880];
double x1882 = x1724[x1876];
double x1878 = x530[x1877];
double x1883 = x1881 * x1882;
double x1884 = x1878 + x1883;
x530[x1877] = x1884;

}

}
}
};
x568(x1981);
for(int x1985=0; x1985 < 150; x1985++) {
double x1986 = x1961[x1985];
double x1987 = x1966[x1985];
double x1990 = x1976[x1985];
double x1988 = 1.0 - x1987;
double x1989 = x1988 * x1987;
double x1991 = x1989 * x1990;
double x1992 = x1986 + x1991;
x1961[x1985] = x1992;

}
for(int x1996=0; x1996 < 150; x1996++) {
double x1997 = x1948[x1996];
double x1998 = x1961[x1996];
double x1999 = x1997 + x1998;
x1948[x1996] = x1999;

}
for(int x2003=0; x2003 < 150; x2003++) {
double x2004 = x263[x2003];
double x2005 = x1961[x2003];
double x2006 = x2004 + x2005;
x263[x2003] = x2006;

}
for(int x2010=0; x2010 < 150; x2010++) {
double x2011 = x1914[x2010];
double x2012 = x1948[x2010];
double x2013 = x2011 + x2012;
x1914[x2010] = x2013;

}
for(int x2017=0; x2017 < 150; x2017++) {
double x2018 = x1935[x2017];
double x2019 = x1948[x2017];
double x2020 = x2018 + x2019;
x1935[x2017] = x2020;

}
for(int x2024=0; x2024 < 150; x2024++) {
int32_t x2026 = 150 * x2024;
for(int x2025=0; x2025 < 150; x2025++) {
int32_t x2027 = x2026 + x2025;
double x2028 = x248[x2027];
double x2030 = x1935[x2024];
double x2029 = x538[x2025];
double x2031 = x2029 * x2030;
double x2032 = x2028 + x2031;
x248[x2027] = x2032;

}

}
for(int x2038=0; x2038 < 150; x2038++) {
int32_t x2041 = 150 * x2038;
for(int x2039=0; x2039 < 150; x2039++) {
int32_t x2042 = x2041 + x2039;
double x2043 = x113[x2042];
double x2044 = x1935[x2038];
double x2040 = x539[x2039];
double x2045 = x2043 * x2044;
double x2046 = x2040 + x2045;
x539[x2039] = x2046;

}

}
for(int x2052=0; x2052 < 150; x2052++) {
int32_t x2054 = 150 * x2052;
for(int x2053=0; x2053 < 150; x2053++) {
int32_t x2055 = x2054 + x2053;
double x2056 = x243[x2055];
double x2058 = x1914[x2052];
double x2057 = x529[x2053];
double x2059 = x2057 * x2058;
double x2060 = x2056 + x2059;
x243[x2055] = x2060;

}

}
for(int x2066=0; x2066 < 150; x2066++) {
int32_t x2069 = 150 * x2066;
for(int x2067=0; x2067 < 150; x2067++) {
int32_t x2070 = x2069 + x2067;
double x2071 = x105[x2070];
double x2072 = x1914[x2066];
double x2068 = x530[x2067];
double x2073 = x2071 * x2072;
double x2074 = x2068 + x2073;
x530[x2067] = x2074;

}

}
}
};
x562(x2132);
for(int x2136=0; x2136 < 150; x2136++) {
double x2137 = x2112[x2136];
double x2138 = x2117[x2136];
double x2141 = x2127[x2136];
double x2139 = 1.0 - x2138;
double x2140 = x2139 * x2138;
double x2142 = x2140 * x2141;
double x2143 = x2137 + x2142;
x2112[x2136] = x2143;

}
for(int x2147=0; x2147 < 150; x2147++) {
double x2148 = x2099[x2147];
double x2149 = x2112[x2147];
double x2150 = x2148 + x2149;
x2099[x2147] = x2150;

}
for(int x2154=0; x2154 < 150; x2154++) {
double x2155 = x203[x2154];
double x2156 = x2112[x2154];
double x2157 = x2155 + x2156;
x203[x2154] = x2157;

}
for(int x2161=0; x2161 < 150; x2161++) {
int32_t x2163 = 300 * x2161;
for(int x2162=0; x2162 < 300; x2162++) {
int32_t x2164 = x2163 + x2162;
double x2165 = x198[x2164];
double x2167 = x2099[x2161];
double x2166 = x558[x2162];
double x2168 = x2166 * x2167;
double x2169 = x2165 + x2168;
x198[x2164] = x2169;

}

}
for(int x2175=0; x2175 < 150; x2175++) {
int32_t x2178 = 300 * x2175;
for(int x2176=0; x2176 < 300; x2176++) {
int32_t x2179 = x2178 + x2176;
double x2180 = x42[x2179];
double x2181 = x2099[x2175];
double x2177 = x559[x2176];
double x2182 = x2180 * x2181;
double x2183 = x2177 + x2182;
x559[x2176] = x2183;

}

}
} else {
double* x2190 = (double*)myMalloc(150 * sizeof(double));
for(int x2191=0; x2191 < 150; x2191++) {
double x2192 = 0.0;
int32_t x2194 = 150 * x2191;
for(int x2193=0; x2193 < 150; x2193++) {
int32_t x2195 = x2193 + x2194;
double x2196 = x83[x2195];
double x2197 = x529[x2193];
double x2198 = x2196 * x2197;
x2192 += x2198;

}
double x2202 = x2192;
x2190[x2191] = x2202;

}
double* x2206 = (double*)myMalloc(150 * sizeof(double));
for(int x2207=0; x2207 < 150; x2207++) {
x2206[x2207] = 0.0;

}
double* x2211 = (double*)myMalloc(150 * sizeof(double));
for(int x2212=0; x2212 < 150; x2212++) {
double x2213 = 0.0;
int32_t x2215 = 150 * x2212;
for(int x2214=0; x2214 < 150; x2214++) {
int32_t x2216 = x2214 + x2215;
double x2217 = x92[x2216];
double x2218 = x538[x2214];
double x2219 = x2217 * x2218;
x2213 += x2219;

}
double x2223 = x2213;
x2211[x2212] = x2223;

}
double* x2227 = (double*)myMalloc(150 * sizeof(double));
for(int x2228=0; x2228 < 150; x2228++) {
x2227[x2228] = 0.0;

}
double* x2232 = (double*)myMalloc(150 * sizeof(double));
for(int x2233=0; x2233 < 150; x2233++) {
double x2234 = x2190[x2233];
double x2235 = x2211[x2233];
double x2236 = x2234 + x2235;
x2232[x2233] = x2236;

}
double* x2240 = (double*)myMalloc(150 * sizeof(double));
for(int x2241=0; x2241 < 150; x2241++) {
x2240[x2241] = 0.0;

}
double* x2245 = (double*)myMalloc(150 * sizeof(double));
for(int x2246=0; x2246 < 150; x2246++) {
double x2247 = x2232[x2246];
double x2248 = x99[x2246];
double x2249 = x2247 + x2248;
x2245[x2246] = x2249;

}
double* x2253 = (double*)myMalloc(150 * sizeof(double));
for(int x2254=0; x2254 < 150; x2254++) {
x2253[x2254] = 0.0;

}
double* x2258 = (double*)myMalloc(150 * sizeof(double));
for(int x2259=0; x2259 < 150; x2259++) {
double x2260 = x2245[x2259];
double x2261 = -1.0 * x2260;
double x2262 = exp(x2261);
double x2263 = x2262 + 1.0;
double x2264 = 1.0 / x2263;
x2258[x2259] = x2264;

}
double* x2268 = (double*)myMalloc(150 * sizeof(double));
for(int x2269=0; x2269 < 150; x2269++) {
x2268[x2269] = 0.0;

}
double** x2273 = (double**)myMalloc(2 * sizeof(double*));
x2273[0] = x2258;
x2273[1] = x2268;
double* x558 = x557[0];
double* x559 = x557[1];
function<void(double**)> x562 = [&](double** x563) {
int32_t x566 = x462[x514];
bool x567 = x566 < 0;
if (x567) {
double** x1893 = (double**)myMalloc(2 * sizeof(double*));
x1893[0] = x318;
x1893[1] = x323;
double* x564 = x563[0];
double* x565 = x563[1];
function<void(double**)> x568 = [&](double** x569) {
int32_t x572 = x462[x514];
bool x573 = x572 < 0;
if (x573) {
double** x1703 = (double**)myMalloc(2 * sizeof(double*));
x1703[0] = x318;
x1703[1] = x323;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1703);
} else {
double* x1708 = (double*)myMalloc(150 * sizeof(double));
for(int x1709=0; x1709 < 150; x1709++) {
double x1710 = 0.0;
int32_t x1712 = 150 * x1709;
for(int x1711=0; x1711 < 150; x1711++) {
int32_t x1713 = x1711 + x1712;
double x1714 = x121[x1713];
double x1715 = x529[x1711];
double x1716 = x1714 * x1715;
x1710 += x1716;

}
double x1720 = x1710;
x1708[x1709] = x1720;

}
double* x1724 = (double*)myMalloc(150 * sizeof(double));
for(int x1725=0; x1725 < 150; x1725++) {
x1724[x1725] = 0.0;

}
double* x1729 = (double*)myMalloc(150 * sizeof(double));
for(int x1730=0; x1730 < 150; x1730++) {
double x1731 = 0.0;
int32_t x1733 = 150 * x1730;
for(int x1732=0; x1732 < 150; x1732++) {
int32_t x1734 = x1732 + x1733;
double x1735 = x129[x1734];
double x1736 = x538[x1732];
double x1737 = x1735 * x1736;
x1731 += x1737;

}
double x1741 = x1731;
x1729[x1730] = x1741;

}
double* x1745 = (double*)myMalloc(150 * sizeof(double));
for(int x1746=0; x1746 < 150; x1746++) {
x1745[x1746] = 0.0;

}
double* x1750 = (double*)myMalloc(150 * sizeof(double));
for(int x1751=0; x1751 < 150; x1751++) {
double x1752 = x1708[x1751];
double x1753 = x1729[x1751];
double x1754 = x1752 + x1753;
x1750[x1751] = x1754;

}
double* x1758 = (double*)myMalloc(150 * sizeof(double));
for(int x1759=0; x1759 < 150; x1759++) {
x1758[x1759] = 0.0;

}
double* x1763 = (double*)myMalloc(150 * sizeof(double));
for(int x1764=0; x1764 < 150; x1764++) {
double x1765 = x1750[x1764];
double x1766 = x136[x1764];
double x1767 = x1765 + x1766;
x1763[x1764] = x1767;

}
double* x1771 = (double*)myMalloc(150 * sizeof(double));
for(int x1772=0; x1772 < 150; x1772++) {
x1771[x1772] = 0.0;

}
double* x1776 = (double*)myMalloc(150 * sizeof(double));
for(int x1777=0; x1777 < 150; x1777++) {
double x1778 = x1763[x1777];
double x1779 = -1.0 * x1778;
double x1780 = exp(x1779);
double x1781 = x1780 + 1.0;
double x1782 = 1.0 / x1781;
x1776[x1777] = x1782;

}
double* x1786 = (double*)myMalloc(150 * sizeof(double));
for(int x1787=0; x1787 < 150; x1787++) {
x1786[x1787] = 0.0;

}
double** x1791 = (double**)myMalloc(2 * sizeof(double*));
x1791[0] = x1776;
x1791[1] = x1786;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1791);
for(int x1795=0; x1795 < 150; x1795++) {
double x1796 = x1771[x1795];
double x1797 = x1776[x1795];
double x1800 = x1786[x1795];
double x1798 = 1.0 - x1797;
double x1799 = x1798 * x1797;
double x1801 = x1799 * x1800;
double x1802 = x1796 + x1801;
x1771[x1795] = x1802;

}
for(int x1806=0; x1806 < 150; x1806++) {
double x1807 = x1758[x1806];
double x1808 = x1771[x1806];
double x1809 = x1807 + x1808;
x1758[x1806] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x263[x1813];
double x1815 = x1771[x1813];
double x1816 = x1814 + x1815;
x263[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x1724[x1820];
double x1822 = x1758[x1820];
double x1823 = x1821 + x1822;
x1724[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1745[x1827];
double x1829 = x1758[x1827];
double x1830 = x1828 + x1829;
x1745[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
int32_t x1836 = 150 * x1834;
for(int x1835=0; x1835 < 150; x1835++) {
int32_t x1837 = x1836 + x1835;
double x1838 = x258[x1837];
double x1840 = x1745[x1834];
double x1839 = x538[x1835];
double x1841 = x1839 * x1840;
double x1842 = x1838 + x1841;
x258[x1837] = x1842;

}

}
for(int x1848=0; x1848 < 150; x1848++) {
int32_t x1851 = 150 * x1848;
for(int x1849=0; x1849 < 150; x1849++) {
int32_t x1852 = x1851 + x1849;
double x1853 = x129[x1852];
double x1854 = x1745[x1848];
double x1850 = x539[x1849];
double x1855 = x1853 * x1854;
double x1856 = x1850 + x1855;
x539[x1849] = x1856;

}

}
for(int x1862=0; x1862 < 150; x1862++) {
int32_t x1864 = 150 * x1862;
for(int x1863=0; x1863 < 150; x1863++) {
int32_t x1865 = x1864 + x1863;
double x1866 = x253[x1865];
double x1868 = x1724[x1862];
double x1867 = x529[x1863];
double x1869 = x1867 * x1868;
double x1870 = x1866 + x1869;
x253[x1865] = x1870;

}

}
for(int x1876=0; x1876 < 150; x1876++) {
int32_t x1879 = 150 * x1876;
for(int x1877=0; x1877 < 150; x1877++) {
int32_t x1880 = x1879 + x1877;
double x1881 = x121[x1880];
double x1882 = x1724[x1876];
double x1878 = x530[x1877];
double x1883 = x1881 * x1882;
double x1884 = x1878 + x1883;
x530[x1877] = x1884;

}

}
}
};
x568(x1893);
} else {
double* x1898 = (double*)myMalloc(150 * sizeof(double));
for(int x1899=0; x1899 < 150; x1899++) {
double x1900 = 0.0;
int32_t x1902 = 150 * x1899;
for(int x1901=0; x1901 < 150; x1901++) {
int32_t x1903 = x1901 + x1902;
double x1904 = x105[x1903];
double x1905 = x529[x1901];
double x1906 = x1904 * x1905;
x1900 += x1906;

}
double x1910 = x1900;
x1898[x1899] = x1910;

}
double* x1914 = (double*)myMalloc(150 * sizeof(double));
for(int x1915=0; x1915 < 150; x1915++) {
x1914[x1915] = 0.0;

}
double* x1919 = (double*)myMalloc(150 * sizeof(double));
for(int x1920=0; x1920 < 150; x1920++) {
double x1921 = 0.0;
int32_t x1923 = 150 * x1920;
for(int x1922=0; x1922 < 150; x1922++) {
int32_t x1924 = x1922 + x1923;
double x1925 = x113[x1924];
double x1926 = x538[x1922];
double x1927 = x1925 * x1926;
x1921 += x1927;

}
double x1931 = x1921;
x1919[x1920] = x1931;

}
double* x1935 = (double*)myMalloc(150 * sizeof(double));
for(int x1936=0; x1936 < 150; x1936++) {
x1935[x1936] = 0.0;

}
double* x1940 = (double*)myMalloc(150 * sizeof(double));
for(int x1941=0; x1941 < 150; x1941++) {
double x1942 = x1898[x1941];
double x1943 = x1919[x1941];
double x1944 = x1942 + x1943;
x1940[x1941] = x1944;

}
double* x1948 = (double*)myMalloc(150 * sizeof(double));
for(int x1949=0; x1949 < 150; x1949++) {
x1948[x1949] = 0.0;

}
double* x1953 = (double*)myMalloc(150 * sizeof(double));
for(int x1954=0; x1954 < 150; x1954++) {
double x1955 = x1940[x1954];
double x1956 = x136[x1954];
double x1957 = x1955 + x1956;
x1953[x1954] = x1957;

}
double* x1961 = (double*)myMalloc(150 * sizeof(double));
for(int x1962=0; x1962 < 150; x1962++) {
x1961[x1962] = 0.0;

}
double* x1966 = (double*)myMalloc(150 * sizeof(double));
for(int x1967=0; x1967 < 150; x1967++) {
double x1968 = x1953[x1967];
double x1969 = -1.0 * x1968;
double x1970 = exp(x1969);
double x1971 = x1970 + 1.0;
double x1972 = 1.0 / x1971;
x1966[x1967] = x1972;

}
double* x1976 = (double*)myMalloc(150 * sizeof(double));
for(int x1977=0; x1977 < 150; x1977++) {
x1976[x1977] = 0.0;

}
double** x1981 = (double**)myMalloc(2 * sizeof(double*));
x1981[0] = x1966;
x1981[1] = x1976;
double* x564 = x563[0];
double* x565 = x563[1];
function<void(double**)> x568 = [&](double** x569) {
int32_t x572 = x462[x514];
bool x573 = x572 < 0;
if (x573) {
double** x1703 = (double**)myMalloc(2 * sizeof(double*));
x1703[0] = x318;
x1703[1] = x323;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1703);
} else {
double* x1708 = (double*)myMalloc(150 * sizeof(double));
for(int x1709=0; x1709 < 150; x1709++) {
double x1710 = 0.0;
int32_t x1712 = 150 * x1709;
for(int x1711=0; x1711 < 150; x1711++) {
int32_t x1713 = x1711 + x1712;
double x1714 = x121[x1713];
double x1715 = x529[x1711];
double x1716 = x1714 * x1715;
x1710 += x1716;

}
double x1720 = x1710;
x1708[x1709] = x1720;

}
double* x1724 = (double*)myMalloc(150 * sizeof(double));
for(int x1725=0; x1725 < 150; x1725++) {
x1724[x1725] = 0.0;

}
double* x1729 = (double*)myMalloc(150 * sizeof(double));
for(int x1730=0; x1730 < 150; x1730++) {
double x1731 = 0.0;
int32_t x1733 = 150 * x1730;
for(int x1732=0; x1732 < 150; x1732++) {
int32_t x1734 = x1732 + x1733;
double x1735 = x129[x1734];
double x1736 = x538[x1732];
double x1737 = x1735 * x1736;
x1731 += x1737;

}
double x1741 = x1731;
x1729[x1730] = x1741;

}
double* x1745 = (double*)myMalloc(150 * sizeof(double));
for(int x1746=0; x1746 < 150; x1746++) {
x1745[x1746] = 0.0;

}
double* x1750 = (double*)myMalloc(150 * sizeof(double));
for(int x1751=0; x1751 < 150; x1751++) {
double x1752 = x1708[x1751];
double x1753 = x1729[x1751];
double x1754 = x1752 + x1753;
x1750[x1751] = x1754;

}
double* x1758 = (double*)myMalloc(150 * sizeof(double));
for(int x1759=0; x1759 < 150; x1759++) {
x1758[x1759] = 0.0;

}
double* x1763 = (double*)myMalloc(150 * sizeof(double));
for(int x1764=0; x1764 < 150; x1764++) {
double x1765 = x1750[x1764];
double x1766 = x136[x1764];
double x1767 = x1765 + x1766;
x1763[x1764] = x1767;

}
double* x1771 = (double*)myMalloc(150 * sizeof(double));
for(int x1772=0; x1772 < 150; x1772++) {
x1771[x1772] = 0.0;

}
double* x1776 = (double*)myMalloc(150 * sizeof(double));
for(int x1777=0; x1777 < 150; x1777++) {
double x1778 = x1763[x1777];
double x1779 = -1.0 * x1778;
double x1780 = exp(x1779);
double x1781 = x1780 + 1.0;
double x1782 = 1.0 / x1781;
x1776[x1777] = x1782;

}
double* x1786 = (double*)myMalloc(150 * sizeof(double));
for(int x1787=0; x1787 < 150; x1787++) {
x1786[x1787] = 0.0;

}
double** x1791 = (double**)myMalloc(2 * sizeof(double*));
x1791[0] = x1776;
x1791[1] = x1786;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1791);
for(int x1795=0; x1795 < 150; x1795++) {
double x1796 = x1771[x1795];
double x1797 = x1776[x1795];
double x1800 = x1786[x1795];
double x1798 = 1.0 - x1797;
double x1799 = x1798 * x1797;
double x1801 = x1799 * x1800;
double x1802 = x1796 + x1801;
x1771[x1795] = x1802;

}
for(int x1806=0; x1806 < 150; x1806++) {
double x1807 = x1758[x1806];
double x1808 = x1771[x1806];
double x1809 = x1807 + x1808;
x1758[x1806] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x263[x1813];
double x1815 = x1771[x1813];
double x1816 = x1814 + x1815;
x263[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x1724[x1820];
double x1822 = x1758[x1820];
double x1823 = x1821 + x1822;
x1724[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1745[x1827];
double x1829 = x1758[x1827];
double x1830 = x1828 + x1829;
x1745[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
int32_t x1836 = 150 * x1834;
for(int x1835=0; x1835 < 150; x1835++) {
int32_t x1837 = x1836 + x1835;
double x1838 = x258[x1837];
double x1840 = x1745[x1834];
double x1839 = x538[x1835];
double x1841 = x1839 * x1840;
double x1842 = x1838 + x1841;
x258[x1837] = x1842;

}

}
for(int x1848=0; x1848 < 150; x1848++) {
int32_t x1851 = 150 * x1848;
for(int x1849=0; x1849 < 150; x1849++) {
int32_t x1852 = x1851 + x1849;
double x1853 = x129[x1852];
double x1854 = x1745[x1848];
double x1850 = x539[x1849];
double x1855 = x1853 * x1854;
double x1856 = x1850 + x1855;
x539[x1849] = x1856;

}

}
for(int x1862=0; x1862 < 150; x1862++) {
int32_t x1864 = 150 * x1862;
for(int x1863=0; x1863 < 150; x1863++) {
int32_t x1865 = x1864 + x1863;
double x1866 = x253[x1865];
double x1868 = x1724[x1862];
double x1867 = x529[x1863];
double x1869 = x1867 * x1868;
double x1870 = x1866 + x1869;
x253[x1865] = x1870;

}

}
for(int x1876=0; x1876 < 150; x1876++) {
int32_t x1879 = 150 * x1876;
for(int x1877=0; x1877 < 150; x1877++) {
int32_t x1880 = x1879 + x1877;
double x1881 = x121[x1880];
double x1882 = x1724[x1876];
double x1878 = x530[x1877];
double x1883 = x1881 * x1882;
double x1884 = x1878 + x1883;
x530[x1877] = x1884;

}

}
}
};
x568(x1981);
for(int x1985=0; x1985 < 150; x1985++) {
double x1986 = x1961[x1985];
double x1987 = x1966[x1985];
double x1990 = x1976[x1985];
double x1988 = 1.0 - x1987;
double x1989 = x1988 * x1987;
double x1991 = x1989 * x1990;
double x1992 = x1986 + x1991;
x1961[x1985] = x1992;

}
for(int x1996=0; x1996 < 150; x1996++) {
double x1997 = x1948[x1996];
double x1998 = x1961[x1996];
double x1999 = x1997 + x1998;
x1948[x1996] = x1999;

}
for(int x2003=0; x2003 < 150; x2003++) {
double x2004 = x263[x2003];
double x2005 = x1961[x2003];
double x2006 = x2004 + x2005;
x263[x2003] = x2006;

}
for(int x2010=0; x2010 < 150; x2010++) {
double x2011 = x1914[x2010];
double x2012 = x1948[x2010];
double x2013 = x2011 + x2012;
x1914[x2010] = x2013;

}
for(int x2017=0; x2017 < 150; x2017++) {
double x2018 = x1935[x2017];
double x2019 = x1948[x2017];
double x2020 = x2018 + x2019;
x1935[x2017] = x2020;

}
for(int x2024=0; x2024 < 150; x2024++) {
int32_t x2026 = 150 * x2024;
for(int x2025=0; x2025 < 150; x2025++) {
int32_t x2027 = x2026 + x2025;
double x2028 = x248[x2027];
double x2030 = x1935[x2024];
double x2029 = x538[x2025];
double x2031 = x2029 * x2030;
double x2032 = x2028 + x2031;
x248[x2027] = x2032;

}

}
for(int x2038=0; x2038 < 150; x2038++) {
int32_t x2041 = 150 * x2038;
for(int x2039=0; x2039 < 150; x2039++) {
int32_t x2042 = x2041 + x2039;
double x2043 = x113[x2042];
double x2044 = x1935[x2038];
double x2040 = x539[x2039];
double x2045 = x2043 * x2044;
double x2046 = x2040 + x2045;
x539[x2039] = x2046;

}

}
for(int x2052=0; x2052 < 150; x2052++) {
int32_t x2054 = 150 * x2052;
for(int x2053=0; x2053 < 150; x2053++) {
int32_t x2055 = x2054 + x2053;
double x2056 = x243[x2055];
double x2058 = x1914[x2052];
double x2057 = x529[x2053];
double x2059 = x2057 * x2058;
double x2060 = x2056 + x2059;
x243[x2055] = x2060;

}

}
for(int x2066=0; x2066 < 150; x2066++) {
int32_t x2069 = 150 * x2066;
for(int x2067=0; x2067 < 150; x2067++) {
int32_t x2070 = x2069 + x2067;
double x2071 = x105[x2070];
double x2072 = x1914[x2066];
double x2068 = x530[x2067];
double x2073 = x2071 * x2072;
double x2074 = x2068 + x2073;
x530[x2067] = x2074;

}

}
}
};
x562(x2273);
for(int x2277=0; x2277 < 150; x2277++) {
double x2278 = x2253[x2277];
double x2279 = x2258[x2277];
double x2282 = x2268[x2277];
double x2280 = 1.0 - x2279;
double x2281 = x2280 * x2279;
double x2283 = x2281 * x2282;
double x2284 = x2278 + x2283;
x2253[x2277] = x2284;

}
for(int x2288=0; x2288 < 150; x2288++) {
double x2289 = x2240[x2288];
double x2290 = x2253[x2288];
double x2291 = x2289 + x2290;
x2240[x2288] = x2291;

}
for(int x2295=0; x2295 < 150; x2295++) {
double x2296 = x238[x2295];
double x2297 = x2253[x2295];
double x2298 = x2296 + x2297;
x238[x2295] = x2298;

}
for(int x2302=0; x2302 < 150; x2302++) {
double x2303 = x2206[x2302];
double x2304 = x2240[x2302];
double x2305 = x2303 + x2304;
x2206[x2302] = x2305;

}
for(int x2309=0; x2309 < 150; x2309++) {
double x2310 = x2227[x2309];
double x2311 = x2240[x2309];
double x2312 = x2310 + x2311;
x2227[x2309] = x2312;

}
for(int x2316=0; x2316 < 150; x2316++) {
int32_t x2318 = 150 * x2316;
for(int x2317=0; x2317 < 150; x2317++) {
int32_t x2319 = x2318 + x2317;
double x2320 = x233[x2319];
double x2322 = x2227[x2316];
double x2321 = x538[x2317];
double x2323 = x2321 * x2322;
double x2324 = x2320 + x2323;
x233[x2319] = x2324;

}

}
for(int x2330=0; x2330 < 150; x2330++) {
int32_t x2333 = 150 * x2330;
for(int x2331=0; x2331 < 150; x2331++) {
int32_t x2334 = x2333 + x2331;
double x2335 = x92[x2334];
double x2336 = x2227[x2330];
double x2332 = x539[x2331];
double x2337 = x2335 * x2336;
double x2338 = x2332 + x2337;
x539[x2331] = x2338;

}

}
for(int x2344=0; x2344 < 150; x2344++) {
int32_t x2346 = 150 * x2344;
for(int x2345=0; x2345 < 150; x2345++) {
int32_t x2347 = x2346 + x2345;
double x2348 = x228[x2347];
double x2350 = x2206[x2344];
double x2349 = x529[x2345];
double x2351 = x2349 * x2350;
double x2352 = x2348 + x2351;
x228[x2347] = x2352;

}

}
for(int x2358=0; x2358 < 150; x2358++) {
int32_t x2361 = 150 * x2358;
for(int x2359=0; x2359 < 150; x2359++) {
int32_t x2362 = x2361 + x2359;
double x2363 = x83[x2362];
double x2364 = x2206[x2358];
double x2360 = x530[x2359];
double x2365 = x2363 * x2364;
double x2366 = x2360 + x2365;
x530[x2359] = x2366;

}

}
}
};
x556(x2382);
} else {
double** x2387 = (double**)myMalloc(2 * sizeof(double*));
x2387[0] = x308;
x2387[1] = x313;
double* x536 = x535[0];
double* x537 = x535[1];
double* x540 = x535[4];
double* x541 = x535[5];
double* x538 = x535[2];
double* x539 = x535[3];
function<void(double**)> x556 = [&](double** x557) {
int32_t x560 = x462[x514];
bool x561 = x560 < 0;
if (x561) {
double* x2083 = (double*)myMalloc(150 * sizeof(double));
double* x558 = x557[0];
for(int x2084=0; x2084 < 150; x2084++) {
double x2085 = 0.0;
int32_t x2087 = 300 * x2084;
for(int x2086=0; x2086 < 300; x2086++) {
int32_t x2088 = x2086 + x2087;
double x2089 = x42[x2088];
double x2090 = x558[x2086];
double x2091 = x2089 * x2090;
x2085 += x2091;

}
double x2095 = x2085;
x2083[x2084] = x2095;

}
double* x2099 = (double*)myMalloc(150 * sizeof(double));
for(int x2100=0; x2100 < 150; x2100++) {
x2099[x2100] = 0.0;

}
double* x2104 = (double*)myMalloc(150 * sizeof(double));
for(int x2105=0; x2105 < 150; x2105++) {
double x2106 = x2083[x2105];
double x2107 = x50[x2105];
double x2108 = x2106 + x2107;
x2104[x2105] = x2108;

}
double* x2112 = (double*)myMalloc(150 * sizeof(double));
for(int x2113=0; x2113 < 150; x2113++) {
x2112[x2113] = 0.0;

}
double* x2117 = (double*)myMalloc(150 * sizeof(double));
for(int x2118=0; x2118 < 150; x2118++) {
double x2119 = x2104[x2118];
double x2120 = -1.0 * x2119;
double x2121 = exp(x2120);
double x2122 = x2121 + 1.0;
double x2123 = 1.0 / x2122;
x2117[x2118] = x2123;

}
double* x2127 = (double*)myMalloc(150 * sizeof(double));
for(int x2128=0; x2128 < 150; x2128++) {
x2127[x2128] = 0.0;

}
double** x2132 = (double**)myMalloc(2 * sizeof(double*));
x2132[0] = x2117;
x2132[1] = x2127;
double* x559 = x557[1];
function<void(double**)> x562 = [&](double** x563) {
int32_t x566 = x462[x514];
bool x567 = x566 < 0;
if (x567) {
double** x1893 = (double**)myMalloc(2 * sizeof(double*));
x1893[0] = x318;
x1893[1] = x323;
double* x564 = x563[0];
double* x565 = x563[1];
function<void(double**)> x568 = [&](double** x569) {
int32_t x572 = x462[x514];
bool x573 = x572 < 0;
if (x573) {
double** x1703 = (double**)myMalloc(2 * sizeof(double*));
x1703[0] = x318;
x1703[1] = x323;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1703);
} else {
double* x1708 = (double*)myMalloc(150 * sizeof(double));
for(int x1709=0; x1709 < 150; x1709++) {
double x1710 = 0.0;
int32_t x1712 = 150 * x1709;
for(int x1711=0; x1711 < 150; x1711++) {
int32_t x1713 = x1711 + x1712;
double x1714 = x121[x1713];
double x1715 = x529[x1711];
double x1716 = x1714 * x1715;
x1710 += x1716;

}
double x1720 = x1710;
x1708[x1709] = x1720;

}
double* x1724 = (double*)myMalloc(150 * sizeof(double));
for(int x1725=0; x1725 < 150; x1725++) {
x1724[x1725] = 0.0;

}
double* x1729 = (double*)myMalloc(150 * sizeof(double));
for(int x1730=0; x1730 < 150; x1730++) {
double x1731 = 0.0;
int32_t x1733 = 150 * x1730;
for(int x1732=0; x1732 < 150; x1732++) {
int32_t x1734 = x1732 + x1733;
double x1735 = x129[x1734];
double x1736 = x538[x1732];
double x1737 = x1735 * x1736;
x1731 += x1737;

}
double x1741 = x1731;
x1729[x1730] = x1741;

}
double* x1745 = (double*)myMalloc(150 * sizeof(double));
for(int x1746=0; x1746 < 150; x1746++) {
x1745[x1746] = 0.0;

}
double* x1750 = (double*)myMalloc(150 * sizeof(double));
for(int x1751=0; x1751 < 150; x1751++) {
double x1752 = x1708[x1751];
double x1753 = x1729[x1751];
double x1754 = x1752 + x1753;
x1750[x1751] = x1754;

}
double* x1758 = (double*)myMalloc(150 * sizeof(double));
for(int x1759=0; x1759 < 150; x1759++) {
x1758[x1759] = 0.0;

}
double* x1763 = (double*)myMalloc(150 * sizeof(double));
for(int x1764=0; x1764 < 150; x1764++) {
double x1765 = x1750[x1764];
double x1766 = x136[x1764];
double x1767 = x1765 + x1766;
x1763[x1764] = x1767;

}
double* x1771 = (double*)myMalloc(150 * sizeof(double));
for(int x1772=0; x1772 < 150; x1772++) {
x1771[x1772] = 0.0;

}
double* x1776 = (double*)myMalloc(150 * sizeof(double));
for(int x1777=0; x1777 < 150; x1777++) {
double x1778 = x1763[x1777];
double x1779 = -1.0 * x1778;
double x1780 = exp(x1779);
double x1781 = x1780 + 1.0;
double x1782 = 1.0 / x1781;
x1776[x1777] = x1782;

}
double* x1786 = (double*)myMalloc(150 * sizeof(double));
for(int x1787=0; x1787 < 150; x1787++) {
x1786[x1787] = 0.0;

}
double** x1791 = (double**)myMalloc(2 * sizeof(double*));
x1791[0] = x1776;
x1791[1] = x1786;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1791);
for(int x1795=0; x1795 < 150; x1795++) {
double x1796 = x1771[x1795];
double x1797 = x1776[x1795];
double x1800 = x1786[x1795];
double x1798 = 1.0 - x1797;
double x1799 = x1798 * x1797;
double x1801 = x1799 * x1800;
double x1802 = x1796 + x1801;
x1771[x1795] = x1802;

}
for(int x1806=0; x1806 < 150; x1806++) {
double x1807 = x1758[x1806];
double x1808 = x1771[x1806];
double x1809 = x1807 + x1808;
x1758[x1806] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x263[x1813];
double x1815 = x1771[x1813];
double x1816 = x1814 + x1815;
x263[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x1724[x1820];
double x1822 = x1758[x1820];
double x1823 = x1821 + x1822;
x1724[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1745[x1827];
double x1829 = x1758[x1827];
double x1830 = x1828 + x1829;
x1745[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
int32_t x1836 = 150 * x1834;
for(int x1835=0; x1835 < 150; x1835++) {
int32_t x1837 = x1836 + x1835;
double x1838 = x258[x1837];
double x1840 = x1745[x1834];
double x1839 = x538[x1835];
double x1841 = x1839 * x1840;
double x1842 = x1838 + x1841;
x258[x1837] = x1842;

}

}
for(int x1848=0; x1848 < 150; x1848++) {
int32_t x1851 = 150 * x1848;
for(int x1849=0; x1849 < 150; x1849++) {
int32_t x1852 = x1851 + x1849;
double x1853 = x129[x1852];
double x1854 = x1745[x1848];
double x1850 = x539[x1849];
double x1855 = x1853 * x1854;
double x1856 = x1850 + x1855;
x539[x1849] = x1856;

}

}
for(int x1862=0; x1862 < 150; x1862++) {
int32_t x1864 = 150 * x1862;
for(int x1863=0; x1863 < 150; x1863++) {
int32_t x1865 = x1864 + x1863;
double x1866 = x253[x1865];
double x1868 = x1724[x1862];
double x1867 = x529[x1863];
double x1869 = x1867 * x1868;
double x1870 = x1866 + x1869;
x253[x1865] = x1870;

}

}
for(int x1876=0; x1876 < 150; x1876++) {
int32_t x1879 = 150 * x1876;
for(int x1877=0; x1877 < 150; x1877++) {
int32_t x1880 = x1879 + x1877;
double x1881 = x121[x1880];
double x1882 = x1724[x1876];
double x1878 = x530[x1877];
double x1883 = x1881 * x1882;
double x1884 = x1878 + x1883;
x530[x1877] = x1884;

}

}
}
};
x568(x1893);
} else {
double* x1898 = (double*)myMalloc(150 * sizeof(double));
for(int x1899=0; x1899 < 150; x1899++) {
double x1900 = 0.0;
int32_t x1902 = 150 * x1899;
for(int x1901=0; x1901 < 150; x1901++) {
int32_t x1903 = x1901 + x1902;
double x1904 = x105[x1903];
double x1905 = x529[x1901];
double x1906 = x1904 * x1905;
x1900 += x1906;

}
double x1910 = x1900;
x1898[x1899] = x1910;

}
double* x1914 = (double*)myMalloc(150 * sizeof(double));
for(int x1915=0; x1915 < 150; x1915++) {
x1914[x1915] = 0.0;

}
double* x1919 = (double*)myMalloc(150 * sizeof(double));
for(int x1920=0; x1920 < 150; x1920++) {
double x1921 = 0.0;
int32_t x1923 = 150 * x1920;
for(int x1922=0; x1922 < 150; x1922++) {
int32_t x1924 = x1922 + x1923;
double x1925 = x113[x1924];
double x1926 = x538[x1922];
double x1927 = x1925 * x1926;
x1921 += x1927;

}
double x1931 = x1921;
x1919[x1920] = x1931;

}
double* x1935 = (double*)myMalloc(150 * sizeof(double));
for(int x1936=0; x1936 < 150; x1936++) {
x1935[x1936] = 0.0;

}
double* x1940 = (double*)myMalloc(150 * sizeof(double));
for(int x1941=0; x1941 < 150; x1941++) {
double x1942 = x1898[x1941];
double x1943 = x1919[x1941];
double x1944 = x1942 + x1943;
x1940[x1941] = x1944;

}
double* x1948 = (double*)myMalloc(150 * sizeof(double));
for(int x1949=0; x1949 < 150; x1949++) {
x1948[x1949] = 0.0;

}
double* x1953 = (double*)myMalloc(150 * sizeof(double));
for(int x1954=0; x1954 < 150; x1954++) {
double x1955 = x1940[x1954];
double x1956 = x136[x1954];
double x1957 = x1955 + x1956;
x1953[x1954] = x1957;

}
double* x1961 = (double*)myMalloc(150 * sizeof(double));
for(int x1962=0; x1962 < 150; x1962++) {
x1961[x1962] = 0.0;

}
double* x1966 = (double*)myMalloc(150 * sizeof(double));
for(int x1967=0; x1967 < 150; x1967++) {
double x1968 = x1953[x1967];
double x1969 = -1.0 * x1968;
double x1970 = exp(x1969);
double x1971 = x1970 + 1.0;
double x1972 = 1.0 / x1971;
x1966[x1967] = x1972;

}
double* x1976 = (double*)myMalloc(150 * sizeof(double));
for(int x1977=0; x1977 < 150; x1977++) {
x1976[x1977] = 0.0;

}
double** x1981 = (double**)myMalloc(2 * sizeof(double*));
x1981[0] = x1966;
x1981[1] = x1976;
double* x564 = x563[0];
double* x565 = x563[1];
function<void(double**)> x568 = [&](double** x569) {
int32_t x572 = x462[x514];
bool x573 = x572 < 0;
if (x573) {
double** x1703 = (double**)myMalloc(2 * sizeof(double*));
x1703[0] = x318;
x1703[1] = x323;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1703);
} else {
double* x1708 = (double*)myMalloc(150 * sizeof(double));
for(int x1709=0; x1709 < 150; x1709++) {
double x1710 = 0.0;
int32_t x1712 = 150 * x1709;
for(int x1711=0; x1711 < 150; x1711++) {
int32_t x1713 = x1711 + x1712;
double x1714 = x121[x1713];
double x1715 = x529[x1711];
double x1716 = x1714 * x1715;
x1710 += x1716;

}
double x1720 = x1710;
x1708[x1709] = x1720;

}
double* x1724 = (double*)myMalloc(150 * sizeof(double));
for(int x1725=0; x1725 < 150; x1725++) {
x1724[x1725] = 0.0;

}
double* x1729 = (double*)myMalloc(150 * sizeof(double));
for(int x1730=0; x1730 < 150; x1730++) {
double x1731 = 0.0;
int32_t x1733 = 150 * x1730;
for(int x1732=0; x1732 < 150; x1732++) {
int32_t x1734 = x1732 + x1733;
double x1735 = x129[x1734];
double x1736 = x538[x1732];
double x1737 = x1735 * x1736;
x1731 += x1737;

}
double x1741 = x1731;
x1729[x1730] = x1741;

}
double* x1745 = (double*)myMalloc(150 * sizeof(double));
for(int x1746=0; x1746 < 150; x1746++) {
x1745[x1746] = 0.0;

}
double* x1750 = (double*)myMalloc(150 * sizeof(double));
for(int x1751=0; x1751 < 150; x1751++) {
double x1752 = x1708[x1751];
double x1753 = x1729[x1751];
double x1754 = x1752 + x1753;
x1750[x1751] = x1754;

}
double* x1758 = (double*)myMalloc(150 * sizeof(double));
for(int x1759=0; x1759 < 150; x1759++) {
x1758[x1759] = 0.0;

}
double* x1763 = (double*)myMalloc(150 * sizeof(double));
for(int x1764=0; x1764 < 150; x1764++) {
double x1765 = x1750[x1764];
double x1766 = x136[x1764];
double x1767 = x1765 + x1766;
x1763[x1764] = x1767;

}
double* x1771 = (double*)myMalloc(150 * sizeof(double));
for(int x1772=0; x1772 < 150; x1772++) {
x1771[x1772] = 0.0;

}
double* x1776 = (double*)myMalloc(150 * sizeof(double));
for(int x1777=0; x1777 < 150; x1777++) {
double x1778 = x1763[x1777];
double x1779 = -1.0 * x1778;
double x1780 = exp(x1779);
double x1781 = x1780 + 1.0;
double x1782 = 1.0 / x1781;
x1776[x1777] = x1782;

}
double* x1786 = (double*)myMalloc(150 * sizeof(double));
for(int x1787=0; x1787 < 150; x1787++) {
x1786[x1787] = 0.0;

}
double** x1791 = (double**)myMalloc(2 * sizeof(double*));
x1791[0] = x1776;
x1791[1] = x1786;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1791);
for(int x1795=0; x1795 < 150; x1795++) {
double x1796 = x1771[x1795];
double x1797 = x1776[x1795];
double x1800 = x1786[x1795];
double x1798 = 1.0 - x1797;
double x1799 = x1798 * x1797;
double x1801 = x1799 * x1800;
double x1802 = x1796 + x1801;
x1771[x1795] = x1802;

}
for(int x1806=0; x1806 < 150; x1806++) {
double x1807 = x1758[x1806];
double x1808 = x1771[x1806];
double x1809 = x1807 + x1808;
x1758[x1806] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x263[x1813];
double x1815 = x1771[x1813];
double x1816 = x1814 + x1815;
x263[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x1724[x1820];
double x1822 = x1758[x1820];
double x1823 = x1821 + x1822;
x1724[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1745[x1827];
double x1829 = x1758[x1827];
double x1830 = x1828 + x1829;
x1745[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
int32_t x1836 = 150 * x1834;
for(int x1835=0; x1835 < 150; x1835++) {
int32_t x1837 = x1836 + x1835;
double x1838 = x258[x1837];
double x1840 = x1745[x1834];
double x1839 = x538[x1835];
double x1841 = x1839 * x1840;
double x1842 = x1838 + x1841;
x258[x1837] = x1842;

}

}
for(int x1848=0; x1848 < 150; x1848++) {
int32_t x1851 = 150 * x1848;
for(int x1849=0; x1849 < 150; x1849++) {
int32_t x1852 = x1851 + x1849;
double x1853 = x129[x1852];
double x1854 = x1745[x1848];
double x1850 = x539[x1849];
double x1855 = x1853 * x1854;
double x1856 = x1850 + x1855;
x539[x1849] = x1856;

}

}
for(int x1862=0; x1862 < 150; x1862++) {
int32_t x1864 = 150 * x1862;
for(int x1863=0; x1863 < 150; x1863++) {
int32_t x1865 = x1864 + x1863;
double x1866 = x253[x1865];
double x1868 = x1724[x1862];
double x1867 = x529[x1863];
double x1869 = x1867 * x1868;
double x1870 = x1866 + x1869;
x253[x1865] = x1870;

}

}
for(int x1876=0; x1876 < 150; x1876++) {
int32_t x1879 = 150 * x1876;
for(int x1877=0; x1877 < 150; x1877++) {
int32_t x1880 = x1879 + x1877;
double x1881 = x121[x1880];
double x1882 = x1724[x1876];
double x1878 = x530[x1877];
double x1883 = x1881 * x1882;
double x1884 = x1878 + x1883;
x530[x1877] = x1884;

}

}
}
};
x568(x1981);
for(int x1985=0; x1985 < 150; x1985++) {
double x1986 = x1961[x1985];
double x1987 = x1966[x1985];
double x1990 = x1976[x1985];
double x1988 = 1.0 - x1987;
double x1989 = x1988 * x1987;
double x1991 = x1989 * x1990;
double x1992 = x1986 + x1991;
x1961[x1985] = x1992;

}
for(int x1996=0; x1996 < 150; x1996++) {
double x1997 = x1948[x1996];
double x1998 = x1961[x1996];
double x1999 = x1997 + x1998;
x1948[x1996] = x1999;

}
for(int x2003=0; x2003 < 150; x2003++) {
double x2004 = x263[x2003];
double x2005 = x1961[x2003];
double x2006 = x2004 + x2005;
x263[x2003] = x2006;

}
for(int x2010=0; x2010 < 150; x2010++) {
double x2011 = x1914[x2010];
double x2012 = x1948[x2010];
double x2013 = x2011 + x2012;
x1914[x2010] = x2013;

}
for(int x2017=0; x2017 < 150; x2017++) {
double x2018 = x1935[x2017];
double x2019 = x1948[x2017];
double x2020 = x2018 + x2019;
x1935[x2017] = x2020;

}
for(int x2024=0; x2024 < 150; x2024++) {
int32_t x2026 = 150 * x2024;
for(int x2025=0; x2025 < 150; x2025++) {
int32_t x2027 = x2026 + x2025;
double x2028 = x248[x2027];
double x2030 = x1935[x2024];
double x2029 = x538[x2025];
double x2031 = x2029 * x2030;
double x2032 = x2028 + x2031;
x248[x2027] = x2032;

}

}
for(int x2038=0; x2038 < 150; x2038++) {
int32_t x2041 = 150 * x2038;
for(int x2039=0; x2039 < 150; x2039++) {
int32_t x2042 = x2041 + x2039;
double x2043 = x113[x2042];
double x2044 = x1935[x2038];
double x2040 = x539[x2039];
double x2045 = x2043 * x2044;
double x2046 = x2040 + x2045;
x539[x2039] = x2046;

}

}
for(int x2052=0; x2052 < 150; x2052++) {
int32_t x2054 = 150 * x2052;
for(int x2053=0; x2053 < 150; x2053++) {
int32_t x2055 = x2054 + x2053;
double x2056 = x243[x2055];
double x2058 = x1914[x2052];
double x2057 = x529[x2053];
double x2059 = x2057 * x2058;
double x2060 = x2056 + x2059;
x243[x2055] = x2060;

}

}
for(int x2066=0; x2066 < 150; x2066++) {
int32_t x2069 = 150 * x2066;
for(int x2067=0; x2067 < 150; x2067++) {
int32_t x2070 = x2069 + x2067;
double x2071 = x105[x2070];
double x2072 = x1914[x2066];
double x2068 = x530[x2067];
double x2073 = x2071 * x2072;
double x2074 = x2068 + x2073;
x530[x2067] = x2074;

}

}
}
};
x562(x2132);
for(int x2136=0; x2136 < 150; x2136++) {
double x2137 = x2112[x2136];
double x2138 = x2117[x2136];
double x2141 = x2127[x2136];
double x2139 = 1.0 - x2138;
double x2140 = x2139 * x2138;
double x2142 = x2140 * x2141;
double x2143 = x2137 + x2142;
x2112[x2136] = x2143;

}
for(int x2147=0; x2147 < 150; x2147++) {
double x2148 = x2099[x2147];
double x2149 = x2112[x2147];
double x2150 = x2148 + x2149;
x2099[x2147] = x2150;

}
for(int x2154=0; x2154 < 150; x2154++) {
double x2155 = x203[x2154];
double x2156 = x2112[x2154];
double x2157 = x2155 + x2156;
x203[x2154] = x2157;

}
for(int x2161=0; x2161 < 150; x2161++) {
int32_t x2163 = 300 * x2161;
for(int x2162=0; x2162 < 300; x2162++) {
int32_t x2164 = x2163 + x2162;
double x2165 = x198[x2164];
double x2167 = x2099[x2161];
double x2166 = x558[x2162];
double x2168 = x2166 * x2167;
double x2169 = x2165 + x2168;
x198[x2164] = x2169;

}

}
for(int x2175=0; x2175 < 150; x2175++) {
int32_t x2178 = 300 * x2175;
for(int x2176=0; x2176 < 300; x2176++) {
int32_t x2179 = x2178 + x2176;
double x2180 = x42[x2179];
double x2181 = x2099[x2175];
double x2177 = x559[x2176];
double x2182 = x2180 * x2181;
double x2183 = x2177 + x2182;
x559[x2176] = x2183;

}

}
} else {
double* x2190 = (double*)myMalloc(150 * sizeof(double));
for(int x2191=0; x2191 < 150; x2191++) {
double x2192 = 0.0;
int32_t x2194 = 150 * x2191;
for(int x2193=0; x2193 < 150; x2193++) {
int32_t x2195 = x2193 + x2194;
double x2196 = x83[x2195];
double x2197 = x529[x2193];
double x2198 = x2196 * x2197;
x2192 += x2198;

}
double x2202 = x2192;
x2190[x2191] = x2202;

}
double* x2206 = (double*)myMalloc(150 * sizeof(double));
for(int x2207=0; x2207 < 150; x2207++) {
x2206[x2207] = 0.0;

}
double* x2211 = (double*)myMalloc(150 * sizeof(double));
for(int x2212=0; x2212 < 150; x2212++) {
double x2213 = 0.0;
int32_t x2215 = 150 * x2212;
for(int x2214=0; x2214 < 150; x2214++) {
int32_t x2216 = x2214 + x2215;
double x2217 = x92[x2216];
double x2218 = x538[x2214];
double x2219 = x2217 * x2218;
x2213 += x2219;

}
double x2223 = x2213;
x2211[x2212] = x2223;

}
double* x2227 = (double*)myMalloc(150 * sizeof(double));
for(int x2228=0; x2228 < 150; x2228++) {
x2227[x2228] = 0.0;

}
double* x2232 = (double*)myMalloc(150 * sizeof(double));
for(int x2233=0; x2233 < 150; x2233++) {
double x2234 = x2190[x2233];
double x2235 = x2211[x2233];
double x2236 = x2234 + x2235;
x2232[x2233] = x2236;

}
double* x2240 = (double*)myMalloc(150 * sizeof(double));
for(int x2241=0; x2241 < 150; x2241++) {
x2240[x2241] = 0.0;

}
double* x2245 = (double*)myMalloc(150 * sizeof(double));
for(int x2246=0; x2246 < 150; x2246++) {
double x2247 = x2232[x2246];
double x2248 = x99[x2246];
double x2249 = x2247 + x2248;
x2245[x2246] = x2249;

}
double* x2253 = (double*)myMalloc(150 * sizeof(double));
for(int x2254=0; x2254 < 150; x2254++) {
x2253[x2254] = 0.0;

}
double* x2258 = (double*)myMalloc(150 * sizeof(double));
for(int x2259=0; x2259 < 150; x2259++) {
double x2260 = x2245[x2259];
double x2261 = -1.0 * x2260;
double x2262 = exp(x2261);
double x2263 = x2262 + 1.0;
double x2264 = 1.0 / x2263;
x2258[x2259] = x2264;

}
double* x2268 = (double*)myMalloc(150 * sizeof(double));
for(int x2269=0; x2269 < 150; x2269++) {
x2268[x2269] = 0.0;

}
double** x2273 = (double**)myMalloc(2 * sizeof(double*));
x2273[0] = x2258;
x2273[1] = x2268;
double* x558 = x557[0];
double* x559 = x557[1];
function<void(double**)> x562 = [&](double** x563) {
int32_t x566 = x462[x514];
bool x567 = x566 < 0;
if (x567) {
double** x1893 = (double**)myMalloc(2 * sizeof(double*));
x1893[0] = x318;
x1893[1] = x323;
double* x564 = x563[0];
double* x565 = x563[1];
function<void(double**)> x568 = [&](double** x569) {
int32_t x572 = x462[x514];
bool x573 = x572 < 0;
if (x573) {
double** x1703 = (double**)myMalloc(2 * sizeof(double*));
x1703[0] = x318;
x1703[1] = x323;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1703);
} else {
double* x1708 = (double*)myMalloc(150 * sizeof(double));
for(int x1709=0; x1709 < 150; x1709++) {
double x1710 = 0.0;
int32_t x1712 = 150 * x1709;
for(int x1711=0; x1711 < 150; x1711++) {
int32_t x1713 = x1711 + x1712;
double x1714 = x121[x1713];
double x1715 = x529[x1711];
double x1716 = x1714 * x1715;
x1710 += x1716;

}
double x1720 = x1710;
x1708[x1709] = x1720;

}
double* x1724 = (double*)myMalloc(150 * sizeof(double));
for(int x1725=0; x1725 < 150; x1725++) {
x1724[x1725] = 0.0;

}
double* x1729 = (double*)myMalloc(150 * sizeof(double));
for(int x1730=0; x1730 < 150; x1730++) {
double x1731 = 0.0;
int32_t x1733 = 150 * x1730;
for(int x1732=0; x1732 < 150; x1732++) {
int32_t x1734 = x1732 + x1733;
double x1735 = x129[x1734];
double x1736 = x538[x1732];
double x1737 = x1735 * x1736;
x1731 += x1737;

}
double x1741 = x1731;
x1729[x1730] = x1741;

}
double* x1745 = (double*)myMalloc(150 * sizeof(double));
for(int x1746=0; x1746 < 150; x1746++) {
x1745[x1746] = 0.0;

}
double* x1750 = (double*)myMalloc(150 * sizeof(double));
for(int x1751=0; x1751 < 150; x1751++) {
double x1752 = x1708[x1751];
double x1753 = x1729[x1751];
double x1754 = x1752 + x1753;
x1750[x1751] = x1754;

}
double* x1758 = (double*)myMalloc(150 * sizeof(double));
for(int x1759=0; x1759 < 150; x1759++) {
x1758[x1759] = 0.0;

}
double* x1763 = (double*)myMalloc(150 * sizeof(double));
for(int x1764=0; x1764 < 150; x1764++) {
double x1765 = x1750[x1764];
double x1766 = x136[x1764];
double x1767 = x1765 + x1766;
x1763[x1764] = x1767;

}
double* x1771 = (double*)myMalloc(150 * sizeof(double));
for(int x1772=0; x1772 < 150; x1772++) {
x1771[x1772] = 0.0;

}
double* x1776 = (double*)myMalloc(150 * sizeof(double));
for(int x1777=0; x1777 < 150; x1777++) {
double x1778 = x1763[x1777];
double x1779 = -1.0 * x1778;
double x1780 = exp(x1779);
double x1781 = x1780 + 1.0;
double x1782 = 1.0 / x1781;
x1776[x1777] = x1782;

}
double* x1786 = (double*)myMalloc(150 * sizeof(double));
for(int x1787=0; x1787 < 150; x1787++) {
x1786[x1787] = 0.0;

}
double** x1791 = (double**)myMalloc(2 * sizeof(double*));
x1791[0] = x1776;
x1791[1] = x1786;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1791);
for(int x1795=0; x1795 < 150; x1795++) {
double x1796 = x1771[x1795];
double x1797 = x1776[x1795];
double x1800 = x1786[x1795];
double x1798 = 1.0 - x1797;
double x1799 = x1798 * x1797;
double x1801 = x1799 * x1800;
double x1802 = x1796 + x1801;
x1771[x1795] = x1802;

}
for(int x1806=0; x1806 < 150; x1806++) {
double x1807 = x1758[x1806];
double x1808 = x1771[x1806];
double x1809 = x1807 + x1808;
x1758[x1806] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x263[x1813];
double x1815 = x1771[x1813];
double x1816 = x1814 + x1815;
x263[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x1724[x1820];
double x1822 = x1758[x1820];
double x1823 = x1821 + x1822;
x1724[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1745[x1827];
double x1829 = x1758[x1827];
double x1830 = x1828 + x1829;
x1745[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
int32_t x1836 = 150 * x1834;
for(int x1835=0; x1835 < 150; x1835++) {
int32_t x1837 = x1836 + x1835;
double x1838 = x258[x1837];
double x1840 = x1745[x1834];
double x1839 = x538[x1835];
double x1841 = x1839 * x1840;
double x1842 = x1838 + x1841;
x258[x1837] = x1842;

}

}
for(int x1848=0; x1848 < 150; x1848++) {
int32_t x1851 = 150 * x1848;
for(int x1849=0; x1849 < 150; x1849++) {
int32_t x1852 = x1851 + x1849;
double x1853 = x129[x1852];
double x1854 = x1745[x1848];
double x1850 = x539[x1849];
double x1855 = x1853 * x1854;
double x1856 = x1850 + x1855;
x539[x1849] = x1856;

}

}
for(int x1862=0; x1862 < 150; x1862++) {
int32_t x1864 = 150 * x1862;
for(int x1863=0; x1863 < 150; x1863++) {
int32_t x1865 = x1864 + x1863;
double x1866 = x253[x1865];
double x1868 = x1724[x1862];
double x1867 = x529[x1863];
double x1869 = x1867 * x1868;
double x1870 = x1866 + x1869;
x253[x1865] = x1870;

}

}
for(int x1876=0; x1876 < 150; x1876++) {
int32_t x1879 = 150 * x1876;
for(int x1877=0; x1877 < 150; x1877++) {
int32_t x1880 = x1879 + x1877;
double x1881 = x121[x1880];
double x1882 = x1724[x1876];
double x1878 = x530[x1877];
double x1883 = x1881 * x1882;
double x1884 = x1878 + x1883;
x530[x1877] = x1884;

}

}
}
};
x568(x1893);
} else {
double* x1898 = (double*)myMalloc(150 * sizeof(double));
for(int x1899=0; x1899 < 150; x1899++) {
double x1900 = 0.0;
int32_t x1902 = 150 * x1899;
for(int x1901=0; x1901 < 150; x1901++) {
int32_t x1903 = x1901 + x1902;
double x1904 = x105[x1903];
double x1905 = x529[x1901];
double x1906 = x1904 * x1905;
x1900 += x1906;

}
double x1910 = x1900;
x1898[x1899] = x1910;

}
double* x1914 = (double*)myMalloc(150 * sizeof(double));
for(int x1915=0; x1915 < 150; x1915++) {
x1914[x1915] = 0.0;

}
double* x1919 = (double*)myMalloc(150 * sizeof(double));
for(int x1920=0; x1920 < 150; x1920++) {
double x1921 = 0.0;
int32_t x1923 = 150 * x1920;
for(int x1922=0; x1922 < 150; x1922++) {
int32_t x1924 = x1922 + x1923;
double x1925 = x113[x1924];
double x1926 = x538[x1922];
double x1927 = x1925 * x1926;
x1921 += x1927;

}
double x1931 = x1921;
x1919[x1920] = x1931;

}
double* x1935 = (double*)myMalloc(150 * sizeof(double));
for(int x1936=0; x1936 < 150; x1936++) {
x1935[x1936] = 0.0;

}
double* x1940 = (double*)myMalloc(150 * sizeof(double));
for(int x1941=0; x1941 < 150; x1941++) {
double x1942 = x1898[x1941];
double x1943 = x1919[x1941];
double x1944 = x1942 + x1943;
x1940[x1941] = x1944;

}
double* x1948 = (double*)myMalloc(150 * sizeof(double));
for(int x1949=0; x1949 < 150; x1949++) {
x1948[x1949] = 0.0;

}
double* x1953 = (double*)myMalloc(150 * sizeof(double));
for(int x1954=0; x1954 < 150; x1954++) {
double x1955 = x1940[x1954];
double x1956 = x136[x1954];
double x1957 = x1955 + x1956;
x1953[x1954] = x1957;

}
double* x1961 = (double*)myMalloc(150 * sizeof(double));
for(int x1962=0; x1962 < 150; x1962++) {
x1961[x1962] = 0.0;

}
double* x1966 = (double*)myMalloc(150 * sizeof(double));
for(int x1967=0; x1967 < 150; x1967++) {
double x1968 = x1953[x1967];
double x1969 = -1.0 * x1968;
double x1970 = exp(x1969);
double x1971 = x1970 + 1.0;
double x1972 = 1.0 / x1971;
x1966[x1967] = x1972;

}
double* x1976 = (double*)myMalloc(150 * sizeof(double));
for(int x1977=0; x1977 < 150; x1977++) {
x1976[x1977] = 0.0;

}
double** x1981 = (double**)myMalloc(2 * sizeof(double*));
x1981[0] = x1966;
x1981[1] = x1976;
double* x564 = x563[0];
double* x565 = x563[1];
function<void(double**)> x568 = [&](double** x569) {
int32_t x572 = x462[x514];
bool x573 = x572 < 0;
if (x573) {
double** x1703 = (double**)myMalloc(2 * sizeof(double*));
x1703[0] = x318;
x1703[1] = x323;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1703);
} else {
double* x1708 = (double*)myMalloc(150 * sizeof(double));
for(int x1709=0; x1709 < 150; x1709++) {
double x1710 = 0.0;
int32_t x1712 = 150 * x1709;
for(int x1711=0; x1711 < 150; x1711++) {
int32_t x1713 = x1711 + x1712;
double x1714 = x121[x1713];
double x1715 = x529[x1711];
double x1716 = x1714 * x1715;
x1710 += x1716;

}
double x1720 = x1710;
x1708[x1709] = x1720;

}
double* x1724 = (double*)myMalloc(150 * sizeof(double));
for(int x1725=0; x1725 < 150; x1725++) {
x1724[x1725] = 0.0;

}
double* x1729 = (double*)myMalloc(150 * sizeof(double));
for(int x1730=0; x1730 < 150; x1730++) {
double x1731 = 0.0;
int32_t x1733 = 150 * x1730;
for(int x1732=0; x1732 < 150; x1732++) {
int32_t x1734 = x1732 + x1733;
double x1735 = x129[x1734];
double x1736 = x538[x1732];
double x1737 = x1735 * x1736;
x1731 += x1737;

}
double x1741 = x1731;
x1729[x1730] = x1741;

}
double* x1745 = (double*)myMalloc(150 * sizeof(double));
for(int x1746=0; x1746 < 150; x1746++) {
x1745[x1746] = 0.0;

}
double* x1750 = (double*)myMalloc(150 * sizeof(double));
for(int x1751=0; x1751 < 150; x1751++) {
double x1752 = x1708[x1751];
double x1753 = x1729[x1751];
double x1754 = x1752 + x1753;
x1750[x1751] = x1754;

}
double* x1758 = (double*)myMalloc(150 * sizeof(double));
for(int x1759=0; x1759 < 150; x1759++) {
x1758[x1759] = 0.0;

}
double* x1763 = (double*)myMalloc(150 * sizeof(double));
for(int x1764=0; x1764 < 150; x1764++) {
double x1765 = x1750[x1764];
double x1766 = x136[x1764];
double x1767 = x1765 + x1766;
x1763[x1764] = x1767;

}
double* x1771 = (double*)myMalloc(150 * sizeof(double));
for(int x1772=0; x1772 < 150; x1772++) {
x1771[x1772] = 0.0;

}
double* x1776 = (double*)myMalloc(150 * sizeof(double));
for(int x1777=0; x1777 < 150; x1777++) {
double x1778 = x1763[x1777];
double x1779 = -1.0 * x1778;
double x1780 = exp(x1779);
double x1781 = x1780 + 1.0;
double x1782 = 1.0 / x1781;
x1776[x1777] = x1782;

}
double* x1786 = (double*)myMalloc(150 * sizeof(double));
for(int x1787=0; x1787 < 150; x1787++) {
x1786[x1787] = 0.0;

}
double** x1791 = (double**)myMalloc(2 * sizeof(double*));
x1791[0] = x1776;
x1791[1] = x1786;
double* x570 = x569[0];
double* x571 = x569[1];
function<void(double**)> x574 = [&](double** x575) {
int32_t x578 = x462[x514];
bool x579 = x578 < 0;
if (x579) {
double* x1411 = (double*)myMalloc(150 * sizeof(double));
for(int x1412=0; x1412 < 150; x1412++) {
double x1413 = 0.0;
int32_t x1415 = 300 * x1412;
for(int x1414=0; x1414 < 300; x1414++) {
int32_t x1416 = x1414 + x1415;
double x1417 = x57[x1416];
double x1418 = x558[x1414];
double x1419 = x1417 * x1418;
x1413 += x1419;

}
double x1423 = x1413;
x1411[x1412] = x1423;

}
double* x1427 = (double*)myMalloc(150 * sizeof(double));
for(int x1428=0; x1428 < 150; x1428++) {
x1427[x1428] = 0.0;

}
double* x1432 = (double*)myMalloc(150 * sizeof(double));
for(int x1433=0; x1433 < 150; x1433++) {
double x1434 = x1411[x1433];
double x1435 = x64[x1433];
double x1436 = x1434 + x1435;
x1432[x1433] = x1436;

}
double* x1440 = (double*)myMalloc(150 * sizeof(double));
for(int x1441=0; x1441 < 150; x1441++) {
x1440[x1441] = 0.0;

}
double* x1445 = (double*)myMalloc(150 * sizeof(double));
for(int x1446=0; x1446 < 150; x1446++) {
double x1447 = x1432[x1446];
double x1448 = -1.0 * x1447;
double x1449 = exp(x1448);
double x1450 = x1449 + 1.0;
double x1451 = 1.0 / x1450;
x1445[x1446] = x1451;

}
double* x1455 = (double*)myMalloc(150 * sizeof(double));
for(int x1456=0; x1456 < 150; x1456++) {
x1455[x1456] = 0.0;

}
double** x1460 = (double**)myMalloc(2 * sizeof(double*));
x1460[0] = x1445;
x1460[1] = x1455;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1460);
for(int x1464=0; x1464 < 150; x1464++) {
double x1465 = x1440[x1464];
double x1466 = x1445[x1464];
double x1469 = x1455[x1464];
double x1467 = 1.0 - x1466;
double x1468 = x1467 * x1466;
double x1470 = x1468 * x1469;
double x1471 = x1465 + x1470;
x1440[x1464] = x1471;

}
for(int x1475=0; x1475 < 150; x1475++) {
double x1476 = x1427[x1475];
double x1477 = x1440[x1475];
double x1478 = x1476 + x1477;
x1427[x1475] = x1478;

}
for(int x1482=0; x1482 < 150; x1482++) {
double x1483 = x213[x1482];
double x1484 = x1440[x1482];
double x1485 = x1483 + x1484;
x213[x1482] = x1485;

}
for(int x1489=0; x1489 < 150; x1489++) {
int32_t x1491 = 300 * x1489;
for(int x1490=0; x1490 < 300; x1490++) {
int32_t x1492 = x1491 + x1490;
double x1493 = x208[x1492];
double x1495 = x1427[x1489];
double x1494 = x558[x1490];
double x1496 = x1494 * x1495;
double x1497 = x1493 + x1496;
x208[x1492] = x1497;

}

}
for(int x1503=0; x1503 < 150; x1503++) {
int32_t x1506 = 300 * x1503;
for(int x1504=0; x1504 < 300; x1504++) {
int32_t x1507 = x1506 + x1504;
double x1508 = x57[x1507];
double x1509 = x1427[x1503];
double x1505 = x559[x1504];
double x1510 = x1508 * x1509;
double x1511 = x1505 + x1510;
x559[x1504] = x1511;

}

}
} else {
double* x1518 = (double*)myMalloc(150 * sizeof(double));
for(int x1519=0; x1519 < 150; x1519++) {
double x1520 = 0.0;
int32_t x1522 = 150 * x1519;
for(int x1521=0; x1521 < 150; x1521++) {
int32_t x1523 = x1521 + x1522;
double x1524 = x142[x1523];
double x1525 = x529[x1521];
double x1526 = x1524 * x1525;
x1520 += x1526;

}
double x1530 = x1520;
x1518[x1519] = x1530;

}
double* x1534 = (double*)myMalloc(150 * sizeof(double));
for(int x1535=0; x1535 < 150; x1535++) {
x1534[x1535] = 0.0;

}
double* x1539 = (double*)myMalloc(150 * sizeof(double));
for(int x1540=0; x1540 < 150; x1540++) {
double x1541 = 0.0;
int32_t x1543 = 150 * x1540;
for(int x1542=0; x1542 < 150; x1542++) {
int32_t x1544 = x1542 + x1543;
double x1545 = x150[x1544];
double x1546 = x538[x1542];
double x1547 = x1545 * x1546;
x1541 += x1547;

}
double x1551 = x1541;
x1539[x1540] = x1551;

}
double* x1555 = (double*)myMalloc(150 * sizeof(double));
for(int x1556=0; x1556 < 150; x1556++) {
x1555[x1556] = 0.0;

}
double* x1560 = (double*)myMalloc(150 * sizeof(double));
for(int x1561=0; x1561 < 150; x1561++) {
double x1562 = x1518[x1561];
double x1563 = x1539[x1561];
double x1564 = x1562 + x1563;
x1560[x1561] = x1564;

}
double* x1568 = (double*)myMalloc(150 * sizeof(double));
for(int x1569=0; x1569 < 150; x1569++) {
x1568[x1569] = 0.0;

}
double* x1573 = (double*)myMalloc(150 * sizeof(double));
for(int x1574=0; x1574 < 150; x1574++) {
double x1575 = x1560[x1574];
double x1576 = x157[x1574];
double x1577 = x1575 + x1576;
x1573[x1574] = x1577;

}
double* x1581 = (double*)myMalloc(150 * sizeof(double));
for(int x1582=0; x1582 < 150; x1582++) {
x1581[x1582] = 0.0;

}
double* x1586 = (double*)myMalloc(150 * sizeof(double));
for(int x1587=0; x1587 < 150; x1587++) {
double x1588 = x1573[x1587];
double x1589 = -1.0 * x1588;
double x1590 = exp(x1589);
double x1591 = x1590 + 1.0;
double x1592 = 1.0 / x1591;
x1586[x1587] = x1592;

}
double* x1596 = (double*)myMalloc(150 * sizeof(double));
for(int x1597=0; x1597 < 150; x1597++) {
x1596[x1597] = 0.0;

}
double** x1601 = (double**)myMalloc(2 * sizeof(double*));
x1601[0] = x1586;
x1601[1] = x1596;
double* x576 = x575[0];
double* x577 = x575[1];
function<void(double**)> x580 = [&](double** x581) {
int32_t x584 = x462[x514];
bool x585 = x584 < 0;
if (x585) {
double* x1125 = (double*)myMalloc(150 * sizeof(double));
for(int x1126=0; x1126 < 150; x1126++) {
double x1127 = 0.0;
int32_t x1129 = 300 * x1126;
for(int x1128=0; x1128 < 300; x1128++) {
int32_t x1130 = x1128 + x1129;
double x1131 = x70[x1130];
double x1132 = x558[x1128];
double x1133 = x1131 * x1132;
x1127 += x1133;

}
double x1137 = x1127;
x1125[x1126] = x1137;

}
double* x1141 = (double*)myMalloc(150 * sizeof(double));
for(int x1142=0; x1142 < 150; x1142++) {
x1141[x1142] = 0.0;

}
double* x1146 = (double*)myMalloc(150 * sizeof(double));
for(int x1147=0; x1147 < 150; x1147++) {
double x1148 = x1125[x1147];
double x1149 = x77[x1147];
double x1150 = x1148 + x1149;
x1146[x1147] = x1150;

}
double* x1154 = (double*)myMalloc(150 * sizeof(double));
for(int x1155=0; x1155 < 150; x1155++) {
x1154[x1155] = 0.0;

}
double* x1159 = (double*)myMalloc(150 * sizeof(double));
for(int x1160=0; x1160 < 150; x1160++) {
double x1161 = x1146[x1160];
double x1162 = tanh(x1161);
x1159[x1160] = x1162;

}
double* x1166 = (double*)myMalloc(150 * sizeof(double));
for(int x1167=0; x1167 < 150; x1167++) {
x1166[x1167] = 0.0;

}
double** x1171 = (double**)myMalloc(2 * sizeof(double*));
x1171[0] = x1159;
x1171[1] = x1166;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1171);
for(int x1175=0; x1175 < 150; x1175++) {
double x1176 = x1154[x1175];
double x1177 = x1159[x1175];
double x1180 = x1166[x1175];
double x1178 = x1177 * x1177;
double x1179 = 1.0 - x1178;
double x1181 = x1179 * x1180;
double x1182 = x1176 + x1181;
x1154[x1175] = x1182;

}
for(int x1186=0; x1186 < 150; x1186++) {
double x1187 = x1141[x1186];
double x1188 = x1154[x1186];
double x1189 = x1187 + x1188;
x1141[x1186] = x1189;

}
for(int x1193=0; x1193 < 150; x1193++) {
double x1194 = x223[x1193];
double x1195 = x1154[x1193];
double x1196 = x1194 + x1195;
x223[x1193] = x1196;

}
for(int x1200=0; x1200 < 150; x1200++) {
int32_t x1202 = 300 * x1200;
for(int x1201=0; x1201 < 300; x1201++) {
int32_t x1203 = x1202 + x1201;
double x1204 = x218[x1203];
double x1206 = x1141[x1200];
double x1205 = x558[x1201];
double x1207 = x1205 * x1206;
double x1208 = x1204 + x1207;
x218[x1203] = x1208;

}

}
for(int x1214=0; x1214 < 150; x1214++) {
int32_t x1217 = 300 * x1214;
for(int x1215=0; x1215 < 300; x1215++) {
int32_t x1218 = x1217 + x1215;
double x1219 = x70[x1218];
double x1220 = x1141[x1214];
double x1216 = x559[x1215];
double x1221 = x1219 * x1220;
double x1222 = x1216 + x1221;
x559[x1215] = x1222;

}

}
} else {
double* x1229 = (double*)myMalloc(150 * sizeof(double));
for(int x1230=0; x1230 < 150; x1230++) {
double x1231 = 0.0;
int32_t x1233 = 150 * x1230;
for(int x1232=0; x1232 < 150; x1232++) {
int32_t x1234 = x1232 + x1233;
double x1235 = x163[x1234];
double x1236 = x529[x1232];
double x1237 = x1235 * x1236;
x1231 += x1237;

}
double x1241 = x1231;
x1229[x1230] = x1241;

}
double* x1245 = (double*)myMalloc(150 * sizeof(double));
for(int x1246=0; x1246 < 150; x1246++) {
x1245[x1246] = 0.0;

}
double* x1250 = (double*)myMalloc(150 * sizeof(double));
for(int x1251=0; x1251 < 150; x1251++) {
double x1252 = 0.0;
int32_t x1254 = 150 * x1251;
for(int x1253=0; x1253 < 150; x1253++) {
int32_t x1255 = x1253 + x1254;
double x1256 = x171[x1255];
double x1257 = x538[x1253];
double x1258 = x1256 * x1257;
x1252 += x1258;

}
double x1262 = x1252;
x1250[x1251] = x1262;

}
double* x1266 = (double*)myMalloc(150 * sizeof(double));
for(int x1267=0; x1267 < 150; x1267++) {
x1266[x1267] = 0.0;

}
double* x1271 = (double*)myMalloc(150 * sizeof(double));
for(int x1272=0; x1272 < 150; x1272++) {
double x1273 = x1229[x1272];
double x1274 = x1250[x1272];
double x1275 = x1273 + x1274;
x1271[x1272] = x1275;

}
double* x1279 = (double*)myMalloc(150 * sizeof(double));
for(int x1280=0; x1280 < 150; x1280++) {
x1279[x1280] = 0.0;

}
double* x1284 = (double*)myMalloc(150 * sizeof(double));
for(int x1285=0; x1285 < 150; x1285++) {
double x1286 = x1271[x1285];
double x1287 = x178[x1285];
double x1288 = x1286 + x1287;
x1284[x1285] = x1288;

}
double* x1292 = (double*)myMalloc(150 * sizeof(double));
for(int x1293=0; x1293 < 150; x1293++) {
x1292[x1293] = 0.0;

}
double* x1297 = (double*)myMalloc(150 * sizeof(double));
for(int x1298=0; x1298 < 150; x1298++) {
double x1299 = x1284[x1298];
double x1300 = tanh(x1299);
x1297[x1298] = x1300;

}
double* x1304 = (double*)myMalloc(150 * sizeof(double));
for(int x1305=0; x1305 < 150; x1305++) {
x1304[x1305] = 0.0;

}
double** x1309 = (double**)myMalloc(2 * sizeof(double*));
x1309[0] = x1297;
x1309[1] = x1304;
double* x582 = x581[0];
double* x583 = x581[1];
function<void(double**)> x592 = [&](double** x593) {
double* x596 = (double*)myMalloc(150 * sizeof(double));
double* x594 = x593[0];
for(int x597=0; x597 < 150; x597++) {
double x598 = x594[x597];
double x599 = tanh(x598);
x596[x597] = x599;

}
double* x603 = (double*)myMalloc(150 * sizeof(double));
for(int x604=0; x604 < 150; x604++) {
x603[x604] = 0.0;

}
double* x608 = (double*)myMalloc(150 * sizeof(double));
for(int x609=0; x609 < 150; x609++) {
double x611 = x596[x609];
double x610 = x582[x609];
double x612 = x610 * x611;
x608[x609] = x612;

}
double* x616 = (double*)myMalloc(150 * sizeof(double));
for(int x617=0; x617 < 150; x617++) {
x616[x617] = 0.0;

}
double* x621 = (double*)myMalloc(5 * sizeof(double));
for(int x622=0; x622 < 5; x622++) {
double x623 = 0.0;
int32_t x625 = 150 * x622;
for(int x624=0; x624 < 150; x624++) {
int32_t x626 = x624 + x625;
double x627 = x184[x626];
double x628 = x608[x624];
double x629 = x627 * x628;
x623 += x629;

}
double x633 = x623;
x621[x622] = x633;

}
double* x637 = (double*)myMalloc(5 * sizeof(double));
for(int x638=0; x638 < 5; x638++) {
x637[x638] = 0.0;

}
double* x642 = (double*)myMalloc(5 * sizeof(double));
for(int x643=0; x643 < 5; x643++) {
double x644 = x621[x643];
double x645 = x192[x643];
double x646 = x644 + x645;
x642[x643] = x646;

}
double* x650 = (double*)myMalloc(5 * sizeof(double));
for(int x651=0; x651 < 5; x651++) {
x650[x651] = 0.0;

}
double* x655 = (double*)myMalloc(5 * sizeof(double));
for(int x656=0; x656 < 5; x656++) {
double x657 = x642[x656];
double x658 = exp(x657);
x655[x656] = x658;

}
double* x662 = (double*)myMalloc(5 * sizeof(double));
for(int x663=0; x663 < 5; x663++) {
x662[x663] = 0.0;

}
double x667 = 0.0;
for(int x668=0; x668 < 5; x668++) {
double x669 = x655[x668];
x667 += x669;

}
double* x673 = (double*)myMalloc(1 * sizeof(double));
double x674 = x667;
x673[0] = x674;
double* x676 = (double*)myMalloc(1 * sizeof(double));
for(int x677=0; x677 < 1; x677++) {
x676[x677] = 0.0;

}
double* x681 = (double*)myMalloc(5 * sizeof(double));
for(int x682=0; x682 < 5; x682++) {
double x683 = x655[x682];
double x684 = x673[0];
double x685 = x683 / x684;
x681[x682] = x685;

}
double* x689 = (double*)myMalloc(5 * sizeof(double));
for(int x690=0; x690 < 5; x690++) {
x689[x690] = 0.0;

}
double* x694 = (double*)myMalloc(1 * sizeof(double));
for(int x695=0; x695 < 1; x695++) {
double x696 = x527[x695];
double x697 = x536[x695];
double x698 = x696 + x697;
x694[x695] = x698;

}
double* x702 = (double*)myMalloc(1 * sizeof(double));
for(int x703=0; x703 < 1; x703++) {
x702[x703] = 0.0;

}
double* x707 = (double*)myMalloc(1 * sizeof(double));
for(int x708=0; x708 < 1; x708++) {
double x709 = 0.0;
int32_t x711 = 5 * x708;
for(int x710=0; x710 < 5; x710++) {
int32_t x712 = x710 + x711;
double x713 = x681[x712];
double x714 = x542[x710];
double x715 = x713 * x714;
x709 += x715;

}
double x719 = x709;
x707[x708] = x719;

}
double* x723 = (double*)myMalloc(1 * sizeof(double));
for(int x724=0; x724 < 1; x724++) {
x723[x724] = 0.0;

}
double* x728 = (double*)myMalloc(1 * sizeof(double));
for(int x729=0; x729 < 1; x729++) {
double x730 = x707[x729];
double x731 = log(x730);
x728[x729] = x731;

}
double* x735 = (double*)myMalloc(1 * sizeof(double));
for(int x736=0; x736 < 1; x736++) {
x735[x736] = 0.0;

}
double* x740 = (double*)myMalloc(1 * sizeof(double));
for(int x741=0; x741 < 1; x741++) {
double x742 = x694[x741];
double x743 = x728[x741];
double x744 = x742 - x743;
x740[x741] = x744;

}
double* x748 = (double*)myMalloc(1 * sizeof(double));
for(int x749=0; x749 < 1; x749++) {
x748[x749] = 0.0;

}
double** x753 = (double**)myMalloc(6 * sizeof(double*));
x753[0] = x740;
x753[1] = x748;
x753[2] = x608;
x753[3] = x616;
x753[4] = x594;
double* x595 = x593[1];
x753[5] = x595;
x515(x753);
for(int x761=0; x761 < 1; x761++) {
double x762 = x702[x761];
double x763 = x748[x761];
double x764 = x762 + x763;
x702[x761] = x764;

}
for(int x768=0; x768 < 1; x768++) {
double x769 = x735[x768];
double x770 = x748[x768];
double x771 = x769 - x770;
x735[x768] = x771;

}
for(int x775=0; x775 < 1; x775++) {
double x776 = x723[0];
double x777 = x735[0];
double x778 = x707[0];
double x779 = x777 / x778;
double x780 = x776 + x779;
x723[0] = x780;

}
for(int x784=0; x784 < 1; x784++) {
int32_t x786 = 5 * x784;
for(int x785=0; x785 < 5; x785++) {
int32_t x787 = x786 + x785;
double x788 = x689[x787];
double x789 = x542[x785];
double x790 = x723[x784];
double x791 = x789 * x790;
double x792 = x788 + x791;
x689[x787] = x792;

}

}
for(int x798=0; x798 < 1; x798++) {
int32_t x801 = 5 * x798;
for(int x799=0; x799 < 5; x799++) {
double x800 = x549[x799];
int32_t x802 = x801 + x799;
double x803 = x681[x802];
double x804 = x723[x798];
double x805 = x803 * x804;
double x806 = x800 + x805;
x549[x799] = x806;

}

}
for(int x812=0; x812 < 1; x812++) {
double x814 = x702[x812];
double x813 = x528[x812];
double x815 = x813 + x814;
x528[x812] = x815;

}
for(int x819=0; x819 < 1; x819++) {
double x821 = x702[x819];
double x820 = x537[x819];
double x822 = x820 + x821;
x537[x819] = x822;

}
for(int x826=0; x826 < 5; x826++) {
double x827 = x662[x826];
double x828 = x689[x826];
double x829 = x673[0];
double x830 = x828 / x829;
double x831 = x827 + x830;
x662[x826] = x831;

}
for(int x835=0; x835 < 5; x835++) {
double x836 = x676[0];
double x837 = x655[x835];
double x838 = x689[x835];
double x840 = x673[0];
double x839 = x837 * x838;
double x841 = x840 * x840;
double x842 = x839 / x841;
double x843 = x836 - x842;
x676[0] = x843;

}
for(int x847=0; x847 < 5; x847++) {
double x848 = x662[x847];
double x849 = x676[0];
double x850 = x848 + x849;
x662[x847] = x850;

}
for(int x854=0; x854 < 5; x854++) {
double x855 = x650[x854];
double x856 = x655[x854];
double x857 = x662[x854];
double x858 = x856 * x857;
double x859 = x855 + x858;
x650[x854] = x859;

}
for(int x863=0; x863 < 5; x863++) {
double x864 = x637[x863];
double x865 = x650[x863];
double x866 = x864 + x865;
x637[x863] = x866;

}
for(int x870=0; x870 < 5; x870++) {
double x871 = x303[x870];
double x872 = x650[x870];
double x873 = x871 + x872;
x303[x870] = x873;

}
for(int x877=0; x877 < 5; x877++) {
int32_t x879 = 150 * x877;
for(int x878=0; x878 < 150; x878++) {
int32_t x880 = x879 + x878;
double x881 = x298[x880];
double x882 = x608[x878];
double x883 = x637[x877];
double x884 = x882 * x883;
double x885 = x881 + x884;
x298[x880] = x885;

}

}
for(int x891=0; x891 < 5; x891++) {
int32_t x894 = 150 * x891;
for(int x892=0; x892 < 150; x892++) {
double x893 = x616[x892];
int32_t x895 = x894 + x892;
double x896 = x184[x895];
double x897 = x637[x891];
double x898 = x896 * x897;
double x899 = x893 + x898;
x616[x892] = x899;

}

}
for(int x905=0; x905 < 150; x905++) {
double x907 = x596[x905];
double x908 = x616[x905];
double x906 = x583[x905];
double x909 = x907 * x908;
double x910 = x906 + x909;
x583[x905] = x910;

}
for(int x914=0; x914 < 150; x914++) {
double x915 = x603[x914];
double x917 = x616[x914];
double x916 = x582[x914];
double x918 = x916 * x917;
double x919 = x915 + x918;
x603[x914] = x919;

}
for(int x923=0; x923 < 150; x923++) {
double x925 = x596[x923];
double x928 = x603[x923];
double x924 = x595[x923];
double x926 = x925 * x925;
double x927 = 1.0 - x926;
double x929 = x927 * x928;
double x930 = x924 + x929;
x595[x923] = x930;

}
};
function<void(double**)> x586 = [&](double** x587) {
int32_t x590 = x462[x514];
bool x591 = x590 < 0;
if (x591) {
double* x935 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x936=0; x936 < 150; x936++) {
double x937 = x564[x936];
double x938 = x588[x936];
double x939 = x937 * x938;
x935[x936] = x939;

}
double* x943 = (double*)myMalloc(150 * sizeof(double));
for(int x944=0; x944 < 150; x944++) {
x943[x944] = 0.0;

}
double** x948 = (double**)myMalloc(2 * sizeof(double*));
x948[0] = x935;
x948[1] = x943;
x592(x948);
for(int x952=0; x952 < 150; x952++) {
double x955 = x943[x952];
double x953 = x565[x952];
double x954 = x588[x952];
double x956 = x954 * x955;
double x957 = x953 + x956;
x565[x952] = x957;

}
double* x589 = x587[1];
for(int x961=0; x961 < 150; x961++) {
double x964 = x943[x961];
double x962 = x589[x961];
double x963 = x564[x961];
double x965 = x963 * x964;
double x966 = x962 + x965;
x589[x961] = x966;

}
} else {
double* x971 = (double*)myMalloc(150 * sizeof(double));
double* x588 = x587[0];
for(int x972=0; x972 < 150; x972++) {
double x973 = x564[x972];
double x974 = x588[x972];
double x975 = x973 * x974;
x971[x972] = x975;

}
double* x979 = (double*)myMalloc(150 * sizeof(double));
for(int x980=0; x980 < 150; x980++) {
x979[x980] = 0.0;

}
double* x984 = (double*)myMalloc(150 * sizeof(double));
for(int x985=0; x985 < 150; x985++) {
double x986 = x570[x985];
double x987 = x531[x985];
double x988 = x986 * x987;
x984[x985] = x988;

}
double* x992 = (double*)myMalloc(150 * sizeof(double));
for(int x993=0; x993 < 150; x993++) {
x992[x993] = 0.0;

}
double* x997 = (double*)myMalloc(150 * sizeof(double));
for(int x998=0; x998 < 150; x998++) {
double x999 = x971[x998];
double x1000 = x984[x998];
double x1001 = x999 + x1000;
x997[x998] = x1001;

}
double* x1005 = (double*)myMalloc(150 * sizeof(double));
for(int x1006=0; x1006 < 150; x1006++) {
x1005[x1006] = 0.0;

}
double* x1010 = (double*)myMalloc(150 * sizeof(double));
for(int x1011=0; x1011 < 150; x1011++) {
double x1012 = x576[x1011];
double x1013 = x540[x1011];
double x1014 = x1012 * x1013;
x1010[x1011] = x1014;

}
double* x1018 = (double*)myMalloc(150 * sizeof(double));
for(int x1019=0; x1019 < 150; x1019++) {
x1018[x1019] = 0.0;

}
double* x1023 = (double*)myMalloc(150 * sizeof(double));
for(int x1024=0; x1024 < 150; x1024++) {
double x1025 = x997[x1024];
double x1026 = x1010[x1024];
double x1027 = x1025 + x1026;
x1023[x1024] = x1027;

}
double* x1031 = (double*)myMalloc(150 * sizeof(double));
for(int x1032=0; x1032 < 150; x1032++) {
x1031[x1032] = 0.0;

}
double** x1036 = (double**)myMalloc(2 * sizeof(double*));
x1036[0] = x1023;
x1036[1] = x1031;
x592(x1036);
for(int x1040=0; x1040 < 150; x1040++) {
double x1041 = x1005[x1040];
double x1042 = x1031[x1040];
double x1043 = x1041 + x1042;
x1005[x1040] = x1043;

}
for(int x1047=0; x1047 < 150; x1047++) {
double x1048 = x1018[x1047];
double x1049 = x1031[x1047];
double x1050 = x1048 + x1049;
x1018[x1047] = x1050;

}
for(int x1054=0; x1054 < 150; x1054++) {
double x1057 = x1018[x1054];
double x1055 = x577[x1054];
double x1056 = x540[x1054];
double x1058 = x1056 * x1057;
double x1059 = x1055 + x1058;
x577[x1054] = x1059;

}
for(int x1063=0; x1063 < 150; x1063++) {
double x1066 = x1018[x1063];
double x1064 = x541[x1063];
double x1065 = x576[x1063];
double x1067 = x1065 * x1066;
double x1068 = x1064 + x1067;
x541[x1063] = x1068;

}
for(int x1072=0; x1072 < 150; x1072++) {
double x1073 = x979[x1072];
double x1074 = x1005[x1072];
double x1075 = x1073 + x1074;
x979[x1072] = x1075;

}
for(int x1079=0; x1079 < 150; x1079++) {
double x1080 = x992[x1079];
double x1081 = x1005[x1079];
double x1082 = x1080 + x1081;
x992[x1079] = x1082;

}
for(int x1086=0; x1086 < 150; x1086++) {
double x1089 = x992[x1086];
double x1087 = x571[x1086];
double x1088 = x531[x1086];
double x1090 = x1088 * x1089;
double x1091 = x1087 + x1090;
x571[x1086] = x1091;

}
for(int x1095=0; x1095 < 150; x1095++) {
double x1098 = x992[x1095];
double x1096 = x532[x1095];
double x1097 = x570[x1095];
double x1099 = x1097 * x1098;
double x1100 = x1096 + x1099;
x532[x1095] = x1100;

}
for(int x1104=0; x1104 < 150; x1104++) {
double x1107 = x979[x1104];
double x1105 = x565[x1104];
double x1106 = x588[x1104];
double x1108 = x1106 * x1107;
double x1109 = x1105 + x1108;
x565[x1104] = x1109;

}
double* x589 = x587[1];
for(int x1113=0; x1113 < 150; x1113++) {
double x1116 = x979[x1113];
double x1114 = x589[x1113];
double x1115 = x564[x1113];
double x1117 = x1115 * x1116;
double x1118 = x1114 + x1117;
x589[x1113] = x1118;

}
}
};
x586(x1309);
for(int x1313=0; x1313 < 150; x1313++) {
double x1314 = x1292[x1313];
double x1315 = x1297[x1313];
double x1318 = x1304[x1313];
double x1316 = x1315 * x1315;
double x1317 = 1.0 - x1316;
double x1319 = x1317 * x1318;
double x1320 = x1314 + x1319;
x1292[x1313] = x1320;

}
for(int x1324=0; x1324 < 150; x1324++) {
double x1325 = x1279[x1324];
double x1326 = x1292[x1324];
double x1327 = x1325 + x1326;
x1279[x1324] = x1327;

}
for(int x1331=0; x1331 < 150; x1331++) {
double x1332 = x293[x1331];
double x1333 = x1292[x1331];
double x1334 = x1332 + x1333;
x293[x1331] = x1334;

}
for(int x1338=0; x1338 < 150; x1338++) {
double x1339 = x1245[x1338];
double x1340 = x1279[x1338];
double x1341 = x1339 + x1340;
x1245[x1338] = x1341;

}
for(int x1345=0; x1345 < 150; x1345++) {
double x1346 = x1266[x1345];
double x1347 = x1279[x1345];
double x1348 = x1346 + x1347;
x1266[x1345] = x1348;

}
for(int x1352=0; x1352 < 150; x1352++) {
int32_t x1354 = 150 * x1352;
for(int x1353=0; x1353 < 150; x1353++) {
int32_t x1355 = x1354 + x1353;
double x1356 = x288[x1355];
double x1358 = x1266[x1352];
double x1357 = x538[x1353];
double x1359 = x1357 * x1358;
double x1360 = x1356 + x1359;
x288[x1355] = x1360;

}

}
for(int x1366=0; x1366 < 150; x1366++) {
int32_t x1369 = 150 * x1366;
for(int x1367=0; x1367 < 150; x1367++) {
int32_t x1370 = x1369 + x1367;
double x1371 = x171[x1370];
double x1372 = x1266[x1366];
double x1368 = x539[x1367];
double x1373 = x1371 * x1372;
double x1374 = x1368 + x1373;
x539[x1367] = x1374;

}

}
for(int x1380=0; x1380 < 150; x1380++) {
int32_t x1382 = 150 * x1380;
for(int x1381=0; x1381 < 150; x1381++) {
int32_t x1383 = x1382 + x1381;
double x1384 = x283[x1383];
double x1386 = x1245[x1380];
double x1385 = x529[x1381];
double x1387 = x1385 * x1386;
double x1388 = x1384 + x1387;
x283[x1383] = x1388;

}

}
for(int x1394=0; x1394 < 150; x1394++) {
int32_t x1397 = 150 * x1394;
for(int x1395=0; x1395 < 150; x1395++) {
int32_t x1398 = x1397 + x1395;
double x1399 = x163[x1398];
double x1400 = x1245[x1394];
double x1396 = x530[x1395];
double x1401 = x1399 * x1400;
double x1402 = x1396 + x1401;
x530[x1395] = x1402;

}

}
}
};
x580(x1601);
for(int x1605=0; x1605 < 150; x1605++) {
double x1606 = x1581[x1605];
double x1607 = x1586[x1605];
double x1610 = x1596[x1605];
double x1608 = 1.0 - x1607;
double x1609 = x1608 * x1607;
double x1611 = x1609 * x1610;
double x1612 = x1606 + x1611;
x1581[x1605] = x1612;

}
for(int x1616=0; x1616 < 150; x1616++) {
double x1617 = x1568[x1616];
double x1618 = x1581[x1616];
double x1619 = x1617 + x1618;
x1568[x1616] = x1619;

}
for(int x1623=0; x1623 < 150; x1623++) {
double x1624 = x278[x1623];
double x1625 = x1581[x1623];
double x1626 = x1624 + x1625;
x278[x1623] = x1626;

}
for(int x1630=0; x1630 < 150; x1630++) {
double x1631 = x1534[x1630];
double x1632 = x1568[x1630];
double x1633 = x1631 + x1632;
x1534[x1630] = x1633;

}
for(int x1637=0; x1637 < 150; x1637++) {
double x1638 = x1555[x1637];
double x1639 = x1568[x1637];
double x1640 = x1638 + x1639;
x1555[x1637] = x1640;

}
for(int x1644=0; x1644 < 150; x1644++) {
int32_t x1646 = 150 * x1644;
for(int x1645=0; x1645 < 150; x1645++) {
int32_t x1647 = x1646 + x1645;
double x1648 = x273[x1647];
double x1650 = x1555[x1644];
double x1649 = x538[x1645];
double x1651 = x1649 * x1650;
double x1652 = x1648 + x1651;
x273[x1647] = x1652;

}

}
for(int x1658=0; x1658 < 150; x1658++) {
int32_t x1661 = 150 * x1658;
for(int x1659=0; x1659 < 150; x1659++) {
int32_t x1662 = x1661 + x1659;
double x1663 = x150[x1662];
double x1664 = x1555[x1658];
double x1660 = x539[x1659];
double x1665 = x1663 * x1664;
double x1666 = x1660 + x1665;
x539[x1659] = x1666;

}

}
for(int x1672=0; x1672 < 150; x1672++) {
int32_t x1674 = 150 * x1672;
for(int x1673=0; x1673 < 150; x1673++) {
int32_t x1675 = x1674 + x1673;
double x1676 = x268[x1675];
double x1678 = x1534[x1672];
double x1677 = x529[x1673];
double x1679 = x1677 * x1678;
double x1680 = x1676 + x1679;
x268[x1675] = x1680;

}

}
for(int x1686=0; x1686 < 150; x1686++) {
int32_t x1689 = 150 * x1686;
for(int x1687=0; x1687 < 150; x1687++) {
int32_t x1690 = x1689 + x1687;
double x1691 = x142[x1690];
double x1692 = x1534[x1686];
double x1688 = x530[x1687];
double x1693 = x1691 * x1692;
double x1694 = x1688 + x1693;
x530[x1687] = x1694;

}

}
}
};
x574(x1791);
for(int x1795=0; x1795 < 150; x1795++) {
double x1796 = x1771[x1795];
double x1797 = x1776[x1795];
double x1800 = x1786[x1795];
double x1798 = 1.0 - x1797;
double x1799 = x1798 * x1797;
double x1801 = x1799 * x1800;
double x1802 = x1796 + x1801;
x1771[x1795] = x1802;

}
for(int x1806=0; x1806 < 150; x1806++) {
double x1807 = x1758[x1806];
double x1808 = x1771[x1806];
double x1809 = x1807 + x1808;
x1758[x1806] = x1809;

}
for(int x1813=0; x1813 < 150; x1813++) {
double x1814 = x263[x1813];
double x1815 = x1771[x1813];
double x1816 = x1814 + x1815;
x263[x1813] = x1816;

}
for(int x1820=0; x1820 < 150; x1820++) {
double x1821 = x1724[x1820];
double x1822 = x1758[x1820];
double x1823 = x1821 + x1822;
x1724[x1820] = x1823;

}
for(int x1827=0; x1827 < 150; x1827++) {
double x1828 = x1745[x1827];
double x1829 = x1758[x1827];
double x1830 = x1828 + x1829;
x1745[x1827] = x1830;

}
for(int x1834=0; x1834 < 150; x1834++) {
int32_t x1836 = 150 * x1834;
for(int x1835=0; x1835 < 150; x1835++) {
int32_t x1837 = x1836 + x1835;
double x1838 = x258[x1837];
double x1840 = x1745[x1834];
double x1839 = x538[x1835];
double x1841 = x1839 * x1840;
double x1842 = x1838 + x1841;
x258[x1837] = x1842;

}

}
for(int x1848=0; x1848 < 150; x1848++) {
int32_t x1851 = 150 * x1848;
for(int x1849=0; x1849 < 150; x1849++) {
int32_t x1852 = x1851 + x1849;
double x1853 = x129[x1852];
double x1854 = x1745[x1848];
double x1850 = x539[x1849];
double x1855 = x1853 * x1854;
double x1856 = x1850 + x1855;
x539[x1849] = x1856;

}

}
for(int x1862=0; x1862 < 150; x1862++) {
int32_t x1864 = 150 * x1862;
for(int x1863=0; x1863 < 150; x1863++) {
int32_t x1865 = x1864 + x1863;
double x1866 = x253[x1865];
double x1868 = x1724[x1862];
double x1867 = x529[x1863];
double x1869 = x1867 * x1868;
double x1870 = x1866 + x1869;
x253[x1865] = x1870;

}

}
for(int x1876=0; x1876 < 150; x1876++) {
int32_t x1879 = 150 * x1876;
for(int x1877=0; x1877 < 150; x1877++) {
int32_t x1880 = x1879 + x1877;
double x1881 = x121[x1880];
double x1882 = x1724[x1876];
double x1878 = x530[x1877];
double x1883 = x1881 * x1882;
double x1884 = x1878 + x1883;
x530[x1877] = x1884;

}

}
}
};
x568(x1981);
for(int x1985=0; x1985 < 150; x1985++) {
double x1986 = x1961[x1985];
double x1987 = x1966[x1985];
double x1990 = x1976[x1985];
double x1988 = 1.0 - x1987;
double x1989 = x1988 * x1987;
double x1991 = x1989 * x1990;
double x1992 = x1986 + x1991;
x1961[x1985] = x1992;

}
for(int x1996=0; x1996 < 150; x1996++) {
double x1997 = x1948[x1996];
double x1998 = x1961[x1996];
double x1999 = x1997 + x1998;
x1948[x1996] = x1999;

}
for(int x2003=0; x2003 < 150; x2003++) {
double x2004 = x263[x2003];
double x2005 = x1961[x2003];
double x2006 = x2004 + x2005;
x263[x2003] = x2006;

}
for(int x2010=0; x2010 < 150; x2010++) {
double x2011 = x1914[x2010];
double x2012 = x1948[x2010];
double x2013 = x2011 + x2012;
x1914[x2010] = x2013;

}
for(int x2017=0; x2017 < 150; x2017++) {
double x2018 = x1935[x2017];
double x2019 = x1948[x2017];
double x2020 = x2018 + x2019;
x1935[x2017] = x2020;

}
for(int x2024=0; x2024 < 150; x2024++) {
int32_t x2026 = 150 * x2024;
for(int x2025=0; x2025 < 150; x2025++) {
int32_t x2027 = x2026 + x2025;
double x2028 = x248[x2027];
double x2030 = x1935[x2024];
double x2029 = x538[x2025];
double x2031 = x2029 * x2030;
double x2032 = x2028 + x2031;
x248[x2027] = x2032;

}

}
for(int x2038=0; x2038 < 150; x2038++) {
int32_t x2041 = 150 * x2038;
for(int x2039=0; x2039 < 150; x2039++) {
int32_t x2042 = x2041 + x2039;
double x2043 = x113[x2042];
double x2044 = x1935[x2038];
double x2040 = x539[x2039];
double x2045 = x2043 * x2044;
double x2046 = x2040 + x2045;
x539[x2039] = x2046;

}

}
for(int x2052=0; x2052 < 150; x2052++) {
int32_t x2054 = 150 * x2052;
for(int x2053=0; x2053 < 150; x2053++) {
int32_t x2055 = x2054 + x2053;
double x2056 = x243[x2055];
double x2058 = x1914[x2052];
double x2057 = x529[x2053];
double x2059 = x2057 * x2058;
double x2060 = x2056 + x2059;
x243[x2055] = x2060;

}

}
for(int x2066=0; x2066 < 150; x2066++) {
int32_t x2069 = 150 * x2066;
for(int x2067=0; x2067 < 150; x2067++) {
int32_t x2070 = x2069 + x2067;
double x2071 = x105[x2070];
double x2072 = x1914[x2066];
double x2068 = x530[x2067];
double x2073 = x2071 * x2072;
double x2074 = x2068 + x2073;
x530[x2067] = x2074;

}

}
}
};
x562(x2273);
for(int x2277=0; x2277 < 150; x2277++) {
double x2278 = x2253[x2277];
double x2279 = x2258[x2277];
double x2282 = x2268[x2277];
double x2280 = 1.0 - x2279;
double x2281 = x2280 * x2279;
double x2283 = x2281 * x2282;
double x2284 = x2278 + x2283;
x2253[x2277] = x2284;

}
for(int x2288=0; x2288 < 150; x2288++) {
double x2289 = x2240[x2288];
double x2290 = x2253[x2288];
double x2291 = x2289 + x2290;
x2240[x2288] = x2291;

}
for(int x2295=0; x2295 < 150; x2295++) {
double x2296 = x238[x2295];
double x2297 = x2253[x2295];
double x2298 = x2296 + x2297;
x238[x2295] = x2298;

}
for(int x2302=0; x2302 < 150; x2302++) {
double x2303 = x2206[x2302];
double x2304 = x2240[x2302];
double x2305 = x2303 + x2304;
x2206[x2302] = x2305;

}
for(int x2309=0; x2309 < 150; x2309++) {
double x2310 = x2227[x2309];
double x2311 = x2240[x2309];
double x2312 = x2310 + x2311;
x2227[x2309] = x2312;

}
for(int x2316=0; x2316 < 150; x2316++) {
int32_t x2318 = 150 * x2316;
for(int x2317=0; x2317 < 150; x2317++) {
int32_t x2319 = x2318 + x2317;
double x2320 = x233[x2319];
double x2322 = x2227[x2316];
double x2321 = x538[x2317];
double x2323 = x2321 * x2322;
double x2324 = x2320 + x2323;
x233[x2319] = x2324;

}

}
for(int x2330=0; x2330 < 150; x2330++) {
int32_t x2333 = 150 * x2330;
for(int x2331=0; x2331 < 150; x2331++) {
int32_t x2334 = x2333 + x2331;
double x2335 = x92[x2334];
double x2336 = x2227[x2330];
double x2332 = x539[x2331];
double x2337 = x2335 * x2336;
double x2338 = x2332 + x2337;
x539[x2331] = x2338;

}

}
for(int x2344=0; x2344 < 150; x2344++) {
int32_t x2346 = 150 * x2344;
for(int x2345=0; x2345 < 150; x2345++) {
int32_t x2347 = x2346 + x2345;
double x2348 = x228[x2347];
double x2350 = x2206[x2344];
double x2349 = x529[x2345];
double x2351 = x2349 * x2350;
double x2352 = x2348 + x2351;
x228[x2347] = x2352;

}

}
for(int x2358=0; x2358 < 150; x2358++) {
int32_t x2361 = 150 * x2358;
for(int x2359=0; x2359 < 150; x2359++) {
int32_t x2362 = x2361 + x2359;
double x2363 = x83[x2362];
double x2364 = x2206[x2358];
double x2360 = x530[x2359];
double x2365 = x2363 * x2364;
double x2366 = x2360 + x2365;
x530[x2359] = x2366;

}

}
}
};
x556(x2387);
}
};
x510(x533,x534,x2394);
};
x510(x524,x525,x2404);
} else {
double** x2414 = (double**)myMalloc(6 * sizeof(double*));
double** x516 = x513;
double* x517 = x516[0];
x2414[0] = x517;
double* x518 = x516[1];
x2414[1] = x518;
double* x519 = x516[2];
x2414[2] = x519;
double* x520 = x516[3];
x2414[3] = x520;
double* x521 = x516[4];
x2414[4] = x521;
double* x522 = x516[5];
x2414[5] = x522;
function<void(double**)> x515 = x512;
x515(x2414);
}
};
double* x465 = (double*)myMalloc(1 * sizeof(double));
for(int x466=0; x466 < 1; x466++) {
x465[x466] = 0.0;

}
double* x470 = (double*)myMalloc(1 * sizeof(double));
for(int x471=0; x471 < 1; x471++) {
x470[x471] = 0.0;

}
double* x475 = (double*)myMalloc(1 * sizeof(double));
for(int x476=0; x476 < 1; x476++) {
x475[x476] = 0.0;

}
double* x480 = (double*)myMalloc(1 * sizeof(double));
for(int x481=0; x481 < 1; x481++) {
x480[x481] = 0.0;

}
double* x485 = (double*)myMalloc(1 * sizeof(double));
for(int x486=0; x486 < 1; x486++) {
x485[x486] = 0.0;

}
double* x490 = (double*)myMalloc(150 * sizeof(double));
for(int x491=0; x491 < 150; x491++) {
x490[x491] = 0.0;

}
double* x495 = (double*)myMalloc(150 * sizeof(double));
for(int x496=0; x496 < 150; x496++) {
x495[x496] = 0.0;

}
double* x500 = (double*)myMalloc(150 * sizeof(double));
for(int x501=0; x501 < 150; x501++) {
x500[x501] = 0.0;

}
double* x505 = (double*)myMalloc(150 * sizeof(double));
for(int x506=0; x506 < 150; x506++) {
x505[x506] = 0.0;

}
double** x2443 = (double**)myMalloc(6 * sizeof(double*));
x2443[0] = x480;
x2443[1] = x485;
x2443[2] = x490;
x2443[3] = x495;
x2443[4] = x500;
x2443[5] = x505;
function<void(double**)> x2425 = [&](double** x2426) {
double* x2428 = x2426[1];
for(int x2433=0; x2433 < 1; x2433++) {
x2428[x2433] = 1.0;

}
double* x2427 = x2426[0];
for(int x2437=0; x2437 < 1; x2437++) {
double x2438 = x2427[x2437];
x475[x2437] = x2438;

}
};
x510(0,x2425,x2443);
double x2452 = x475[0];
double x2453 = x454;
double x2454 = (double)x455;
double x2455 = x2453 * x2454;
int32_t x2456 = x455 + 1;
double x2457 = (double)x2456;
double x2458 = x2455 / x2457;
double x2459 = x2452 / x2457;
double x2460 = x2458 + x2459;
x454 = x2460;
for(int x2462=0; x2462 < 45000; x2462++) {
double x2463 = x198[x2462];
bool x2464 = x2463 > 5.0;
if (x2464) {
x198[x2462] = 5.0;
} else {
}
bool x2468 = x2463 < -5.0;
if (x2468) {
x198[x2462] = -5.0;
} else {
}

}
double* x2474 = (double*)myMalloc(45000 * sizeof(double));
for(int x2475=0; x2475 < 45000; x2475++) {
double x2476 = x198[x2475];
double x2477 = x2476 * x2476;
x2474[x2475] = x2477;

}
for(int x2481=0; x2481 < 45000; x2481++) {
double x2482 = x339[x2481];
double x2483 = x2474[x2481];
double x2484 = x2482 + x2483;
x339[x2481] = x2484;

}
double* x2488 = (double*)myMalloc(45000 * sizeof(double));
for(int x2489=0; x2489 < 45000; x2489++) {
double x2490 = x198[x2489];
double x2491 = x328[0];
double x2492 = x2490 * x2491;
x2488[x2489] = x2492;

}
double* x2496 = (double*)myMalloc(45000 * sizeof(double));
for(int x2497=0; x2497 < 45000; x2497++) {
double x2498 = x339[x2497];
double x2499 = x334[0];
double x2500 = x2498 + x2499;
x2496[x2497] = x2500;

}
double* x2504 = (double*)myMalloc(45000 * sizeof(double));
for(int x2505=0; x2505 < 45000; x2505++) {
double x2506 = x2496[x2505];
double x2507 = sqrt(x2506);
x2504[x2505] = x2507;

}
double* x2511 = (double*)myMalloc(45000 * sizeof(double));
for(int x2512=0; x2512 < 45000; x2512++) {
double x2513 = x2488[x2512];
double x2514 = x2504[x2512];
double x2515 = x2513 / x2514;
x2511[x2512] = x2515;

}
for(int x2519=0; x2519 < 45000; x2519++) {
double x2520 = x42[x2519];
double x2521 = x2511[x2519];
double x2522 = x2520 - x2521;
x42[x2519] = x2522;

}
for(int x2526=0; x2526 < 45000; x2526++) {
x198[x2526] = 0.0;

}
for(int x2530=0; x2530 < 150; x2530++) {
double x2531 = x203[x2530];
bool x2532 = x2531 > 5.0;
if (x2532) {
x203[x2530] = 5.0;
} else {
}
bool x2536 = x2531 < -5.0;
if (x2536) {
x203[x2530] = -5.0;
} else {
}

}
double* x2542 = (double*)myMalloc(150 * sizeof(double));
for(int x2543=0; x2543 < 150; x2543++) {
double x2544 = x203[x2543];
double x2545 = x2544 * x2544;
x2542[x2543] = x2545;

}
for(int x2549=0; x2549 < 150; x2549++) {
double x2550 = x344[x2549];
double x2551 = x2542[x2549];
double x2552 = x2550 + x2551;
x344[x2549] = x2552;

}
double* x2556 = (double*)myMalloc(150 * sizeof(double));
for(int x2557=0; x2557 < 150; x2557++) {
double x2558 = x203[x2557];
double x2559 = x328[0];
double x2560 = x2558 * x2559;
x2556[x2557] = x2560;

}
double* x2564 = (double*)myMalloc(150 * sizeof(double));
for(int x2565=0; x2565 < 150; x2565++) {
double x2566 = x344[x2565];
double x2567 = x334[0];
double x2568 = x2566 + x2567;
x2564[x2565] = x2568;

}
double* x2572 = (double*)myMalloc(150 * sizeof(double));
for(int x2573=0; x2573 < 150; x2573++) {
double x2574 = x2564[x2573];
double x2575 = sqrt(x2574);
x2572[x2573] = x2575;

}
double* x2579 = (double*)myMalloc(150 * sizeof(double));
for(int x2580=0; x2580 < 150; x2580++) {
double x2581 = x2556[x2580];
double x2582 = x2572[x2580];
double x2583 = x2581 / x2582;
x2579[x2580] = x2583;

}
for(int x2587=0; x2587 < 150; x2587++) {
double x2588 = x50[x2587];
double x2589 = x2579[x2587];
double x2590 = x2588 - x2589;
x50[x2587] = x2590;

}
for(int x2594=0; x2594 < 150; x2594++) {
x203[x2594] = 0.0;

}
for(int x2598=0; x2598 < 45000; x2598++) {
double x2599 = x208[x2598];
bool x2600 = x2599 > 5.0;
if (x2600) {
x208[x2598] = 5.0;
} else {
}
bool x2604 = x2599 < -5.0;
if (x2604) {
x208[x2598] = -5.0;
} else {
}

}
double* x2610 = (double*)myMalloc(45000 * sizeof(double));
for(int x2611=0; x2611 < 45000; x2611++) {
double x2612 = x208[x2611];
double x2613 = x2612 * x2612;
x2610[x2611] = x2613;

}
for(int x2617=0; x2617 < 45000; x2617++) {
double x2618 = x349[x2617];
double x2619 = x2610[x2617];
double x2620 = x2618 + x2619;
x349[x2617] = x2620;

}
double* x2624 = (double*)myMalloc(45000 * sizeof(double));
for(int x2625=0; x2625 < 45000; x2625++) {
double x2626 = x208[x2625];
double x2627 = x328[0];
double x2628 = x2626 * x2627;
x2624[x2625] = x2628;

}
double* x2632 = (double*)myMalloc(45000 * sizeof(double));
for(int x2633=0; x2633 < 45000; x2633++) {
double x2634 = x349[x2633];
double x2635 = x334[0];
double x2636 = x2634 + x2635;
x2632[x2633] = x2636;

}
double* x2640 = (double*)myMalloc(45000 * sizeof(double));
for(int x2641=0; x2641 < 45000; x2641++) {
double x2642 = x2632[x2641];
double x2643 = sqrt(x2642);
x2640[x2641] = x2643;

}
double* x2647 = (double*)myMalloc(45000 * sizeof(double));
for(int x2648=0; x2648 < 45000; x2648++) {
double x2649 = x2624[x2648];
double x2650 = x2640[x2648];
double x2651 = x2649 / x2650;
x2647[x2648] = x2651;

}
for(int x2655=0; x2655 < 45000; x2655++) {
double x2656 = x57[x2655];
double x2657 = x2647[x2655];
double x2658 = x2656 - x2657;
x57[x2655] = x2658;

}
for(int x2662=0; x2662 < 45000; x2662++) {
x208[x2662] = 0.0;

}
for(int x2666=0; x2666 < 150; x2666++) {
double x2667 = x213[x2666];
bool x2668 = x2667 > 5.0;
if (x2668) {
x213[x2666] = 5.0;
} else {
}
bool x2672 = x2667 < -5.0;
if (x2672) {
x213[x2666] = -5.0;
} else {
}

}
double* x2678 = (double*)myMalloc(150 * sizeof(double));
for(int x2679=0; x2679 < 150; x2679++) {
double x2680 = x213[x2679];
double x2681 = x2680 * x2680;
x2678[x2679] = x2681;

}
for(int x2685=0; x2685 < 150; x2685++) {
double x2686 = x354[x2685];
double x2687 = x2678[x2685];
double x2688 = x2686 + x2687;
x354[x2685] = x2688;

}
double* x2692 = (double*)myMalloc(150 * sizeof(double));
for(int x2693=0; x2693 < 150; x2693++) {
double x2694 = x213[x2693];
double x2695 = x328[0];
double x2696 = x2694 * x2695;
x2692[x2693] = x2696;

}
double* x2700 = (double*)myMalloc(150 * sizeof(double));
for(int x2701=0; x2701 < 150; x2701++) {
double x2702 = x354[x2701];
double x2703 = x334[0];
double x2704 = x2702 + x2703;
x2700[x2701] = x2704;

}
double* x2708 = (double*)myMalloc(150 * sizeof(double));
for(int x2709=0; x2709 < 150; x2709++) {
double x2710 = x2700[x2709];
double x2711 = sqrt(x2710);
x2708[x2709] = x2711;

}
double* x2715 = (double*)myMalloc(150 * sizeof(double));
for(int x2716=0; x2716 < 150; x2716++) {
double x2717 = x2692[x2716];
double x2718 = x2708[x2716];
double x2719 = x2717 / x2718;
x2715[x2716] = x2719;

}
for(int x2723=0; x2723 < 150; x2723++) {
double x2724 = x64[x2723];
double x2725 = x2715[x2723];
double x2726 = x2724 - x2725;
x64[x2723] = x2726;

}
for(int x2730=0; x2730 < 150; x2730++) {
x213[x2730] = 0.0;

}
for(int x2734=0; x2734 < 45000; x2734++) {
double x2735 = x218[x2734];
bool x2736 = x2735 > 5.0;
if (x2736) {
x218[x2734] = 5.0;
} else {
}
bool x2740 = x2735 < -5.0;
if (x2740) {
x218[x2734] = -5.0;
} else {
}

}
double* x2746 = (double*)myMalloc(45000 * sizeof(double));
for(int x2747=0; x2747 < 45000; x2747++) {
double x2748 = x218[x2747];
double x2749 = x2748 * x2748;
x2746[x2747] = x2749;

}
for(int x2753=0; x2753 < 45000; x2753++) {
double x2754 = x359[x2753];
double x2755 = x2746[x2753];
double x2756 = x2754 + x2755;
x359[x2753] = x2756;

}
double* x2760 = (double*)myMalloc(45000 * sizeof(double));
for(int x2761=0; x2761 < 45000; x2761++) {
double x2762 = x218[x2761];
double x2763 = x328[0];
double x2764 = x2762 * x2763;
x2760[x2761] = x2764;

}
double* x2768 = (double*)myMalloc(45000 * sizeof(double));
for(int x2769=0; x2769 < 45000; x2769++) {
double x2770 = x359[x2769];
double x2771 = x334[0];
double x2772 = x2770 + x2771;
x2768[x2769] = x2772;

}
double* x2776 = (double*)myMalloc(45000 * sizeof(double));
for(int x2777=0; x2777 < 45000; x2777++) {
double x2778 = x2768[x2777];
double x2779 = sqrt(x2778);
x2776[x2777] = x2779;

}
double* x2783 = (double*)myMalloc(45000 * sizeof(double));
for(int x2784=0; x2784 < 45000; x2784++) {
double x2785 = x2760[x2784];
double x2786 = x2776[x2784];
double x2787 = x2785 / x2786;
x2783[x2784] = x2787;

}
for(int x2791=0; x2791 < 45000; x2791++) {
double x2792 = x70[x2791];
double x2793 = x2783[x2791];
double x2794 = x2792 - x2793;
x70[x2791] = x2794;

}
for(int x2798=0; x2798 < 45000; x2798++) {
x218[x2798] = 0.0;

}
for(int x2802=0; x2802 < 150; x2802++) {
double x2803 = x223[x2802];
bool x2804 = x2803 > 5.0;
if (x2804) {
x223[x2802] = 5.0;
} else {
}
bool x2808 = x2803 < -5.0;
if (x2808) {
x223[x2802] = -5.0;
} else {
}

}
double* x2814 = (double*)myMalloc(150 * sizeof(double));
for(int x2815=0; x2815 < 150; x2815++) {
double x2816 = x223[x2815];
double x2817 = x2816 * x2816;
x2814[x2815] = x2817;

}
for(int x2821=0; x2821 < 150; x2821++) {
double x2822 = x364[x2821];
double x2823 = x2814[x2821];
double x2824 = x2822 + x2823;
x364[x2821] = x2824;

}
double* x2828 = (double*)myMalloc(150 * sizeof(double));
for(int x2829=0; x2829 < 150; x2829++) {
double x2830 = x223[x2829];
double x2831 = x328[0];
double x2832 = x2830 * x2831;
x2828[x2829] = x2832;

}
double* x2836 = (double*)myMalloc(150 * sizeof(double));
for(int x2837=0; x2837 < 150; x2837++) {
double x2838 = x364[x2837];
double x2839 = x334[0];
double x2840 = x2838 + x2839;
x2836[x2837] = x2840;

}
double* x2844 = (double*)myMalloc(150 * sizeof(double));
for(int x2845=0; x2845 < 150; x2845++) {
double x2846 = x2836[x2845];
double x2847 = sqrt(x2846);
x2844[x2845] = x2847;

}
double* x2851 = (double*)myMalloc(150 * sizeof(double));
for(int x2852=0; x2852 < 150; x2852++) {
double x2853 = x2828[x2852];
double x2854 = x2844[x2852];
double x2855 = x2853 / x2854;
x2851[x2852] = x2855;

}
for(int x2859=0; x2859 < 150; x2859++) {
double x2860 = x77[x2859];
double x2861 = x2851[x2859];
double x2862 = x2860 - x2861;
x77[x2859] = x2862;

}
for(int x2866=0; x2866 < 150; x2866++) {
x223[x2866] = 0.0;

}
for(int x2870=0; x2870 < 22500; x2870++) {
double x2871 = x228[x2870];
bool x2872 = x2871 > 5.0;
if (x2872) {
x228[x2870] = 5.0;
} else {
}
bool x2876 = x2871 < -5.0;
if (x2876) {
x228[x2870] = -5.0;
} else {
}

}
double* x2882 = (double*)myMalloc(22500 * sizeof(double));
for(int x2883=0; x2883 < 22500; x2883++) {
double x2884 = x228[x2883];
double x2885 = x2884 * x2884;
x2882[x2883] = x2885;

}
for(int x2889=0; x2889 < 22500; x2889++) {
double x2890 = x369[x2889];
double x2891 = x2882[x2889];
double x2892 = x2890 + x2891;
x369[x2889] = x2892;

}
double* x2896 = (double*)myMalloc(22500 * sizeof(double));
for(int x2897=0; x2897 < 22500; x2897++) {
double x2898 = x228[x2897];
double x2899 = x328[0];
double x2900 = x2898 * x2899;
x2896[x2897] = x2900;

}
double* x2904 = (double*)myMalloc(22500 * sizeof(double));
for(int x2905=0; x2905 < 22500; x2905++) {
double x2906 = x369[x2905];
double x2907 = x334[0];
double x2908 = x2906 + x2907;
x2904[x2905] = x2908;

}
double* x2912 = (double*)myMalloc(22500 * sizeof(double));
for(int x2913=0; x2913 < 22500; x2913++) {
double x2914 = x2904[x2913];
double x2915 = sqrt(x2914);
x2912[x2913] = x2915;

}
double* x2919 = (double*)myMalloc(22500 * sizeof(double));
for(int x2920=0; x2920 < 22500; x2920++) {
double x2921 = x2896[x2920];
double x2922 = x2912[x2920];
double x2923 = x2921 / x2922;
x2919[x2920] = x2923;

}
for(int x2927=0; x2927 < 22500; x2927++) {
double x2928 = x83[x2927];
double x2929 = x2919[x2927];
double x2930 = x2928 - x2929;
x83[x2927] = x2930;

}
for(int x2934=0; x2934 < 22500; x2934++) {
x228[x2934] = 0.0;

}
for(int x2938=0; x2938 < 22500; x2938++) {
double x2939 = x233[x2938];
bool x2940 = x2939 > 5.0;
if (x2940) {
x233[x2938] = 5.0;
} else {
}
bool x2944 = x2939 < -5.0;
if (x2944) {
x233[x2938] = -5.0;
} else {
}

}
double* x2950 = (double*)myMalloc(22500 * sizeof(double));
for(int x2951=0; x2951 < 22500; x2951++) {
double x2952 = x233[x2951];
double x2953 = x2952 * x2952;
x2950[x2951] = x2953;

}
for(int x2957=0; x2957 < 22500; x2957++) {
double x2958 = x374[x2957];
double x2959 = x2950[x2957];
double x2960 = x2958 + x2959;
x374[x2957] = x2960;

}
double* x2964 = (double*)myMalloc(22500 * sizeof(double));
for(int x2965=0; x2965 < 22500; x2965++) {
double x2966 = x233[x2965];
double x2967 = x328[0];
double x2968 = x2966 * x2967;
x2964[x2965] = x2968;

}
double* x2972 = (double*)myMalloc(22500 * sizeof(double));
for(int x2973=0; x2973 < 22500; x2973++) {
double x2974 = x374[x2973];
double x2975 = x334[0];
double x2976 = x2974 + x2975;
x2972[x2973] = x2976;

}
double* x2980 = (double*)myMalloc(22500 * sizeof(double));
for(int x2981=0; x2981 < 22500; x2981++) {
double x2982 = x2972[x2981];
double x2983 = sqrt(x2982);
x2980[x2981] = x2983;

}
double* x2987 = (double*)myMalloc(22500 * sizeof(double));
for(int x2988=0; x2988 < 22500; x2988++) {
double x2989 = x2964[x2988];
double x2990 = x2980[x2988];
double x2991 = x2989 / x2990;
x2987[x2988] = x2991;

}
for(int x2995=0; x2995 < 22500; x2995++) {
double x2996 = x92[x2995];
double x2997 = x2987[x2995];
double x2998 = x2996 - x2997;
x92[x2995] = x2998;

}
for(int x3002=0; x3002 < 22500; x3002++) {
x233[x3002] = 0.0;

}
for(int x3006=0; x3006 < 150; x3006++) {
double x3007 = x238[x3006];
bool x3008 = x3007 > 5.0;
if (x3008) {
x238[x3006] = 5.0;
} else {
}
bool x3012 = x3007 < -5.0;
if (x3012) {
x238[x3006] = -5.0;
} else {
}

}
double* x3018 = (double*)myMalloc(150 * sizeof(double));
for(int x3019=0; x3019 < 150; x3019++) {
double x3020 = x238[x3019];
double x3021 = x3020 * x3020;
x3018[x3019] = x3021;

}
for(int x3025=0; x3025 < 150; x3025++) {
double x3026 = x379[x3025];
double x3027 = x3018[x3025];
double x3028 = x3026 + x3027;
x379[x3025] = x3028;

}
double* x3032 = (double*)myMalloc(150 * sizeof(double));
for(int x3033=0; x3033 < 150; x3033++) {
double x3034 = x238[x3033];
double x3035 = x328[0];
double x3036 = x3034 * x3035;
x3032[x3033] = x3036;

}
double* x3040 = (double*)myMalloc(150 * sizeof(double));
for(int x3041=0; x3041 < 150; x3041++) {
double x3042 = x379[x3041];
double x3043 = x334[0];
double x3044 = x3042 + x3043;
x3040[x3041] = x3044;

}
double* x3048 = (double*)myMalloc(150 * sizeof(double));
for(int x3049=0; x3049 < 150; x3049++) {
double x3050 = x3040[x3049];
double x3051 = sqrt(x3050);
x3048[x3049] = x3051;

}
double* x3055 = (double*)myMalloc(150 * sizeof(double));
for(int x3056=0; x3056 < 150; x3056++) {
double x3057 = x3032[x3056];
double x3058 = x3048[x3056];
double x3059 = x3057 / x3058;
x3055[x3056] = x3059;

}
for(int x3063=0; x3063 < 150; x3063++) {
double x3064 = x99[x3063];
double x3065 = x3055[x3063];
double x3066 = x3064 - x3065;
x99[x3063] = x3066;

}
for(int x3070=0; x3070 < 150; x3070++) {
x238[x3070] = 0.0;

}
for(int x3074=0; x3074 < 22500; x3074++) {
double x3075 = x243[x3074];
bool x3076 = x3075 > 5.0;
if (x3076) {
x243[x3074] = 5.0;
} else {
}
bool x3080 = x3075 < -5.0;
if (x3080) {
x243[x3074] = -5.0;
} else {
}

}
double* x3086 = (double*)myMalloc(22500 * sizeof(double));
for(int x3087=0; x3087 < 22500; x3087++) {
double x3088 = x243[x3087];
double x3089 = x3088 * x3088;
x3086[x3087] = x3089;

}
for(int x3093=0; x3093 < 22500; x3093++) {
double x3094 = x384[x3093];
double x3095 = x3086[x3093];
double x3096 = x3094 + x3095;
x384[x3093] = x3096;

}
double* x3100 = (double*)myMalloc(22500 * sizeof(double));
for(int x3101=0; x3101 < 22500; x3101++) {
double x3102 = x243[x3101];
double x3103 = x328[0];
double x3104 = x3102 * x3103;
x3100[x3101] = x3104;

}
double* x3108 = (double*)myMalloc(22500 * sizeof(double));
for(int x3109=0; x3109 < 22500; x3109++) {
double x3110 = x384[x3109];
double x3111 = x334[0];
double x3112 = x3110 + x3111;
x3108[x3109] = x3112;

}
double* x3116 = (double*)myMalloc(22500 * sizeof(double));
for(int x3117=0; x3117 < 22500; x3117++) {
double x3118 = x3108[x3117];
double x3119 = sqrt(x3118);
x3116[x3117] = x3119;

}
double* x3123 = (double*)myMalloc(22500 * sizeof(double));
for(int x3124=0; x3124 < 22500; x3124++) {
double x3125 = x3100[x3124];
double x3126 = x3116[x3124];
double x3127 = x3125 / x3126;
x3123[x3124] = x3127;

}
for(int x3131=0; x3131 < 22500; x3131++) {
double x3132 = x105[x3131];
double x3133 = x3123[x3131];
double x3134 = x3132 - x3133;
x105[x3131] = x3134;

}
for(int x3138=0; x3138 < 22500; x3138++) {
x243[x3138] = 0.0;

}
for(int x3142=0; x3142 < 22500; x3142++) {
double x3143 = x248[x3142];
bool x3144 = x3143 > 5.0;
if (x3144) {
x248[x3142] = 5.0;
} else {
}
bool x3148 = x3143 < -5.0;
if (x3148) {
x248[x3142] = -5.0;
} else {
}

}
double* x3154 = (double*)myMalloc(22500 * sizeof(double));
for(int x3155=0; x3155 < 22500; x3155++) {
double x3156 = x248[x3155];
double x3157 = x3156 * x3156;
x3154[x3155] = x3157;

}
for(int x3161=0; x3161 < 22500; x3161++) {
double x3162 = x389[x3161];
double x3163 = x3154[x3161];
double x3164 = x3162 + x3163;
x389[x3161] = x3164;

}
double* x3168 = (double*)myMalloc(22500 * sizeof(double));
for(int x3169=0; x3169 < 22500; x3169++) {
double x3170 = x248[x3169];
double x3171 = x328[0];
double x3172 = x3170 * x3171;
x3168[x3169] = x3172;

}
double* x3176 = (double*)myMalloc(22500 * sizeof(double));
for(int x3177=0; x3177 < 22500; x3177++) {
double x3178 = x389[x3177];
double x3179 = x334[0];
double x3180 = x3178 + x3179;
x3176[x3177] = x3180;

}
double* x3184 = (double*)myMalloc(22500 * sizeof(double));
for(int x3185=0; x3185 < 22500; x3185++) {
double x3186 = x3176[x3185];
double x3187 = sqrt(x3186);
x3184[x3185] = x3187;

}
double* x3191 = (double*)myMalloc(22500 * sizeof(double));
for(int x3192=0; x3192 < 22500; x3192++) {
double x3193 = x3168[x3192];
double x3194 = x3184[x3192];
double x3195 = x3193 / x3194;
x3191[x3192] = x3195;

}
for(int x3199=0; x3199 < 22500; x3199++) {
double x3200 = x113[x3199];
double x3201 = x3191[x3199];
double x3202 = x3200 - x3201;
x113[x3199] = x3202;

}
for(int x3206=0; x3206 < 22500; x3206++) {
x248[x3206] = 0.0;

}
for(int x3210=0; x3210 < 22500; x3210++) {
double x3211 = x253[x3210];
bool x3212 = x3211 > 5.0;
if (x3212) {
x253[x3210] = 5.0;
} else {
}
bool x3216 = x3211 < -5.0;
if (x3216) {
x253[x3210] = -5.0;
} else {
}

}
double* x3222 = (double*)myMalloc(22500 * sizeof(double));
for(int x3223=0; x3223 < 22500; x3223++) {
double x3224 = x253[x3223];
double x3225 = x3224 * x3224;
x3222[x3223] = x3225;

}
for(int x3229=0; x3229 < 22500; x3229++) {
double x3230 = x394[x3229];
double x3231 = x3222[x3229];
double x3232 = x3230 + x3231;
x394[x3229] = x3232;

}
double* x3236 = (double*)myMalloc(22500 * sizeof(double));
for(int x3237=0; x3237 < 22500; x3237++) {
double x3238 = x253[x3237];
double x3239 = x328[0];
double x3240 = x3238 * x3239;
x3236[x3237] = x3240;

}
double* x3244 = (double*)myMalloc(22500 * sizeof(double));
for(int x3245=0; x3245 < 22500; x3245++) {
double x3246 = x394[x3245];
double x3247 = x334[0];
double x3248 = x3246 + x3247;
x3244[x3245] = x3248;

}
double* x3252 = (double*)myMalloc(22500 * sizeof(double));
for(int x3253=0; x3253 < 22500; x3253++) {
double x3254 = x3244[x3253];
double x3255 = sqrt(x3254);
x3252[x3253] = x3255;

}
double* x3259 = (double*)myMalloc(22500 * sizeof(double));
for(int x3260=0; x3260 < 22500; x3260++) {
double x3261 = x3236[x3260];
double x3262 = x3252[x3260];
double x3263 = x3261 / x3262;
x3259[x3260] = x3263;

}
for(int x3267=0; x3267 < 22500; x3267++) {
double x3268 = x121[x3267];
double x3269 = x3259[x3267];
double x3270 = x3268 - x3269;
x121[x3267] = x3270;

}
for(int x3274=0; x3274 < 22500; x3274++) {
x253[x3274] = 0.0;

}
for(int x3278=0; x3278 < 22500; x3278++) {
double x3279 = x258[x3278];
bool x3280 = x3279 > 5.0;
if (x3280) {
x258[x3278] = 5.0;
} else {
}
bool x3284 = x3279 < -5.0;
if (x3284) {
x258[x3278] = -5.0;
} else {
}

}
double* x3290 = (double*)myMalloc(22500 * sizeof(double));
for(int x3291=0; x3291 < 22500; x3291++) {
double x3292 = x258[x3291];
double x3293 = x3292 * x3292;
x3290[x3291] = x3293;

}
for(int x3297=0; x3297 < 22500; x3297++) {
double x3298 = x399[x3297];
double x3299 = x3290[x3297];
double x3300 = x3298 + x3299;
x399[x3297] = x3300;

}
double* x3304 = (double*)myMalloc(22500 * sizeof(double));
for(int x3305=0; x3305 < 22500; x3305++) {
double x3306 = x258[x3305];
double x3307 = x328[0];
double x3308 = x3306 * x3307;
x3304[x3305] = x3308;

}
double* x3312 = (double*)myMalloc(22500 * sizeof(double));
for(int x3313=0; x3313 < 22500; x3313++) {
double x3314 = x399[x3313];
double x3315 = x334[0];
double x3316 = x3314 + x3315;
x3312[x3313] = x3316;

}
double* x3320 = (double*)myMalloc(22500 * sizeof(double));
for(int x3321=0; x3321 < 22500; x3321++) {
double x3322 = x3312[x3321];
double x3323 = sqrt(x3322);
x3320[x3321] = x3323;

}
double* x3327 = (double*)myMalloc(22500 * sizeof(double));
for(int x3328=0; x3328 < 22500; x3328++) {
double x3329 = x3304[x3328];
double x3330 = x3320[x3328];
double x3331 = x3329 / x3330;
x3327[x3328] = x3331;

}
for(int x3335=0; x3335 < 22500; x3335++) {
double x3336 = x129[x3335];
double x3337 = x3327[x3335];
double x3338 = x3336 - x3337;
x129[x3335] = x3338;

}
for(int x3342=0; x3342 < 22500; x3342++) {
x258[x3342] = 0.0;

}
for(int x3346=0; x3346 < 150; x3346++) {
double x3347 = x263[x3346];
bool x3348 = x3347 > 5.0;
if (x3348) {
x263[x3346] = 5.0;
} else {
}
bool x3352 = x3347 < -5.0;
if (x3352) {
x263[x3346] = -5.0;
} else {
}

}
double* x3358 = (double*)myMalloc(150 * sizeof(double));
for(int x3359=0; x3359 < 150; x3359++) {
double x3360 = x263[x3359];
double x3361 = x3360 * x3360;
x3358[x3359] = x3361;

}
for(int x3365=0; x3365 < 150; x3365++) {
double x3366 = x404[x3365];
double x3367 = x3358[x3365];
double x3368 = x3366 + x3367;
x404[x3365] = x3368;

}
double* x3372 = (double*)myMalloc(150 * sizeof(double));
for(int x3373=0; x3373 < 150; x3373++) {
double x3374 = x263[x3373];
double x3375 = x328[0];
double x3376 = x3374 * x3375;
x3372[x3373] = x3376;

}
double* x3380 = (double*)myMalloc(150 * sizeof(double));
for(int x3381=0; x3381 < 150; x3381++) {
double x3382 = x404[x3381];
double x3383 = x334[0];
double x3384 = x3382 + x3383;
x3380[x3381] = x3384;

}
double* x3388 = (double*)myMalloc(150 * sizeof(double));
for(int x3389=0; x3389 < 150; x3389++) {
double x3390 = x3380[x3389];
double x3391 = sqrt(x3390);
x3388[x3389] = x3391;

}
double* x3395 = (double*)myMalloc(150 * sizeof(double));
for(int x3396=0; x3396 < 150; x3396++) {
double x3397 = x3372[x3396];
double x3398 = x3388[x3396];
double x3399 = x3397 / x3398;
x3395[x3396] = x3399;

}
for(int x3403=0; x3403 < 150; x3403++) {
double x3404 = x136[x3403];
double x3405 = x3395[x3403];
double x3406 = x3404 - x3405;
x136[x3403] = x3406;

}
for(int x3410=0; x3410 < 150; x3410++) {
x263[x3410] = 0.0;

}
for(int x3414=0; x3414 < 22500; x3414++) {
double x3415 = x268[x3414];
bool x3416 = x3415 > 5.0;
if (x3416) {
x268[x3414] = 5.0;
} else {
}
bool x3420 = x3415 < -5.0;
if (x3420) {
x268[x3414] = -5.0;
} else {
}

}
double* x3426 = (double*)myMalloc(22500 * sizeof(double));
for(int x3427=0; x3427 < 22500; x3427++) {
double x3428 = x268[x3427];
double x3429 = x3428 * x3428;
x3426[x3427] = x3429;

}
for(int x3433=0; x3433 < 22500; x3433++) {
double x3434 = x409[x3433];
double x3435 = x3426[x3433];
double x3436 = x3434 + x3435;
x409[x3433] = x3436;

}
double* x3440 = (double*)myMalloc(22500 * sizeof(double));
for(int x3441=0; x3441 < 22500; x3441++) {
double x3442 = x268[x3441];
double x3443 = x328[0];
double x3444 = x3442 * x3443;
x3440[x3441] = x3444;

}
double* x3448 = (double*)myMalloc(22500 * sizeof(double));
for(int x3449=0; x3449 < 22500; x3449++) {
double x3450 = x409[x3449];
double x3451 = x334[0];
double x3452 = x3450 + x3451;
x3448[x3449] = x3452;

}
double* x3456 = (double*)myMalloc(22500 * sizeof(double));
for(int x3457=0; x3457 < 22500; x3457++) {
double x3458 = x3448[x3457];
double x3459 = sqrt(x3458);
x3456[x3457] = x3459;

}
double* x3463 = (double*)myMalloc(22500 * sizeof(double));
for(int x3464=0; x3464 < 22500; x3464++) {
double x3465 = x3440[x3464];
double x3466 = x3456[x3464];
double x3467 = x3465 / x3466;
x3463[x3464] = x3467;

}
for(int x3471=0; x3471 < 22500; x3471++) {
double x3472 = x142[x3471];
double x3473 = x3463[x3471];
double x3474 = x3472 - x3473;
x142[x3471] = x3474;

}
for(int x3478=0; x3478 < 22500; x3478++) {
x268[x3478] = 0.0;

}
for(int x3482=0; x3482 < 22500; x3482++) {
double x3483 = x273[x3482];
bool x3484 = x3483 > 5.0;
if (x3484) {
x273[x3482] = 5.0;
} else {
}
bool x3488 = x3483 < -5.0;
if (x3488) {
x273[x3482] = -5.0;
} else {
}

}
double* x3494 = (double*)myMalloc(22500 * sizeof(double));
for(int x3495=0; x3495 < 22500; x3495++) {
double x3496 = x273[x3495];
double x3497 = x3496 * x3496;
x3494[x3495] = x3497;

}
for(int x3501=0; x3501 < 22500; x3501++) {
double x3502 = x414[x3501];
double x3503 = x3494[x3501];
double x3504 = x3502 + x3503;
x414[x3501] = x3504;

}
double* x3508 = (double*)myMalloc(22500 * sizeof(double));
for(int x3509=0; x3509 < 22500; x3509++) {
double x3510 = x273[x3509];
double x3511 = x328[0];
double x3512 = x3510 * x3511;
x3508[x3509] = x3512;

}
double* x3516 = (double*)myMalloc(22500 * sizeof(double));
for(int x3517=0; x3517 < 22500; x3517++) {
double x3518 = x414[x3517];
double x3519 = x334[0];
double x3520 = x3518 + x3519;
x3516[x3517] = x3520;

}
double* x3524 = (double*)myMalloc(22500 * sizeof(double));
for(int x3525=0; x3525 < 22500; x3525++) {
double x3526 = x3516[x3525];
double x3527 = sqrt(x3526);
x3524[x3525] = x3527;

}
double* x3531 = (double*)myMalloc(22500 * sizeof(double));
for(int x3532=0; x3532 < 22500; x3532++) {
double x3533 = x3508[x3532];
double x3534 = x3524[x3532];
double x3535 = x3533 / x3534;
x3531[x3532] = x3535;

}
for(int x3539=0; x3539 < 22500; x3539++) {
double x3540 = x150[x3539];
double x3541 = x3531[x3539];
double x3542 = x3540 - x3541;
x150[x3539] = x3542;

}
for(int x3546=0; x3546 < 22500; x3546++) {
x273[x3546] = 0.0;

}
for(int x3550=0; x3550 < 150; x3550++) {
double x3551 = x278[x3550];
bool x3552 = x3551 > 5.0;
if (x3552) {
x278[x3550] = 5.0;
} else {
}
bool x3556 = x3551 < -5.0;
if (x3556) {
x278[x3550] = -5.0;
} else {
}

}
double* x3562 = (double*)myMalloc(150 * sizeof(double));
for(int x3563=0; x3563 < 150; x3563++) {
double x3564 = x278[x3563];
double x3565 = x3564 * x3564;
x3562[x3563] = x3565;

}
for(int x3569=0; x3569 < 150; x3569++) {
double x3570 = x419[x3569];
double x3571 = x3562[x3569];
double x3572 = x3570 + x3571;
x419[x3569] = x3572;

}
double* x3576 = (double*)myMalloc(150 * sizeof(double));
for(int x3577=0; x3577 < 150; x3577++) {
double x3578 = x278[x3577];
double x3579 = x328[0];
double x3580 = x3578 * x3579;
x3576[x3577] = x3580;

}
double* x3584 = (double*)myMalloc(150 * sizeof(double));
for(int x3585=0; x3585 < 150; x3585++) {
double x3586 = x419[x3585];
double x3587 = x334[0];
double x3588 = x3586 + x3587;
x3584[x3585] = x3588;

}
double* x3592 = (double*)myMalloc(150 * sizeof(double));
for(int x3593=0; x3593 < 150; x3593++) {
double x3594 = x3584[x3593];
double x3595 = sqrt(x3594);
x3592[x3593] = x3595;

}
double* x3599 = (double*)myMalloc(150 * sizeof(double));
for(int x3600=0; x3600 < 150; x3600++) {
double x3601 = x3576[x3600];
double x3602 = x3592[x3600];
double x3603 = x3601 / x3602;
x3599[x3600] = x3603;

}
for(int x3607=0; x3607 < 150; x3607++) {
double x3608 = x157[x3607];
double x3609 = x3599[x3607];
double x3610 = x3608 - x3609;
x157[x3607] = x3610;

}
for(int x3614=0; x3614 < 150; x3614++) {
x278[x3614] = 0.0;

}
for(int x3618=0; x3618 < 22500; x3618++) {
double x3619 = x283[x3618];
bool x3620 = x3619 > 5.0;
if (x3620) {
x283[x3618] = 5.0;
} else {
}
bool x3624 = x3619 < -5.0;
if (x3624) {
x283[x3618] = -5.0;
} else {
}

}
double* x3630 = (double*)myMalloc(22500 * sizeof(double));
for(int x3631=0; x3631 < 22500; x3631++) {
double x3632 = x283[x3631];
double x3633 = x3632 * x3632;
x3630[x3631] = x3633;

}
for(int x3637=0; x3637 < 22500; x3637++) {
double x3638 = x424[x3637];
double x3639 = x3630[x3637];
double x3640 = x3638 + x3639;
x424[x3637] = x3640;

}
double* x3644 = (double*)myMalloc(22500 * sizeof(double));
for(int x3645=0; x3645 < 22500; x3645++) {
double x3646 = x283[x3645];
double x3647 = x328[0];
double x3648 = x3646 * x3647;
x3644[x3645] = x3648;

}
double* x3652 = (double*)myMalloc(22500 * sizeof(double));
for(int x3653=0; x3653 < 22500; x3653++) {
double x3654 = x424[x3653];
double x3655 = x334[0];
double x3656 = x3654 + x3655;
x3652[x3653] = x3656;

}
double* x3660 = (double*)myMalloc(22500 * sizeof(double));
for(int x3661=0; x3661 < 22500; x3661++) {
double x3662 = x3652[x3661];
double x3663 = sqrt(x3662);
x3660[x3661] = x3663;

}
double* x3667 = (double*)myMalloc(22500 * sizeof(double));
for(int x3668=0; x3668 < 22500; x3668++) {
double x3669 = x3644[x3668];
double x3670 = x3660[x3668];
double x3671 = x3669 / x3670;
x3667[x3668] = x3671;

}
for(int x3675=0; x3675 < 22500; x3675++) {
double x3676 = x163[x3675];
double x3677 = x3667[x3675];
double x3678 = x3676 - x3677;
x163[x3675] = x3678;

}
for(int x3682=0; x3682 < 22500; x3682++) {
x283[x3682] = 0.0;

}
for(int x3686=0; x3686 < 22500; x3686++) {
double x3687 = x288[x3686];
bool x3688 = x3687 > 5.0;
if (x3688) {
x288[x3686] = 5.0;
} else {
}
bool x3692 = x3687 < -5.0;
if (x3692) {
x288[x3686] = -5.0;
} else {
}

}
double* x3698 = (double*)myMalloc(22500 * sizeof(double));
for(int x3699=0; x3699 < 22500; x3699++) {
double x3700 = x288[x3699];
double x3701 = x3700 * x3700;
x3698[x3699] = x3701;

}
for(int x3705=0; x3705 < 22500; x3705++) {
double x3706 = x429[x3705];
double x3707 = x3698[x3705];
double x3708 = x3706 + x3707;
x429[x3705] = x3708;

}
double* x3712 = (double*)myMalloc(22500 * sizeof(double));
for(int x3713=0; x3713 < 22500; x3713++) {
double x3714 = x288[x3713];
double x3715 = x328[0];
double x3716 = x3714 * x3715;
x3712[x3713] = x3716;

}
double* x3720 = (double*)myMalloc(22500 * sizeof(double));
for(int x3721=0; x3721 < 22500; x3721++) {
double x3722 = x429[x3721];
double x3723 = x334[0];
double x3724 = x3722 + x3723;
x3720[x3721] = x3724;

}
double* x3728 = (double*)myMalloc(22500 * sizeof(double));
for(int x3729=0; x3729 < 22500; x3729++) {
double x3730 = x3720[x3729];
double x3731 = sqrt(x3730);
x3728[x3729] = x3731;

}
double* x3735 = (double*)myMalloc(22500 * sizeof(double));
for(int x3736=0; x3736 < 22500; x3736++) {
double x3737 = x3712[x3736];
double x3738 = x3728[x3736];
double x3739 = x3737 / x3738;
x3735[x3736] = x3739;

}
for(int x3743=0; x3743 < 22500; x3743++) {
double x3744 = x171[x3743];
double x3745 = x3735[x3743];
double x3746 = x3744 - x3745;
x171[x3743] = x3746;

}
for(int x3750=0; x3750 < 22500; x3750++) {
x288[x3750] = 0.0;

}
for(int x3754=0; x3754 < 150; x3754++) {
double x3755 = x293[x3754];
bool x3756 = x3755 > 5.0;
if (x3756) {
x293[x3754] = 5.0;
} else {
}
bool x3760 = x3755 < -5.0;
if (x3760) {
x293[x3754] = -5.0;
} else {
}

}
double* x3766 = (double*)myMalloc(150 * sizeof(double));
for(int x3767=0; x3767 < 150; x3767++) {
double x3768 = x293[x3767];
double x3769 = x3768 * x3768;
x3766[x3767] = x3769;

}
for(int x3773=0; x3773 < 150; x3773++) {
double x3774 = x434[x3773];
double x3775 = x3766[x3773];
double x3776 = x3774 + x3775;
x434[x3773] = x3776;

}
double* x3780 = (double*)myMalloc(150 * sizeof(double));
for(int x3781=0; x3781 < 150; x3781++) {
double x3782 = x293[x3781];
double x3783 = x328[0];
double x3784 = x3782 * x3783;
x3780[x3781] = x3784;

}
double* x3788 = (double*)myMalloc(150 * sizeof(double));
for(int x3789=0; x3789 < 150; x3789++) {
double x3790 = x434[x3789];
double x3791 = x334[0];
double x3792 = x3790 + x3791;
x3788[x3789] = x3792;

}
double* x3796 = (double*)myMalloc(150 * sizeof(double));
for(int x3797=0; x3797 < 150; x3797++) {
double x3798 = x3788[x3797];
double x3799 = sqrt(x3798);
x3796[x3797] = x3799;

}
double* x3803 = (double*)myMalloc(150 * sizeof(double));
for(int x3804=0; x3804 < 150; x3804++) {
double x3805 = x3780[x3804];
double x3806 = x3796[x3804];
double x3807 = x3805 / x3806;
x3803[x3804] = x3807;

}
for(int x3811=0; x3811 < 150; x3811++) {
double x3812 = x178[x3811];
double x3813 = x3803[x3811];
double x3814 = x3812 - x3813;
x178[x3811] = x3814;

}
for(int x3818=0; x3818 < 150; x3818++) {
x293[x3818] = 0.0;

}
for(int x3822=0; x3822 < 750; x3822++) {
double x3823 = x298[x3822];
bool x3824 = x3823 > 5.0;
if (x3824) {
x298[x3822] = 5.0;
} else {
}
bool x3828 = x3823 < -5.0;
if (x3828) {
x298[x3822] = -5.0;
} else {
}

}
double* x3834 = (double*)myMalloc(750 * sizeof(double));
for(int x3835=0; x3835 < 750; x3835++) {
double x3836 = x298[x3835];
double x3837 = x3836 * x3836;
x3834[x3835] = x3837;

}
for(int x3841=0; x3841 < 750; x3841++) {
double x3842 = x439[x3841];
double x3843 = x3834[x3841];
double x3844 = x3842 + x3843;
x439[x3841] = x3844;

}
double* x3848 = (double*)myMalloc(750 * sizeof(double));
for(int x3849=0; x3849 < 750; x3849++) {
double x3850 = x298[x3849];
double x3851 = x328[0];
double x3852 = x3850 * x3851;
x3848[x3849] = x3852;

}
double* x3856 = (double*)myMalloc(750 * sizeof(double));
for(int x3857=0; x3857 < 750; x3857++) {
double x3858 = x439[x3857];
double x3859 = x334[0];
double x3860 = x3858 + x3859;
x3856[x3857] = x3860;

}
double* x3864 = (double*)myMalloc(750 * sizeof(double));
for(int x3865=0; x3865 < 750; x3865++) {
double x3866 = x3856[x3865];
double x3867 = sqrt(x3866);
x3864[x3865] = x3867;

}
double* x3871 = (double*)myMalloc(750 * sizeof(double));
for(int x3872=0; x3872 < 750; x3872++) {
double x3873 = x3848[x3872];
double x3874 = x3864[x3872];
double x3875 = x3873 / x3874;
x3871[x3872] = x3875;

}
for(int x3879=0; x3879 < 750; x3879++) {
double x3880 = x184[x3879];
double x3881 = x3871[x3879];
double x3882 = x3880 - x3881;
x184[x3879] = x3882;

}
for(int x3886=0; x3886 < 750; x3886++) {
x298[x3886] = 0.0;

}
for(int x3890=0; x3890 < 5; x3890++) {
double x3891 = x303[x3890];
bool x3892 = x3891 > 5.0;
if (x3892) {
x303[x3890] = 5.0;
} else {
}
bool x3896 = x3891 < -5.0;
if (x3896) {
x303[x3890] = -5.0;
} else {
}

}
double* x3902 = (double*)myMalloc(5 * sizeof(double));
for(int x3903=0; x3903 < 5; x3903++) {
double x3904 = x303[x3903];
double x3905 = x3904 * x3904;
x3902[x3903] = x3905;

}
for(int x3909=0; x3909 < 5; x3909++) {
double x3910 = x444[x3909];
double x3911 = x3902[x3909];
double x3912 = x3910 + x3911;
x444[x3909] = x3912;

}
double* x3916 = (double*)myMalloc(5 * sizeof(double));
for(int x3917=0; x3917 < 5; x3917++) {
double x3918 = x303[x3917];
double x3919 = x328[0];
double x3920 = x3918 * x3919;
x3916[x3917] = x3920;

}
double* x3924 = (double*)myMalloc(5 * sizeof(double));
for(int x3925=0; x3925 < 5; x3925++) {
double x3926 = x444[x3925];
double x3927 = x334[0];
double x3928 = x3926 + x3927;
x3924[x3925] = x3928;

}
double* x3932 = (double*)myMalloc(5 * sizeof(double));
for(int x3933=0; x3933 < 5; x3933++) {
double x3934 = x3924[x3933];
double x3935 = sqrt(x3934);
x3932[x3933] = x3935;

}
double* x3939 = (double*)myMalloc(5 * sizeof(double));
for(int x3940=0; x3940 < 5; x3940++) {
double x3941 = x3916[x3940];
double x3942 = x3932[x3940];
double x3943 = x3941 / x3942;
x3939[x3940] = x3943;

}
for(int x3947=0; x3947 < 5; x3947++) {
double x3948 = x192[x3947];
double x3949 = x3939[x3947];
double x3950 = x3948 - x3949;
x192[x3947] = x3950;

}
for(int x3954=0; x3954 < 5; x3954++) {
x303[x3954] = 0.0;

}
mallocAddr = (void*)x449;

}
double x3961 = x454;
printf("epoc %d, average_loss %f\n",x453,x3961);
end_0 = clock(); printf("Time elapsed: %f\n", (double)(end_0 - begin_0) / CLOCKS_PER_SEC);

}
}
/*****************************************
  End of C Generated Code                  
*******************************************/

